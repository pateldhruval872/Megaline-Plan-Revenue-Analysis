{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<div>\n",
    "    \n",
    "<b>Hello!</b> We're glad to see you in code-reviewer territory. You've done a great job on the project, but let's get to know each other and make it even better! We have our own atmosphere here and a few rules:\n",
    "\n",
    "\n",
    "1. I work as a code reviewer, and my main goal is not to point out your mistakes, but to share my experience and help you become a data analyst.\n",
    "2. We speak on a first-come-first-served basis.\n",
    "3. if you want to write or ask a question, don't be shy. Just choose your color for your comment.  \n",
    "4. this is a training project, you don't have to be afraid of making a mistake.  \n",
    "5. You have an unlimited number of attempts to pass the project.  \n",
    "6. Let's Go!\n",
    "\n",
    "\n",
    "---\n",
    "I'll be color-coding comments, please don't delete them:\n",
    "\n",
    "<div class=\"alert alert-block alert-danger\">‚úç\n",
    "    \n",
    "\n",
    "__Reviewer's comment ‚Ññ1__\n",
    "\n",
    "Needs fixing. The block requires some corrections. Work can't be accepted with the red comments.\n",
    "</div>\n",
    "    \n",
    "---\n",
    "\n",
    "<div class=\"alert alert-block alert-warning\">üìù\n",
    "    \n",
    "\n",
    "__Reviewer's comment ‚Ññ1__\n",
    "\n",
    "\n",
    "Remarks. Some recommendations.\n",
    "</div>\n",
    "\n",
    "---\n",
    "\n",
    "<div class=\"alert alert-block alert-success\">‚úîÔ∏è\n",
    "    \n",
    "\n",
    "__Reviewer's comment ‚Ññ1__\n",
    "\n",
    "Success. Everything is done succesfully.\n",
    "</div>\n",
    "    \n",
    "---\n",
    "    \n",
    "I suggest that we work on the project in dialogue: if you change something in the project or respond to my comments, write about it. It will be easier for me to track changes if you highlight your comments:   \n",
    "    \n",
    "<div class=\"alert alert-info\"> <b>Student —Åomments:</b> Student answer..</div>\n",
    "    \n",
    "All this will help to make the recheck of your project faster. If you have any questions about my comments, let me know, we'll figure it out together :)   \n",
    "    \n",
    "---"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Which one is a better plan?\n",
    "\n",
    "You work as an analyst for the telecom operator Megaline. The company offers its clients two prepaid plans, Surf and Ultimate. The commercial department wants to know which of the plans brings in more revenue in order to adjust the advertising budget.\n",
    "\n",
    "You are going to carry out a preliminary analysis of the plans based on a relatively small client selection. You'll have the data on 500 Megaline clients: who the clients are, where they're from, which plan they use, and the number of calls they made and text messages they sent in 2018. Your job is to analyze the clients' behavior and determine which prepaid plan brings in more revenue."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "[We've provided you with some commentary to guide your thinking as you complete this project. However, make sure to remove all the bracketed comments before submitting your project.]\n",
    "\n",
    "[Before you dive into analyzing your data, explain for yourself the purpose of the project and actions you plan to take.]\n",
    "\n",
    "[Please bear in mind that studying, amending, and analyzing data is an iterative process. It is normal to return to previous steps and correct/expand them to allow for further steps.]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Project Goal**\n",
    "- The main objective is to determine which of the two prepaid plans, Surf or Ultimate, generates more revenue for the telecom operator Megaline. This analysis will help the commercial department decide how to allocate the advertising budget effectively.\n",
    "\n",
    "**Study Purpose**\n",
    "- By analyzing a sample of 500 Megaline clients, we aim to:\n",
    "\n",
    "    - Understand client behavior in terms of calls, text messages, and data usage.\n",
    "    - Calculate the revenue generated by each plan.\n",
    "    - Identify which plan is more profitable.\n",
    "    - Provide insights to adjust marketing strategies based on the revenue potential of each plan.\n",
    "\n",
    "**Main Steps in the Analysis**\n",
    "    \n",
    "Step 1: Data Loading and Initial Exploration\n",
    "\n",
    "- Objective: Obtain a clear understanding of the dataset and ensure it is complete and accurate.\n",
    "- Actions: Load the dataset, inspect for missing values, and understand the structure and types of data available.\n",
    "\n",
    "Step 2: Data Preparation\n",
    "\n",
    "- Objective: Prepare the data for analysis by applying the necessary rounding rules and calculating usage metrics.\n",
    "- Actions:\n",
    "    - Round each call duration up to the nearest minute.\n",
    "    - Round the total monthly data usage up to the nearest gigabyte.\n",
    "    - Aggregate monthly usage for each client.\n",
    "    \n",
    "Step 3: Feature Engineering\n",
    "\n",
    "- Objective: Create new features that will help in calculating the revenue.\n",
    "- Actions:\n",
    "    - Calculate the total monthly usage per client for minutes, texts, and data.\n",
    "    - Determine any overage usage that incurs additional charges.\n",
    "    \n",
    "Step 4: Revenue Calculation\n",
    "\n",
    "- Objective: Compute the total revenue for each client based on their plan and usage.\n",
    "- Actions:\n",
    "    - For Surf Plan: Sum the base charge (`$20`) and overage charges (if any).\n",
    "    - For Ultimate Plan: Sum the base charge (`$70`) and overage charges (if any).\n",
    "    - Calculate total revenue generated by each plan.\n",
    "    \n",
    "Step 5: Comparative Analysis\n",
    "\n",
    "- Objective: Compare the revenues of the two plans to identify which is more profitable.\n",
    "- Actions:\n",
    "    - Aggregate the total revenue from all clients for each plan.\n",
    "    - Perform statistical analysis to determine if the revenue difference is significant.\n",
    "    \n",
    "Step 6: Visualization\n",
    "\n",
    "- Objective: Create visualizations to illustrate the results of the analysis clearly.\n",
    "- Actions:\n",
    "    - Generate charts to compare the distribution of usage and revenue for each plan.\n",
    "    - Present the findings visually to aid in decision-making."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<div class=\"alert alert-block alert-warning\">üìù\n",
    "    \n",
    "\n",
    "__Reviewer's comment ‚Ññ1__\n",
    "\n",
    "An excellent practice is to describe the goal and main steps in your own words (a skill that will help a lot on a final project). It would be good to add the progress and purpose of the study."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Initialization"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Loading all the libraries\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "from scipy import stats as st\n",
    "import seaborn as sns\n",
    "import math"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Load data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Load the data files into different DataFrames\n",
    "calls = pd.read_csv('/datasets/megaline_calls.csv')\n",
    "internet = pd.read_csv('/datasets/megaline_internet.csv')\n",
    "messages = pd.read_csv('/datasets/megaline_messages.csv')\n",
    "plans = pd.read_csv('/datasets/megaline_plans.csv')\n",
    "users = pd.read_csv('/datasets/megaline_users.csv')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Prepare the data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "[The data for this project is split into several tables. Explore each one to get an initial understanding of the data. Do necessary corrections to each table if necessary.]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Plans"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 2 entries, 0 to 1\n",
      "Data columns (total 8 columns):\n",
      " #   Column                 Non-Null Count  Dtype  \n",
      "---  ------                 --------------  -----  \n",
      " 0   messages_included      2 non-null      int64  \n",
      " 1   mb_per_month_included  2 non-null      int64  \n",
      " 2   minutes_included       2 non-null      int64  \n",
      " 3   usd_monthly_pay        2 non-null      int64  \n",
      " 4   usd_per_gb             2 non-null      int64  \n",
      " 5   usd_per_message        2 non-null      float64\n",
      " 6   usd_per_minute         2 non-null      float64\n",
      " 7   plan_name              2 non-null      object \n",
      "dtypes: float64(2), int64(5), object(1)\n",
      "memory usage: 256.0+ bytes\n"
     ]
    }
   ],
   "source": [
    "# Print the general/summary information about the plans' DataFrame\n",
    "plans.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>messages_included</th>\n",
       "      <th>mb_per_month_included</th>\n",
       "      <th>minutes_included</th>\n",
       "      <th>usd_monthly_pay</th>\n",
       "      <th>usd_per_gb</th>\n",
       "      <th>usd_per_message</th>\n",
       "      <th>usd_per_minute</th>\n",
       "      <th>plan_name</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>50</td>\n",
       "      <td>15360</td>\n",
       "      <td>500</td>\n",
       "      <td>20</td>\n",
       "      <td>10</td>\n",
       "      <td>0.03</td>\n",
       "      <td>0.03</td>\n",
       "      <td>surf</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1000</td>\n",
       "      <td>30720</td>\n",
       "      <td>3000</td>\n",
       "      <td>70</td>\n",
       "      <td>7</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.01</td>\n",
       "      <td>ultimate</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   messages_included  mb_per_month_included  minutes_included  \\\n",
       "0                 50                  15360               500   \n",
       "1               1000                  30720              3000   \n",
       "\n",
       "   usd_monthly_pay  usd_per_gb  usd_per_message  usd_per_minute plan_name  \n",
       "0               20          10             0.03            0.03      surf  \n",
       "1               70           7             0.01            0.01  ultimate  "
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Print a sample of data for plans\n",
    "plans"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "[Describe what you see and notice in the general information and the printed data sample for the above price of data. Are there any issues (inappropriate data types, missing data etc) that may need further investigation and changes? How that can be fixed?] "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**General Information:**\n",
    "\n",
    "- The DataFrame `plans` contains 2 entries and 8 columns.\n",
    "- All columns have non-null values, indicating there are no missing values in this DataFrame.\n",
    "\n",
    "**Printed Sample Data:**\n",
    "\n",
    "- There are two plans listed: `surf` and `ultimate`.\n",
    "\n",
    "1. **Surf plan** includes:\n",
    "    - 50 MB per month, 15360 minutes, and 500 messages.\n",
    "    - Costs `$20` per GB, `$10` per message, and `$0.03` per minute.\n",
    "    - Monthly pay is `$500`.\n",
    "\n",
    "2. **Ultimate plan** includes:\n",
    "    - 1000 MB per month, 30720 minutes, and 3000 messages.\n",
    "    - Costs `$70` per GB, `$7` per message, and `$0.01` per minute.\n",
    "    - Monthly pay is `$3000`.\n",
    "\n",
    "**Observations:**\n",
    "\n",
    "- Data Types:\n",
    "\n",
    "    - The data types appear to be appropriate for the columns. int64 for countable values and float64 for cost-related values seem correct.\n",
    "    - The plan_name as object is also appropriate since it is a categorical variable.\n",
    "\n",
    "- Missing Data:\n",
    "\n",
    "    - There are no missing values, so no imputation or handling of missing data is necessary.\n",
    "    \n",
    "**issues and Fixes:**\n",
    "\n",
    "- Potential Issue with Pricing Columns:\n",
    "\n",
    "    - Although the data types are appropriate, it's good practice to ensure that cost-related columns (usd_per_gb, usd_per_message, usd_per_minute, usd_monthly_pay) are correctly interpreted.\n",
    "    - Ensure Correct Numeric Interpretation\n",
    "   "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<div class=\"alert alert-block alert-success\">‚úîÔ∏è\n",
    "    \n",
    "\n",
    "__Reviewer's comment ‚Ññ1__\n",
    "\n",
    "\n",
    "Great. First look at the data is done"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Fix data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "[Fix obvious issues with the data given the initial observations.]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>messages included</th>\n",
       "      <th>mb included</th>\n",
       "      <th>minutes included</th>\n",
       "      <th>usd monthly charge</th>\n",
       "      <th>usd per gb</th>\n",
       "      <th>usd per message</th>\n",
       "      <th>usd per minute</th>\n",
       "      <th>plan</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>50</td>\n",
       "      <td>15360</td>\n",
       "      <td>500</td>\n",
       "      <td>20</td>\n",
       "      <td>10</td>\n",
       "      <td>0.03</td>\n",
       "      <td>0.03</td>\n",
       "      <td>surf</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1000</td>\n",
       "      <td>30720</td>\n",
       "      <td>3000</td>\n",
       "      <td>70</td>\n",
       "      <td>7</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.01</td>\n",
       "      <td>ultimate</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   messages included  mb included  minutes included  usd monthly charge  \\\n",
       "0                 50        15360               500                  20   \n",
       "1               1000        30720              3000                  70   \n",
       "\n",
       "   usd per gb  usd per message  usd per minute      plan  \n",
       "0          10             0.03            0.03      surf  \n",
       "1           7             0.01            0.01  ultimate  "
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "plans.columns= ['messages included','mb included','minutes included', 'usd monthly charge', 'usd per gb', 'usd per message', 'usd per minute', 'plan']\n",
    "plans"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Enrich data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "[Add additional factors to the data if you believe they might be useful.]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Duplicates Values: 0\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>messages included</th>\n",
       "      <th>mb included</th>\n",
       "      <th>minutes included</th>\n",
       "      <th>usd monthly charge</th>\n",
       "      <th>usd per gb</th>\n",
       "      <th>usd per message</th>\n",
       "      <th>usd per minute</th>\n",
       "      <th>plan</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>50</td>\n",
       "      <td>15360</td>\n",
       "      <td>500</td>\n",
       "      <td>20</td>\n",
       "      <td>10</td>\n",
       "      <td>0.03</td>\n",
       "      <td>0.03</td>\n",
       "      <td>surf</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1000</td>\n",
       "      <td>30720</td>\n",
       "      <td>3000</td>\n",
       "      <td>70</td>\n",
       "      <td>7</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.01</td>\n",
       "      <td>ultimate</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   messages included  mb included  minutes included  usd monthly charge  \\\n",
       "0                 50        15360               500                  20   \n",
       "1               1000        30720              3000                  70   \n",
       "\n",
       "   usd per gb  usd per message  usd per minute      plan  \n",
       "0          10             0.03            0.03      surf  \n",
       "1           7             0.01            0.01  ultimate  "
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "print(f\"Duplicates Values: {users.duplicated().sum()}\")\n",
    "plans"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "There are no Duplicates Values"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Users"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 500 entries, 0 to 499\n",
      "Data columns (total 8 columns):\n",
      " #   Column      Non-Null Count  Dtype \n",
      "---  ------      --------------  ----- \n",
      " 0   user_id     500 non-null    int64 \n",
      " 1   first_name  500 non-null    object\n",
      " 2   last_name   500 non-null    object\n",
      " 3   age         500 non-null    int64 \n",
      " 4   city        500 non-null    object\n",
      " 5   reg_date    500 non-null    object\n",
      " 6   plan        500 non-null    object\n",
      " 7   churn_date  34 non-null     object\n",
      "dtypes: int64(2), object(6)\n",
      "memory usage: 31.4+ KB\n"
     ]
    }
   ],
   "source": [
    "# Print the general/summary information about the users' DataFrame\n",
    "users.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>user_id</th>\n",
       "      <th>first_name</th>\n",
       "      <th>last_name</th>\n",
       "      <th>age</th>\n",
       "      <th>city</th>\n",
       "      <th>reg_date</th>\n",
       "      <th>plan</th>\n",
       "      <th>churn_date</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>429</th>\n",
       "      <td>1429</td>\n",
       "      <td>Arianna</td>\n",
       "      <td>Rowe</td>\n",
       "      <td>36</td>\n",
       "      <td>New York-Newark-Jersey City, NY-NJ-PA MSA</td>\n",
       "      <td>2018-12-22</td>\n",
       "      <td>surf</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>385</th>\n",
       "      <td>1385</td>\n",
       "      <td>Nohemi</td>\n",
       "      <td>Erickson</td>\n",
       "      <td>52</td>\n",
       "      <td>New York-Newark-Jersey City, NY-NJ-PA MSA</td>\n",
       "      <td>2018-01-19</td>\n",
       "      <td>surf</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>469</th>\n",
       "      <td>1469</td>\n",
       "      <td>Rory</td>\n",
       "      <td>Nixon</td>\n",
       "      <td>75</td>\n",
       "      <td>New York-Newark-Jersey City, NY-NJ-PA MSA</td>\n",
       "      <td>2018-06-04</td>\n",
       "      <td>surf</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>128</th>\n",
       "      <td>1128</td>\n",
       "      <td>Lucius</td>\n",
       "      <td>Fernandez</td>\n",
       "      <td>41</td>\n",
       "      <td>Knoxville, TN MSA</td>\n",
       "      <td>2018-01-25</td>\n",
       "      <td>ultimate</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>249</th>\n",
       "      <td>1249</td>\n",
       "      <td>Kelly</td>\n",
       "      <td>Goodman</td>\n",
       "      <td>41</td>\n",
       "      <td>Cincinnati, OH-KY-IN MSA</td>\n",
       "      <td>2018-05-14</td>\n",
       "      <td>ultimate</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     user_id first_name  last_name  age  \\\n",
       "429     1429    Arianna       Rowe   36   \n",
       "385     1385     Nohemi   Erickson   52   \n",
       "469     1469       Rory      Nixon   75   \n",
       "128     1128     Lucius  Fernandez   41   \n",
       "249     1249      Kelly    Goodman   41   \n",
       "\n",
       "                                          city    reg_date      plan  \\\n",
       "429  New York-Newark-Jersey City, NY-NJ-PA MSA  2018-12-22      surf   \n",
       "385  New York-Newark-Jersey City, NY-NJ-PA MSA  2018-01-19      surf   \n",
       "469  New York-Newark-Jersey City, NY-NJ-PA MSA  2018-06-04      surf   \n",
       "128                          Knoxville, TN MSA  2018-01-25  ultimate   \n",
       "249                   Cincinnati, OH-KY-IN MSA  2018-05-14  ultimate   \n",
       "\n",
       "    churn_date  \n",
       "429        NaN  \n",
       "385        NaN  \n",
       "469        NaN  \n",
       "128        NaN  \n",
       "249        NaN  "
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Print a sample of data for users\n",
    "users.sample(5)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "[Describe what you see and notice in the general information and the printed data sample for the above price of data. Are there any issues (inappropriate data types, missing data etc) that may need further investigation and changes? How that can be fixed?]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**General Information:**\n",
    "\n",
    "- The DataFrame users contains 500 entries and 8 columns.\n",
    "\n",
    "- Data types:\n",
    "    - user_id, age are of type int64.\n",
    "    - first_name, last_name, city, reg_date, plan, churn_date are of type object.\n",
    "    \n",
    "- Missing Data:\n",
    "    - The churn_date column has 34 non-null entries, indicating that the majority of users have not churned (are still active).\n",
    "    \n",
    "**Printed Sample Data:**\n",
    "\n",
    "- The sample data shows various user details such as user_id, first_name, last_name, age, city, reg_date, plan, and churn_date.\n",
    "\n",
    "**Observations:**\n",
    "\n",
    "- Data Types:\n",
    "    - The reg_date and churn_date columns should ideally be of datetime type instead of object type for better handling of date-related operations.   \n",
    "    - The plan column should be a categorical type if it contains a limited number of unique values.\n",
    "    \n",
    "- Missing Data:\n",
    "    - The churn_date column has many missing values (466 out of 500). This is expected as it indicates users who have not churned.\n",
    "    \n",
    "**Steps to Fix:**\n",
    "\n",
    "- Convert Date Columns to Datetime.\n",
    "- Convert Plan Column to Categorical."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Fix Data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "[Fix obvious issues with the data given the initial observations.]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>user id</th>\n",
       "      <th>user's name</th>\n",
       "      <th>user's last name</th>\n",
       "      <th>user's age</th>\n",
       "      <th>city</th>\n",
       "      <th>subcripton date</th>\n",
       "      <th>plan</th>\n",
       "      <th>churn date</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1000</td>\n",
       "      <td>Anamaria</td>\n",
       "      <td>Bauer</td>\n",
       "      <td>45</td>\n",
       "      <td>Atlanta-Sandy Springs-Roswell, GA MSA</td>\n",
       "      <td>2018-12-24</td>\n",
       "      <td>ultimate</td>\n",
       "      <td>NaT</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1001</td>\n",
       "      <td>Mickey</td>\n",
       "      <td>Wilkerson</td>\n",
       "      <td>28</td>\n",
       "      <td>Seattle-Tacoma-Bellevue, WA MSA</td>\n",
       "      <td>2018-08-13</td>\n",
       "      <td>surf</td>\n",
       "      <td>NaT</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1002</td>\n",
       "      <td>Carlee</td>\n",
       "      <td>Hoffman</td>\n",
       "      <td>36</td>\n",
       "      <td>Las Vegas-Henderson-Paradise, NV MSA</td>\n",
       "      <td>2018-10-21</td>\n",
       "      <td>surf</td>\n",
       "      <td>NaT</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1003</td>\n",
       "      <td>Reynaldo</td>\n",
       "      <td>Jenkins</td>\n",
       "      <td>52</td>\n",
       "      <td>Tulsa, OK MSA</td>\n",
       "      <td>2018-01-28</td>\n",
       "      <td>surf</td>\n",
       "      <td>NaT</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1004</td>\n",
       "      <td>Leonila</td>\n",
       "      <td>Thompson</td>\n",
       "      <td>40</td>\n",
       "      <td>Seattle-Tacoma-Bellevue, WA MSA</td>\n",
       "      <td>2018-05-23</td>\n",
       "      <td>surf</td>\n",
       "      <td>NaT</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>495</th>\n",
       "      <td>1495</td>\n",
       "      <td>Fidel</td>\n",
       "      <td>Sharpe</td>\n",
       "      <td>67</td>\n",
       "      <td>New York-Newark-Jersey City, NY-NJ-PA MSA</td>\n",
       "      <td>2018-09-04</td>\n",
       "      <td>surf</td>\n",
       "      <td>NaT</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>496</th>\n",
       "      <td>1496</td>\n",
       "      <td>Ariel</td>\n",
       "      <td>Shepherd</td>\n",
       "      <td>49</td>\n",
       "      <td>New Orleans-Metairie, LA MSA</td>\n",
       "      <td>2018-02-20</td>\n",
       "      <td>surf</td>\n",
       "      <td>NaT</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>497</th>\n",
       "      <td>1497</td>\n",
       "      <td>Donte</td>\n",
       "      <td>Barrera</td>\n",
       "      <td>49</td>\n",
       "      <td>Los Angeles-Long Beach-Anaheim, CA MSA</td>\n",
       "      <td>2018-12-10</td>\n",
       "      <td>ultimate</td>\n",
       "      <td>NaT</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>498</th>\n",
       "      <td>1498</td>\n",
       "      <td>Scot</td>\n",
       "      <td>Williamson</td>\n",
       "      <td>51</td>\n",
       "      <td>New York-Newark-Jersey City, NY-NJ-PA MSA</td>\n",
       "      <td>2018-02-04</td>\n",
       "      <td>surf</td>\n",
       "      <td>NaT</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>499</th>\n",
       "      <td>1499</td>\n",
       "      <td>Shena</td>\n",
       "      <td>Dickson</td>\n",
       "      <td>37</td>\n",
       "      <td>Orlando-Kissimmee-Sanford, FL MSA</td>\n",
       "      <td>2018-05-06</td>\n",
       "      <td>surf</td>\n",
       "      <td>NaT</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>500 rows √ó 8 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     user id user's name user's last name  user's age  \\\n",
       "0       1000    Anamaria            Bauer          45   \n",
       "1       1001      Mickey        Wilkerson          28   \n",
       "2       1002      Carlee          Hoffman          36   \n",
       "3       1003    Reynaldo          Jenkins          52   \n",
       "4       1004     Leonila         Thompson          40   \n",
       "..       ...         ...              ...         ...   \n",
       "495     1495       Fidel           Sharpe          67   \n",
       "496     1496       Ariel         Shepherd          49   \n",
       "497     1497       Donte          Barrera          49   \n",
       "498     1498        Scot       Williamson          51   \n",
       "499     1499       Shena          Dickson          37   \n",
       "\n",
       "                                          city subcripton date      plan  \\\n",
       "0        Atlanta-Sandy Springs-Roswell, GA MSA      2018-12-24  ultimate   \n",
       "1              Seattle-Tacoma-Bellevue, WA MSA      2018-08-13      surf   \n",
       "2         Las Vegas-Henderson-Paradise, NV MSA      2018-10-21      surf   \n",
       "3                                Tulsa, OK MSA      2018-01-28      surf   \n",
       "4              Seattle-Tacoma-Bellevue, WA MSA      2018-05-23      surf   \n",
       "..                                         ...             ...       ...   \n",
       "495  New York-Newark-Jersey City, NY-NJ-PA MSA      2018-09-04      surf   \n",
       "496               New Orleans-Metairie, LA MSA      2018-02-20      surf   \n",
       "497     Los Angeles-Long Beach-Anaheim, CA MSA      2018-12-10  ultimate   \n",
       "498  New York-Newark-Jersey City, NY-NJ-PA MSA      2018-02-04      surf   \n",
       "499          Orlando-Kissimmee-Sanford, FL MSA      2018-05-06      surf   \n",
       "\n",
       "    churn date  \n",
       "0          NaT  \n",
       "1          NaT  \n",
       "2          NaT  \n",
       "3          NaT  \n",
       "4          NaT  \n",
       "..         ...  \n",
       "495        NaT  \n",
       "496        NaT  \n",
       "497        NaT  \n",
       "498        NaT  \n",
       "499        NaT  \n",
       "\n",
       "[500 rows x 8 columns]"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "users['reg_date'] = pd.to_datetime(users['reg_date'], format ='%Y-%m-%d')\n",
    "users['churn_date'] = pd.to_datetime(users['churn_date'], format ='%Y-%m-%d')\n",
    "users['plan'] = users['plan'].astype('category')\n",
    "users.columns = ['user id', 'user\\'s name', 'user\\'s last name', 'user\\'s age', 'city', 'subcripton date', 'plan', 'churn date']\n",
    "users"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Enrich Data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "[Add additional factors to the data if you believe they might be useful.]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Duplicates Values: 0\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>user id</th>\n",
       "      <th>user's name</th>\n",
       "      <th>user's last name</th>\n",
       "      <th>user's age</th>\n",
       "      <th>city</th>\n",
       "      <th>subcripton date</th>\n",
       "      <th>plan</th>\n",
       "      <th>churn date</th>\n",
       "      <th>customer churn</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1000</td>\n",
       "      <td>Anamaria</td>\n",
       "      <td>Bauer</td>\n",
       "      <td>45</td>\n",
       "      <td>Atlanta-Sandy Springs-Roswell, GA MSA</td>\n",
       "      <td>2018-12-24</td>\n",
       "      <td>ultimate</td>\n",
       "      <td>NaT</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1001</td>\n",
       "      <td>Mickey</td>\n",
       "      <td>Wilkerson</td>\n",
       "      <td>28</td>\n",
       "      <td>Seattle-Tacoma-Bellevue, WA MSA</td>\n",
       "      <td>2018-08-13</td>\n",
       "      <td>surf</td>\n",
       "      <td>NaT</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1002</td>\n",
       "      <td>Carlee</td>\n",
       "      <td>Hoffman</td>\n",
       "      <td>36</td>\n",
       "      <td>Las Vegas-Henderson-Paradise, NV MSA</td>\n",
       "      <td>2018-10-21</td>\n",
       "      <td>surf</td>\n",
       "      <td>NaT</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1003</td>\n",
       "      <td>Reynaldo</td>\n",
       "      <td>Jenkins</td>\n",
       "      <td>52</td>\n",
       "      <td>Tulsa, OK MSA</td>\n",
       "      <td>2018-01-28</td>\n",
       "      <td>surf</td>\n",
       "      <td>NaT</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1004</td>\n",
       "      <td>Leonila</td>\n",
       "      <td>Thompson</td>\n",
       "      <td>40</td>\n",
       "      <td>Seattle-Tacoma-Bellevue, WA MSA</td>\n",
       "      <td>2018-05-23</td>\n",
       "      <td>surf</td>\n",
       "      <td>NaT</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>495</th>\n",
       "      <td>1495</td>\n",
       "      <td>Fidel</td>\n",
       "      <td>Sharpe</td>\n",
       "      <td>67</td>\n",
       "      <td>New York-Newark-Jersey City, NY-NJ-PA MSA</td>\n",
       "      <td>2018-09-04</td>\n",
       "      <td>surf</td>\n",
       "      <td>NaT</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>496</th>\n",
       "      <td>1496</td>\n",
       "      <td>Ariel</td>\n",
       "      <td>Shepherd</td>\n",
       "      <td>49</td>\n",
       "      <td>New Orleans-Metairie, LA MSA</td>\n",
       "      <td>2018-02-20</td>\n",
       "      <td>surf</td>\n",
       "      <td>NaT</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>497</th>\n",
       "      <td>1497</td>\n",
       "      <td>Donte</td>\n",
       "      <td>Barrera</td>\n",
       "      <td>49</td>\n",
       "      <td>Los Angeles-Long Beach-Anaheim, CA MSA</td>\n",
       "      <td>2018-12-10</td>\n",
       "      <td>ultimate</td>\n",
       "      <td>NaT</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>498</th>\n",
       "      <td>1498</td>\n",
       "      <td>Scot</td>\n",
       "      <td>Williamson</td>\n",
       "      <td>51</td>\n",
       "      <td>New York-Newark-Jersey City, NY-NJ-PA MSA</td>\n",
       "      <td>2018-02-04</td>\n",
       "      <td>surf</td>\n",
       "      <td>NaT</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>499</th>\n",
       "      <td>1499</td>\n",
       "      <td>Shena</td>\n",
       "      <td>Dickson</td>\n",
       "      <td>37</td>\n",
       "      <td>Orlando-Kissimmee-Sanford, FL MSA</td>\n",
       "      <td>2018-05-06</td>\n",
       "      <td>surf</td>\n",
       "      <td>NaT</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>500 rows √ó 9 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     user id user's name user's last name  user's age  \\\n",
       "0       1000    Anamaria            Bauer          45   \n",
       "1       1001      Mickey        Wilkerson          28   \n",
       "2       1002      Carlee          Hoffman          36   \n",
       "3       1003    Reynaldo          Jenkins          52   \n",
       "4       1004     Leonila         Thompson          40   \n",
       "..       ...         ...              ...         ...   \n",
       "495     1495       Fidel           Sharpe          67   \n",
       "496     1496       Ariel         Shepherd          49   \n",
       "497     1497       Donte          Barrera          49   \n",
       "498     1498        Scot       Williamson          51   \n",
       "499     1499       Shena          Dickson          37   \n",
       "\n",
       "                                          city subcripton date      plan  \\\n",
       "0        Atlanta-Sandy Springs-Roswell, GA MSA      2018-12-24  ultimate   \n",
       "1              Seattle-Tacoma-Bellevue, WA MSA      2018-08-13      surf   \n",
       "2         Las Vegas-Henderson-Paradise, NV MSA      2018-10-21      surf   \n",
       "3                                Tulsa, OK MSA      2018-01-28      surf   \n",
       "4              Seattle-Tacoma-Bellevue, WA MSA      2018-05-23      surf   \n",
       "..                                         ...             ...       ...   \n",
       "495  New York-Newark-Jersey City, NY-NJ-PA MSA      2018-09-04      surf   \n",
       "496               New Orleans-Metairie, LA MSA      2018-02-20      surf   \n",
       "497     Los Angeles-Long Beach-Anaheim, CA MSA      2018-12-10  ultimate   \n",
       "498  New York-Newark-Jersey City, NY-NJ-PA MSA      2018-02-04      surf   \n",
       "499          Orlando-Kissimmee-Sanford, FL MSA      2018-05-06      surf   \n",
       "\n",
       "    churn date customer churn  \n",
       "0          NaT             No  \n",
       "1          NaT             No  \n",
       "2          NaT             No  \n",
       "3          NaT             No  \n",
       "4          NaT             No  \n",
       "..         ...            ...  \n",
       "495        NaT             No  \n",
       "496        NaT             No  \n",
       "497        NaT             No  \n",
       "498        NaT             No  \n",
       "499        NaT             No  \n",
       "\n",
       "[500 rows x 9 columns]"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "print(f\"Duplicates Values: {users.duplicated().sum()}\")\n",
    "users['customer churn'] = np.where(users['churn date'].isnull(), 'No', 'Yes')\n",
    "users"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Calls"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 137735 entries, 0 to 137734\n",
      "Data columns (total 4 columns):\n",
      " #   Column     Non-Null Count   Dtype  \n",
      "---  ------     --------------   -----  \n",
      " 0   id         137735 non-null  object \n",
      " 1   user_id    137735 non-null  int64  \n",
      " 2   call_date  137735 non-null  object \n",
      " 3   duration   137735 non-null  float64\n",
      "dtypes: float64(1), int64(1), object(2)\n",
      "memory usage: 4.2+ MB\n"
     ]
    }
   ],
   "source": [
    "# Print the general/summary information about the calls' DataFrame\n",
    "calls.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>user_id</th>\n",
       "      <th>call_date</th>\n",
       "      <th>duration</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>106970</th>\n",
       "      <td>1379_168</td>\n",
       "      <td>1379</td>\n",
       "      <td>2018-12-27</td>\n",
       "      <td>3.57</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1998</th>\n",
       "      <td>1009_420</td>\n",
       "      <td>1009</td>\n",
       "      <td>2018-08-13</td>\n",
       "      <td>11.23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>49815</th>\n",
       "      <td>1181_18</td>\n",
       "      <td>1181</td>\n",
       "      <td>2018-05-04</td>\n",
       "      <td>13.12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>42445</th>\n",
       "      <td>1156_50</td>\n",
       "      <td>1156</td>\n",
       "      <td>2018-09-26</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>79015</th>\n",
       "      <td>1282_563</td>\n",
       "      <td>1282</td>\n",
       "      <td>2018-12-03</td>\n",
       "      <td>8.87</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "              id  user_id   call_date  duration\n",
       "106970  1379_168     1379  2018-12-27      3.57\n",
       "1998    1009_420     1009  2018-08-13     11.23\n",
       "49815    1181_18     1181  2018-05-04     13.12\n",
       "42445    1156_50     1156  2018-09-26      0.00\n",
       "79015   1282_563     1282  2018-12-03      8.87"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Print a sample of data for calls\n",
    "calls.sample(5)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "[Describe what you see and notice in the general information and the printed data sample for the above price of data. Are there any issues (inappropriate data types, missing data etc) that may need further investigation and changes? How that can be fixed?]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**General Information:**\n",
    "\n",
    "- The DataFrame calls contains 137,735 entries and 4 columns.\n",
    "\n",
    "- Data types:\n",
    "    - id and call_date are of type object.\n",
    "    - user_id is of type int64.\n",
    "    - duration is of type float64.\n",
    "    \n",
    "- There are no missing values in the dataset, as all columns have 137,735 non-null entries. \n",
    "\n",
    "**Printed Sample Data:**\n",
    "\n",
    "- The sample data shows various call details such as id, user_id, call_date, and duration.\n",
    "\n",
    "**Observations:**\n",
    "\n",
    "- Data Types:\n",
    "\n",
    "    - The call_date column should be of datetime type instead of object type for better handling of date-related operations.\n",
    "    \n",
    "- Missing Data:\n",
    "\n",
    "    - There are no missing values in the dataset, so no imputation or handling of missing data is necessary.\n",
    "    \n",
    "    "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Fix data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "[Fix obvious issues with the data given the initial observations.]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 137735 entries, 0 to 137734\n",
      "Data columns (total 4 columns):\n",
      " #   Column     Non-Null Count   Dtype         \n",
      "---  ------     --------------   -----         \n",
      " 0   id         137735 non-null  int64         \n",
      " 1   user_id    137735 non-null  int64         \n",
      " 2   call_date  137735 non-null  datetime64[ns]\n",
      " 3   duration   137735 non-null  int64         \n",
      "dtypes: datetime64[ns](1), int64(3)\n",
      "memory usage: 4.2 MB\n"
     ]
    }
   ],
   "source": [
    "calls['id'] = calls['id'].astype(int)\n",
    "calls['call_date'] = pd.to_datetime(calls['call_date'], format ='%Y-%m-%d')\n",
    "calls['duration'] = calls['duration'].apply(lambda x: math.ceil(x))\n",
    "calls.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<div class=\"alert alert-block alert-success\">‚úîÔ∏è\n",
    "    \n",
    "\n",
    "__Reviewer's comment ‚Ññ1__\n",
    "\n",
    "Good for you for using the np.ceil() method\n",
    "    "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Enrich data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "[Add additional factors to the data if you believe they might be useful.]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Duplicates Values: 0\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>user id</th>\n",
       "      <th>call date</th>\n",
       "      <th>duration(min)</th>\n",
       "      <th>call type</th>\n",
       "      <th>day</th>\n",
       "      <th>month</th>\n",
       "      <th>year</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>100093</td>\n",
       "      <td>1000</td>\n",
       "      <td>2018-12-27</td>\n",
       "      <td>9</td>\n",
       "      <td>Connected Call</td>\n",
       "      <td>Thursday</td>\n",
       "      <td>12</td>\n",
       "      <td>2018</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1000145</td>\n",
       "      <td>1000</td>\n",
       "      <td>2018-12-27</td>\n",
       "      <td>14</td>\n",
       "      <td>Connected Call</td>\n",
       "      <td>Thursday</td>\n",
       "      <td>12</td>\n",
       "      <td>2018</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1000247</td>\n",
       "      <td>1000</td>\n",
       "      <td>2018-12-27</td>\n",
       "      <td>15</td>\n",
       "      <td>Connected Call</td>\n",
       "      <td>Thursday</td>\n",
       "      <td>12</td>\n",
       "      <td>2018</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1000309</td>\n",
       "      <td>1000</td>\n",
       "      <td>2018-12-28</td>\n",
       "      <td>6</td>\n",
       "      <td>Connected Call</td>\n",
       "      <td>Friday</td>\n",
       "      <td>12</td>\n",
       "      <td>2018</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1000380</td>\n",
       "      <td>1000</td>\n",
       "      <td>2018-12-30</td>\n",
       "      <td>5</td>\n",
       "      <td>Connected Call</td>\n",
       "      <td>Sunday</td>\n",
       "      <td>12</td>\n",
       "      <td>2018</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137730</th>\n",
       "      <td>1499199</td>\n",
       "      <td>1499</td>\n",
       "      <td>2018-11-21</td>\n",
       "      <td>9</td>\n",
       "      <td>Connected Call</td>\n",
       "      <td>Wednesday</td>\n",
       "      <td>11</td>\n",
       "      <td>2018</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137731</th>\n",
       "      <td>1499200</td>\n",
       "      <td>1499</td>\n",
       "      <td>2018-10-20</td>\n",
       "      <td>11</td>\n",
       "      <td>Connected Call</td>\n",
       "      <td>Saturday</td>\n",
       "      <td>10</td>\n",
       "      <td>2018</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137732</th>\n",
       "      <td>1499201</td>\n",
       "      <td>1499</td>\n",
       "      <td>2018-09-21</td>\n",
       "      <td>9</td>\n",
       "      <td>Connected Call</td>\n",
       "      <td>Friday</td>\n",
       "      <td>9</td>\n",
       "      <td>2018</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137733</th>\n",
       "      <td>1499202</td>\n",
       "      <td>1499</td>\n",
       "      <td>2018-10-10</td>\n",
       "      <td>1</td>\n",
       "      <td>Connected Call</td>\n",
       "      <td>Wednesday</td>\n",
       "      <td>10</td>\n",
       "      <td>2018</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137734</th>\n",
       "      <td>1499203</td>\n",
       "      <td>1499</td>\n",
       "      <td>2018-12-29</td>\n",
       "      <td>14</td>\n",
       "      <td>Connected Call</td>\n",
       "      <td>Saturday</td>\n",
       "      <td>12</td>\n",
       "      <td>2018</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>137735 rows √ó 8 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "             id  user id  call date  duration(min)       call type        day  \\\n",
       "0        100093     1000 2018-12-27              9  Connected Call   Thursday   \n",
       "1       1000145     1000 2018-12-27             14  Connected Call   Thursday   \n",
       "2       1000247     1000 2018-12-27             15  Connected Call   Thursday   \n",
       "3       1000309     1000 2018-12-28              6  Connected Call     Friday   \n",
       "4       1000380     1000 2018-12-30              5  Connected Call     Sunday   \n",
       "...         ...      ...        ...            ...             ...        ...   \n",
       "137730  1499199     1499 2018-11-21              9  Connected Call  Wednesday   \n",
       "137731  1499200     1499 2018-10-20             11  Connected Call   Saturday   \n",
       "137732  1499201     1499 2018-09-21              9  Connected Call     Friday   \n",
       "137733  1499202     1499 2018-10-10              1  Connected Call  Wednesday   \n",
       "137734  1499203     1499 2018-12-29             14  Connected Call   Saturday   \n",
       "\n",
       "        month  year  \n",
       "0          12  2018  \n",
       "1          12  2018  \n",
       "2          12  2018  \n",
       "3          12  2018  \n",
       "4          12  2018  \n",
       "...       ...   ...  \n",
       "137730     11  2018  \n",
       "137731     10  2018  \n",
       "137732      9  2018  \n",
       "137733     10  2018  \n",
       "137734     12  2018  \n",
       "\n",
       "[137735 rows x 8 columns]"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "calls.columns = ['id', 'user id', 'call date', 'duration(min)']\n",
    "calls['call type'] = np.where(calls['duration(min)']==0, 'Missed Call', 'Connected Call')\n",
    "calls['day'] = calls['call date'].dt.day_name()\n",
    "calls['month'] = calls['call date'].dt.month\n",
    "calls['year'] = calls['call date'].dt.year\n",
    "print(f\"Duplicates Values: {calls.duplicated().sum()}\")\n",
    "calls"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<div class=\"alert alert-block alert-success\">‚úîÔ∏è\n",
    "    \n",
    "\n",
    "__Reviewer's comment ‚Ññ2__\n",
    "\n",
    "Duplicate checking is the basis of data preprocessing"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Messages"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 76051 entries, 0 to 76050\n",
      "Data columns (total 3 columns):\n",
      " #   Column        Non-Null Count  Dtype \n",
      "---  ------        --------------  ----- \n",
      " 0   id            76051 non-null  object\n",
      " 1   user_id       76051 non-null  int64 \n",
      " 2   message_date  76051 non-null  object\n",
      "dtypes: int64(1), object(2)\n",
      "memory usage: 1.7+ MB\n"
     ]
    }
   ],
   "source": [
    "# Print the general/summary information about the messages' DataFrame\n",
    "messages.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>user_id</th>\n",
       "      <th>message_date</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>8248</th>\n",
       "      <td>1061_254</td>\n",
       "      <td>1061</td>\n",
       "      <td>2018-08-02</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>44586</th>\n",
       "      <td>1298_42</td>\n",
       "      <td>1298</td>\n",
       "      <td>2018-12-31</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12378</th>\n",
       "      <td>1081_128</td>\n",
       "      <td>1081</td>\n",
       "      <td>2018-09-15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17335</th>\n",
       "      <td>1114_184</td>\n",
       "      <td>1114</td>\n",
       "      <td>2018-07-27</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21857</th>\n",
       "      <td>1132_1370</td>\n",
       "      <td>1132</td>\n",
       "      <td>2018-04-30</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "              id  user_id message_date\n",
       "8248    1061_254     1061   2018-08-02\n",
       "44586    1298_42     1298   2018-12-31\n",
       "12378   1081_128     1081   2018-09-15\n",
       "17335   1114_184     1114   2018-07-27\n",
       "21857  1132_1370     1132   2018-04-30"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Print a sample of data for messages\n",
    "messages.sample(5)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "[Describe what you see and notice in the general information and the printed data sample for the above price of data. Are there any issues (inappropriate data types, missing data etc) that may need further investigation and changes? How that can be fixed?]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**General Information:**\n",
    "\n",
    "- The DataFrame messages contains 76,051 entries and 3 columns.\n",
    "- Data types:\n",
    "    - id and message_date are of type object.\n",
    "    - user_id is of type int64.\n",
    "- There are no missing values in the dataset, as all columns have 76,051 non-null entries.\n",
    "\n",
    "**Printed Sample Data:**\n",
    "\n",
    "- The sample data shows various message details such as id, user_id, and message_date.\n",
    "\n",
    "**Observations:**\n",
    "\n",
    "- Data Types:\n",
    "\n",
    "    - The message_date column should be of datetime type instead of object type for better handling of date-related operations.\n",
    "\n",
    "- Missing Data:\n",
    "\n",
    "    - There are no missing values in the dataset, so no imputation or handling of missing data is necessary.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Fix data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "[Fix obvious issues with the data given the initial observations.]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 76051 entries, 0 to 76050\n",
      "Data columns (total 3 columns):\n",
      " #   Column        Non-Null Count  Dtype         \n",
      "---  ------        --------------  -----         \n",
      " 0   id            76051 non-null  int64         \n",
      " 1   user_id       76051 non-null  int64         \n",
      " 2   message_date  76051 non-null  datetime64[ns]\n",
      "dtypes: datetime64[ns](1), int64(2)\n",
      "memory usage: 1.7 MB\n"
     ]
    }
   ],
   "source": [
    "messages['id'] = messages['id'].astype(int)\n",
    "messages['message_date'] = pd.to_datetime(messages['message_date'], format = '%Y-%m-%d')\n",
    "messages.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Enrich data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "[Add additional factors to the data if you believe they might be useful.]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Duplicates Values: 0\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>user id</th>\n",
       "      <th>message date</th>\n",
       "      <th>day</th>\n",
       "      <th>month</th>\n",
       "      <th>year</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1000125</td>\n",
       "      <td>1000</td>\n",
       "      <td>2018-12-27</td>\n",
       "      <td>Thursday</td>\n",
       "      <td>12</td>\n",
       "      <td>2018</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1000160</td>\n",
       "      <td>1000</td>\n",
       "      <td>2018-12-31</td>\n",
       "      <td>Monday</td>\n",
       "      <td>12</td>\n",
       "      <td>2018</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1000223</td>\n",
       "      <td>1000</td>\n",
       "      <td>2018-12-31</td>\n",
       "      <td>Monday</td>\n",
       "      <td>12</td>\n",
       "      <td>2018</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1000251</td>\n",
       "      <td>1000</td>\n",
       "      <td>2018-12-27</td>\n",
       "      <td>Thursday</td>\n",
       "      <td>12</td>\n",
       "      <td>2018</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1000255</td>\n",
       "      <td>1000</td>\n",
       "      <td>2018-12-26</td>\n",
       "      <td>Wednesday</td>\n",
       "      <td>12</td>\n",
       "      <td>2018</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>76046</th>\n",
       "      <td>1497526</td>\n",
       "      <td>1497</td>\n",
       "      <td>2018-12-24</td>\n",
       "      <td>Monday</td>\n",
       "      <td>12</td>\n",
       "      <td>2018</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>76047</th>\n",
       "      <td>1497536</td>\n",
       "      <td>1497</td>\n",
       "      <td>2018-12-24</td>\n",
       "      <td>Monday</td>\n",
       "      <td>12</td>\n",
       "      <td>2018</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>76048</th>\n",
       "      <td>1497547</td>\n",
       "      <td>1497</td>\n",
       "      <td>2018-12-31</td>\n",
       "      <td>Monday</td>\n",
       "      <td>12</td>\n",
       "      <td>2018</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>76049</th>\n",
       "      <td>1497558</td>\n",
       "      <td>1497</td>\n",
       "      <td>2018-12-24</td>\n",
       "      <td>Monday</td>\n",
       "      <td>12</td>\n",
       "      <td>2018</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>76050</th>\n",
       "      <td>1497613</td>\n",
       "      <td>1497</td>\n",
       "      <td>2018-12-23</td>\n",
       "      <td>Sunday</td>\n",
       "      <td>12</td>\n",
       "      <td>2018</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>76051 rows √ó 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            id  user id message date        day  month  year\n",
       "0      1000125     1000   2018-12-27   Thursday     12  2018\n",
       "1      1000160     1000   2018-12-31     Monday     12  2018\n",
       "2      1000223     1000   2018-12-31     Monday     12  2018\n",
       "3      1000251     1000   2018-12-27   Thursday     12  2018\n",
       "4      1000255     1000   2018-12-26  Wednesday     12  2018\n",
       "...        ...      ...          ...        ...    ...   ...\n",
       "76046  1497526     1497   2018-12-24     Monday     12  2018\n",
       "76047  1497536     1497   2018-12-24     Monday     12  2018\n",
       "76048  1497547     1497   2018-12-31     Monday     12  2018\n",
       "76049  1497558     1497   2018-12-24     Monday     12  2018\n",
       "76050  1497613     1497   2018-12-23     Sunday     12  2018\n",
       "\n",
       "[76051 rows x 6 columns]"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "messages.columns = ['id', 'user id', 'message date']\n",
    "messages['day'] = messages['message date'].dt.day_name()\n",
    "messages['month'] = messages['message date'].dt.month\n",
    "messages['year'] = messages['message date'].dt.year\n",
    "print(f\"Duplicates Values: {messages.duplicated().sum()}\")\n",
    "messages"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Internet"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 104825 entries, 0 to 104824\n",
      "Data columns (total 4 columns):\n",
      " #   Column        Non-Null Count   Dtype  \n",
      "---  ------        --------------   -----  \n",
      " 0   id            104825 non-null  object \n",
      " 1   user_id       104825 non-null  int64  \n",
      " 2   session_date  104825 non-null  object \n",
      " 3   mb_used       104825 non-null  float64\n",
      "dtypes: float64(1), int64(1), object(2)\n",
      "memory usage: 3.2+ MB\n"
     ]
    }
   ],
   "source": [
    "# Print the general/summary information about the internet DataFrame\n",
    "internet.info()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>user_id</th>\n",
       "      <th>session_date</th>\n",
       "      <th>mb_used</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>50822</th>\n",
       "      <td>1226_303</td>\n",
       "      <td>1226</td>\n",
       "      <td>2018-11-17</td>\n",
       "      <td>464.77</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>103088</th>\n",
       "      <td>1493_206</td>\n",
       "      <td>1493</td>\n",
       "      <td>2018-08-14</td>\n",
       "      <td>952.41</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45986</th>\n",
       "      <td>1203_311</td>\n",
       "      <td>1203</td>\n",
       "      <td>2018-12-11</td>\n",
       "      <td>534.29</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>71299</th>\n",
       "      <td>1332_272</td>\n",
       "      <td>1332</td>\n",
       "      <td>2018-10-09</td>\n",
       "      <td>508.15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57475</th>\n",
       "      <td>1259_16</td>\n",
       "      <td>1259</td>\n",
       "      <td>2018-05-20</td>\n",
       "      <td>445.27</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "              id  user_id session_date  mb_used\n",
       "50822   1226_303     1226   2018-11-17   464.77\n",
       "103088  1493_206     1493   2018-08-14   952.41\n",
       "45986   1203_311     1203   2018-12-11   534.29\n",
       "71299   1332_272     1332   2018-10-09   508.15\n",
       "57475    1259_16     1259   2018-05-20   445.27"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Print a sample of data for the internet traffic\n",
    "internet.sample(5)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "[Describe what you see and notice in the general information and the printed data sample for the above price of data. Are there any issues (inappropriate data types, missing data etc) that may need further investigation and changes? How that can be fixed?]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**General Information:**\n",
    "\n",
    "- The DataFrame internet contains 104,825 entries and 4 columns.\n",
    "- Data types:\n",
    "    - id and session_date are of type object.\n",
    "    - user_id is of type int64.\n",
    "    - mb_used is of type float64.\n",
    "- There are no missing values in the dataset, as all columns have 104,825 non-null entries.\n",
    "\n",
    "**Printed Sample Data:**\n",
    "\n",
    "- The sample data shows various internet usage details such as id, user_id, session_date, and mb_used.\n",
    "\n",
    "**Observations:**\n",
    "\n",
    "- Data Types:\n",
    "\n",
    "    - The session_date column should be of datetime type instead of object type for better handling of date-related operations.\n",
    "\n",
    "**Missing Data:**\n",
    "\n",
    "- There are no missing values in the dataset, so no imputation or handling of missing data is necessary. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<div class=\"alert alert-block alert-success\">‚úîÔ∏è\n",
    "    \n",
    "\n",
    "__Reviewer's comment ‚Ññ1__\n",
    "\n",
    "I agree"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Fix data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "[Fix obvious issues with the data given the initial observations.]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [],
   "source": [
    "internet['id'] = internet['id'].astype(int)\n",
    "internet['session_date'] = pd.to_datetime(internet['session_date'], format= '%Y-%m-%d')\n",
    "internet['mb_used'] = internet['mb_used'].apply(lambda x: math.ceil(x))\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Enrich data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "[Add additional factors to the data if you believe they might be useful.]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Duplicates Values: 0\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>user id</th>\n",
       "      <th>session date</th>\n",
       "      <th>data used</th>\n",
       "      <th>day</th>\n",
       "      <th>month</th>\n",
       "      <th>year</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>100013</td>\n",
       "      <td>1000</td>\n",
       "      <td>2018-12-29</td>\n",
       "      <td>90</td>\n",
       "      <td>Saturday</td>\n",
       "      <td>12</td>\n",
       "      <td>2018</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1000204</td>\n",
       "      <td>1000</td>\n",
       "      <td>2018-12-31</td>\n",
       "      <td>0</td>\n",
       "      <td>Monday</td>\n",
       "      <td>12</td>\n",
       "      <td>2018</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1000379</td>\n",
       "      <td>1000</td>\n",
       "      <td>2018-12-28</td>\n",
       "      <td>661</td>\n",
       "      <td>Friday</td>\n",
       "      <td>12</td>\n",
       "      <td>2018</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1000413</td>\n",
       "      <td>1000</td>\n",
       "      <td>2018-12-26</td>\n",
       "      <td>271</td>\n",
       "      <td>Wednesday</td>\n",
       "      <td>12</td>\n",
       "      <td>2018</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1000442</td>\n",
       "      <td>1000</td>\n",
       "      <td>2018-12-27</td>\n",
       "      <td>881</td>\n",
       "      <td>Thursday</td>\n",
       "      <td>12</td>\n",
       "      <td>2018</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>104820</th>\n",
       "      <td>1499215</td>\n",
       "      <td>1499</td>\n",
       "      <td>2018-10-20</td>\n",
       "      <td>219</td>\n",
       "      <td>Saturday</td>\n",
       "      <td>10</td>\n",
       "      <td>2018</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>104821</th>\n",
       "      <td>1499216</td>\n",
       "      <td>1499</td>\n",
       "      <td>2018-12-30</td>\n",
       "      <td>305</td>\n",
       "      <td>Sunday</td>\n",
       "      <td>12</td>\n",
       "      <td>2018</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>104822</th>\n",
       "      <td>1499217</td>\n",
       "      <td>1499</td>\n",
       "      <td>2018-09-22</td>\n",
       "      <td>293</td>\n",
       "      <td>Saturday</td>\n",
       "      <td>9</td>\n",
       "      <td>2018</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>104823</th>\n",
       "      <td>1499218</td>\n",
       "      <td>1499</td>\n",
       "      <td>2018-12-07</td>\n",
       "      <td>0</td>\n",
       "      <td>Friday</td>\n",
       "      <td>12</td>\n",
       "      <td>2018</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>104824</th>\n",
       "      <td>1499219</td>\n",
       "      <td>1499</td>\n",
       "      <td>2018-12-24</td>\n",
       "      <td>759</td>\n",
       "      <td>Monday</td>\n",
       "      <td>12</td>\n",
       "      <td>2018</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>104825 rows √ó 7 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "             id  user id session date  data used        day  month  year\n",
       "0        100013     1000   2018-12-29         90   Saturday     12  2018\n",
       "1       1000204     1000   2018-12-31          0     Monday     12  2018\n",
       "2       1000379     1000   2018-12-28        661     Friday     12  2018\n",
       "3       1000413     1000   2018-12-26        271  Wednesday     12  2018\n",
       "4       1000442     1000   2018-12-27        881   Thursday     12  2018\n",
       "...         ...      ...          ...        ...        ...    ...   ...\n",
       "104820  1499215     1499   2018-10-20        219   Saturday     10  2018\n",
       "104821  1499216     1499   2018-12-30        305     Sunday     12  2018\n",
       "104822  1499217     1499   2018-09-22        293   Saturday      9  2018\n",
       "104823  1499218     1499   2018-12-07          0     Friday     12  2018\n",
       "104824  1499219     1499   2018-12-24        759     Monday     12  2018\n",
       "\n",
       "[104825 rows x 7 columns]"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "internet.columns = ['id', 'user id', 'session date', 'data used']\n",
    "internet['day'] = internet['session date'].dt.day_name()\n",
    "internet['month'] = internet['session date'].dt.month\n",
    "internet['year'] = internet['session date'].dt.year\n",
    "print(f\"Duplicates Values: {internet.duplicated().sum()}\")\n",
    "internet"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Study plan conditions"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "[It is critical to understand how the plans work, how users are charged based on their plan subscription. So, we suggest printing out the plan information to view their conditions once again.]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>messages included</th>\n",
       "      <th>mb included</th>\n",
       "      <th>minutes included</th>\n",
       "      <th>usd monthly charge</th>\n",
       "      <th>usd per gb</th>\n",
       "      <th>usd per message</th>\n",
       "      <th>usd per minute</th>\n",
       "      <th>plan</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>50</td>\n",
       "      <td>15360</td>\n",
       "      <td>500</td>\n",
       "      <td>20</td>\n",
       "      <td>10</td>\n",
       "      <td>0.03</td>\n",
       "      <td>0.03</td>\n",
       "      <td>surf</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1000</td>\n",
       "      <td>30720</td>\n",
       "      <td>3000</td>\n",
       "      <td>70</td>\n",
       "      <td>7</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.01</td>\n",
       "      <td>ultimate</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   messages included  mb included  minutes included  usd monthly charge  \\\n",
       "0                 50        15360               500                  20   \n",
       "1               1000        30720              3000                  70   \n",
       "\n",
       "   usd per gb  usd per message  usd per minute      plan  \n",
       "0          10             0.03            0.03      surf  \n",
       "1           7             0.01            0.01  ultimate  "
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Print out the plan conditions and make sure they are clear for you\n",
    "plans"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Aggregate data per user\n",
    "\n",
    "[Now, as the data is clean, aggregate data per user per period in order to have just one record per user per period. It should ease the further analysis a lot.]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>calls made</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>user id</th>\n",
       "      <th>month</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1000</th>\n",
       "      <th>12</th>\n",
       "      <td>16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"4\" valign=\"top\">1001</th>\n",
       "      <th>8</th>\n",
       "      <td>27</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>49</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>65</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>64</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1498</th>\n",
       "      <th>12</th>\n",
       "      <td>39</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"4\" valign=\"top\">1499</th>\n",
       "      <th>9</th>\n",
       "      <td>41</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>53</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>65</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2258 rows √ó 1 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "               calls made\n",
       "user id month            \n",
       "1000    12             16\n",
       "1001    8              27\n",
       "        9              49\n",
       "        10             65\n",
       "        11             64\n",
       "...                   ...\n",
       "1498    12             39\n",
       "1499    9              41\n",
       "        10             53\n",
       "        11             45\n",
       "        12             65\n",
       "\n",
       "[2258 rows x 1 columns]"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Calculate the number of calls made by each user per month. Save the result.\n",
    "calls_made = calls.groupby(['user id', 'month', ]).agg({'id': 'count'}).rename(columns={'id': 'calls made'})\n",
    "calls_made.describe()\n",
    "calls_made\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>duration(min)</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>user id</th>\n",
       "      <th>month</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1000</th>\n",
       "      <th>12</th>\n",
       "      <td>124</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"4\" valign=\"top\">1001</th>\n",
       "      <th>8</th>\n",
       "      <td>182</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>315</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>393</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>426</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1498</th>\n",
       "      <th>12</th>\n",
       "      <td>339</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"4\" valign=\"top\">1499</th>\n",
       "      <th>9</th>\n",
       "      <td>346</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>385</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>308</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>496</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2258 rows √ó 1 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "               duration(min)\n",
       "user id month               \n",
       "1000    12               124\n",
       "1001    8                182\n",
       "        9                315\n",
       "        10               393\n",
       "        11               426\n",
       "...                      ...\n",
       "1498    12               339\n",
       "1499    9                346\n",
       "        10               385\n",
       "        11               308\n",
       "        12               496\n",
       "\n",
       "[2258 rows x 1 columns]"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Calculate the amount of minutes spent by each user per month. Save the result.\n",
    "minutes_spent = calls.groupby(['user id', 'month']).agg({'duration(min)': 'sum'})\n",
    "minutes_spent"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>messages sent</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>user id</th>\n",
       "      <th>month</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1000</th>\n",
       "      <th>12</th>\n",
       "      <td>11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"4\" valign=\"top\">1001</th>\n",
       "      <th>8</th>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>44</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>53</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>36</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"4\" valign=\"top\">1496</th>\n",
       "      <th>9</th>\n",
       "      <td>21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1497</th>\n",
       "      <th>12</th>\n",
       "      <td>50</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1806 rows √ó 1 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "               messages sent\n",
       "user id month               \n",
       "1000    12                11\n",
       "1001    8                 30\n",
       "        9                 44\n",
       "        10                53\n",
       "        11                36\n",
       "...                      ...\n",
       "1496    9                 21\n",
       "        10                18\n",
       "        11                13\n",
       "        12                11\n",
       "1497    12                50\n",
       "\n",
       "[1806 rows x 1 columns]"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Calculate the number of messages sent by each user per month. Save the result.\n",
    "messages_sent = messages.groupby(['user id', 'month']).agg({'id': 'count'}).rename(columns={'id': 'messages sent'})\n",
    "messages_sent"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>data used</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>user id</th>\n",
       "      <th>month</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1000</th>\n",
       "      <th>12</th>\n",
       "      <td>1903</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"4\" valign=\"top\">1001</th>\n",
       "      <th>8</th>\n",
       "      <td>6929</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>13333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>22356</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>18524</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1498</th>\n",
       "      <th>12</th>\n",
       "      <td>23160</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"4\" valign=\"top\">1499</th>\n",
       "      <th>9</th>\n",
       "      <td>13004</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>19515</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>16834</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>22091</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2277 rows √ó 1 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "               data used\n",
       "user id month           \n",
       "1000    12          1903\n",
       "1001    8           6929\n",
       "        9          13333\n",
       "        10         22356\n",
       "        11         18524\n",
       "...                  ...\n",
       "1498    12         23160\n",
       "1499    9          13004\n",
       "        10         19515\n",
       "        11         16834\n",
       "        12         22091\n",
       "\n",
       "[2277 rows x 1 columns]"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Calculate the volume of internet traffic used by each user per month. Save the result.\n",
    "internet_traffic = internet.groupby(['user id', 'month']).agg({'data used': 'sum'})\n",
    "internet_traffic\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "[Put the aggregate data together into one DataFrame so that one record in it would represent what an unique user consumed in a given month.]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>user id</th>\n",
       "      <th>month</th>\n",
       "      <th>calls made</th>\n",
       "      <th>duration(min)</th>\n",
       "      <th>messages sent</th>\n",
       "      <th>data used</th>\n",
       "      <th>user's name</th>\n",
       "      <th>user's last name</th>\n",
       "      <th>user's age</th>\n",
       "      <th>city</th>\n",
       "      <th>subcripton date</th>\n",
       "      <th>plan</th>\n",
       "      <th>churn date</th>\n",
       "      <th>customer churn</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1000</td>\n",
       "      <td>12</td>\n",
       "      <td>16.0</td>\n",
       "      <td>124.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>1903.0</td>\n",
       "      <td>Anamaria</td>\n",
       "      <td>Bauer</td>\n",
       "      <td>45</td>\n",
       "      <td>Atlanta-Sandy Springs-Roswell, GA MSA</td>\n",
       "      <td>2018-12-24</td>\n",
       "      <td>ultimate</td>\n",
       "      <td>NaT</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1001</td>\n",
       "      <td>8</td>\n",
       "      <td>27.0</td>\n",
       "      <td>182.0</td>\n",
       "      <td>30.0</td>\n",
       "      <td>6929.0</td>\n",
       "      <td>Mickey</td>\n",
       "      <td>Wilkerson</td>\n",
       "      <td>28</td>\n",
       "      <td>Seattle-Tacoma-Bellevue, WA MSA</td>\n",
       "      <td>2018-08-13</td>\n",
       "      <td>surf</td>\n",
       "      <td>NaT</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1001</td>\n",
       "      <td>9</td>\n",
       "      <td>49.0</td>\n",
       "      <td>315.0</td>\n",
       "      <td>44.0</td>\n",
       "      <td>13333.0</td>\n",
       "      <td>Mickey</td>\n",
       "      <td>Wilkerson</td>\n",
       "      <td>28</td>\n",
       "      <td>Seattle-Tacoma-Bellevue, WA MSA</td>\n",
       "      <td>2018-08-13</td>\n",
       "      <td>surf</td>\n",
       "      <td>NaT</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1001</td>\n",
       "      <td>10</td>\n",
       "      <td>65.0</td>\n",
       "      <td>393.0</td>\n",
       "      <td>53.0</td>\n",
       "      <td>22356.0</td>\n",
       "      <td>Mickey</td>\n",
       "      <td>Wilkerson</td>\n",
       "      <td>28</td>\n",
       "      <td>Seattle-Tacoma-Bellevue, WA MSA</td>\n",
       "      <td>2018-08-13</td>\n",
       "      <td>surf</td>\n",
       "      <td>NaT</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1001</td>\n",
       "      <td>11</td>\n",
       "      <td>64.0</td>\n",
       "      <td>426.0</td>\n",
       "      <td>36.0</td>\n",
       "      <td>18524.0</td>\n",
       "      <td>Mickey</td>\n",
       "      <td>Wilkerson</td>\n",
       "      <td>28</td>\n",
       "      <td>Seattle-Tacoma-Bellevue, WA MSA</td>\n",
       "      <td>2018-08-13</td>\n",
       "      <td>surf</td>\n",
       "      <td>NaT</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2288</th>\n",
       "      <td>1498</td>\n",
       "      <td>12</td>\n",
       "      <td>39.0</td>\n",
       "      <td>339.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>23160.0</td>\n",
       "      <td>Scot</td>\n",
       "      <td>Williamson</td>\n",
       "      <td>51</td>\n",
       "      <td>New York-Newark-Jersey City, NY-NJ-PA MSA</td>\n",
       "      <td>2018-02-04</td>\n",
       "      <td>surf</td>\n",
       "      <td>NaT</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2289</th>\n",
       "      <td>1499</td>\n",
       "      <td>9</td>\n",
       "      <td>41.0</td>\n",
       "      <td>346.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>13004.0</td>\n",
       "      <td>Shena</td>\n",
       "      <td>Dickson</td>\n",
       "      <td>37</td>\n",
       "      <td>Orlando-Kissimmee-Sanford, FL MSA</td>\n",
       "      <td>2018-05-06</td>\n",
       "      <td>surf</td>\n",
       "      <td>NaT</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2290</th>\n",
       "      <td>1499</td>\n",
       "      <td>10</td>\n",
       "      <td>53.0</td>\n",
       "      <td>385.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>19515.0</td>\n",
       "      <td>Shena</td>\n",
       "      <td>Dickson</td>\n",
       "      <td>37</td>\n",
       "      <td>Orlando-Kissimmee-Sanford, FL MSA</td>\n",
       "      <td>2018-05-06</td>\n",
       "      <td>surf</td>\n",
       "      <td>NaT</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2291</th>\n",
       "      <td>1499</td>\n",
       "      <td>11</td>\n",
       "      <td>45.0</td>\n",
       "      <td>308.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>16834.0</td>\n",
       "      <td>Shena</td>\n",
       "      <td>Dickson</td>\n",
       "      <td>37</td>\n",
       "      <td>Orlando-Kissimmee-Sanford, FL MSA</td>\n",
       "      <td>2018-05-06</td>\n",
       "      <td>surf</td>\n",
       "      <td>NaT</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2292</th>\n",
       "      <td>1499</td>\n",
       "      <td>12</td>\n",
       "      <td>65.0</td>\n",
       "      <td>496.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>22091.0</td>\n",
       "      <td>Shena</td>\n",
       "      <td>Dickson</td>\n",
       "      <td>37</td>\n",
       "      <td>Orlando-Kissimmee-Sanford, FL MSA</td>\n",
       "      <td>2018-05-06</td>\n",
       "      <td>surf</td>\n",
       "      <td>NaT</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2293 rows √ó 14 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      user id  month  calls made  duration(min)  messages sent  data used  \\\n",
       "0        1000     12        16.0          124.0           11.0     1903.0   \n",
       "1        1001      8        27.0          182.0           30.0     6929.0   \n",
       "2        1001      9        49.0          315.0           44.0    13333.0   \n",
       "3        1001     10        65.0          393.0           53.0    22356.0   \n",
       "4        1001     11        64.0          426.0           36.0    18524.0   \n",
       "...       ...    ...         ...            ...            ...        ...   \n",
       "2288     1498     12        39.0          339.0            0.0    23160.0   \n",
       "2289     1499      9        41.0          346.0            0.0    13004.0   \n",
       "2290     1499     10        53.0          385.0            0.0    19515.0   \n",
       "2291     1499     11        45.0          308.0            0.0    16834.0   \n",
       "2292     1499     12        65.0          496.0            0.0    22091.0   \n",
       "\n",
       "     user's name user's last name  user's age  \\\n",
       "0       Anamaria            Bauer          45   \n",
       "1         Mickey        Wilkerson          28   \n",
       "2         Mickey        Wilkerson          28   \n",
       "3         Mickey        Wilkerson          28   \n",
       "4         Mickey        Wilkerson          28   \n",
       "...          ...              ...         ...   \n",
       "2288        Scot       Williamson          51   \n",
       "2289       Shena          Dickson          37   \n",
       "2290       Shena          Dickson          37   \n",
       "2291       Shena          Dickson          37   \n",
       "2292       Shena          Dickson          37   \n",
       "\n",
       "                                           city subcripton date      plan  \\\n",
       "0         Atlanta-Sandy Springs-Roswell, GA MSA      2018-12-24  ultimate   \n",
       "1               Seattle-Tacoma-Bellevue, WA MSA      2018-08-13      surf   \n",
       "2               Seattle-Tacoma-Bellevue, WA MSA      2018-08-13      surf   \n",
       "3               Seattle-Tacoma-Bellevue, WA MSA      2018-08-13      surf   \n",
       "4               Seattle-Tacoma-Bellevue, WA MSA      2018-08-13      surf   \n",
       "...                                         ...             ...       ...   \n",
       "2288  New York-Newark-Jersey City, NY-NJ-PA MSA      2018-02-04      surf   \n",
       "2289          Orlando-Kissimmee-Sanford, FL MSA      2018-05-06      surf   \n",
       "2290          Orlando-Kissimmee-Sanford, FL MSA      2018-05-06      surf   \n",
       "2291          Orlando-Kissimmee-Sanford, FL MSA      2018-05-06      surf   \n",
       "2292          Orlando-Kissimmee-Sanford, FL MSA      2018-05-06      surf   \n",
       "\n",
       "     churn date customer churn  \n",
       "0           NaT             No  \n",
       "1           NaT             No  \n",
       "2           NaT             No  \n",
       "3           NaT             No  \n",
       "4           NaT             No  \n",
       "...         ...            ...  \n",
       "2288        NaT             No  \n",
       "2289        NaT             No  \n",
       "2290        NaT             No  \n",
       "2291        NaT             No  \n",
       "2292        NaT             No  \n",
       "\n",
       "[2293 rows x 14 columns]"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Merge the data for calls, minutes, messages, internet based on user_id and month\n",
    "merge_data = pd.concat([calls_made, minutes_spent, messages_sent, internet_traffic], axis='columns').fillna(0).reset_index()\n",
    "merge_data = merge_data.merge(users, on='user id')\n",
    "merge_data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>user id</th>\n",
       "      <th>month</th>\n",
       "      <th>calls made</th>\n",
       "      <th>duration(min)</th>\n",
       "      <th>messages sent</th>\n",
       "      <th>data used</th>\n",
       "      <th>user's name</th>\n",
       "      <th>user's last name</th>\n",
       "      <th>user's age</th>\n",
       "      <th>city</th>\n",
       "      <th>...</th>\n",
       "      <th>plan</th>\n",
       "      <th>churn date</th>\n",
       "      <th>customer churn</th>\n",
       "      <th>messages included</th>\n",
       "      <th>mb included</th>\n",
       "      <th>minutes included</th>\n",
       "      <th>usd monthly charge</th>\n",
       "      <th>usd per gb</th>\n",
       "      <th>usd per message</th>\n",
       "      <th>usd per minute</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1000</td>\n",
       "      <td>12</td>\n",
       "      <td>16.0</td>\n",
       "      <td>124.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>1903.0</td>\n",
       "      <td>Anamaria</td>\n",
       "      <td>Bauer</td>\n",
       "      <td>45</td>\n",
       "      <td>Atlanta-Sandy Springs-Roswell, GA MSA</td>\n",
       "      <td>...</td>\n",
       "      <td>ultimate</td>\n",
       "      <td>NaT</td>\n",
       "      <td>No</td>\n",
       "      <td>1000</td>\n",
       "      <td>30720</td>\n",
       "      <td>3000</td>\n",
       "      <td>70</td>\n",
       "      <td>7</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1006</td>\n",
       "      <td>11</td>\n",
       "      <td>2.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>15.0</td>\n",
       "      <td>2072.0</td>\n",
       "      <td>Jesusa</td>\n",
       "      <td>Bradford</td>\n",
       "      <td>73</td>\n",
       "      <td>San Francisco-Oakland-Berkeley, CA MSA</td>\n",
       "      <td>...</td>\n",
       "      <td>ultimate</td>\n",
       "      <td>2018-12-18</td>\n",
       "      <td>Yes</td>\n",
       "      <td>1000</td>\n",
       "      <td>30720</td>\n",
       "      <td>3000</td>\n",
       "      <td>70</td>\n",
       "      <td>7</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1006</td>\n",
       "      <td>12</td>\n",
       "      <td>9.0</td>\n",
       "      <td>59.0</td>\n",
       "      <td>139.0</td>\n",
       "      <td>32144.0</td>\n",
       "      <td>Jesusa</td>\n",
       "      <td>Bradford</td>\n",
       "      <td>73</td>\n",
       "      <td>San Francisco-Oakland-Berkeley, CA MSA</td>\n",
       "      <td>...</td>\n",
       "      <td>ultimate</td>\n",
       "      <td>2018-12-18</td>\n",
       "      <td>Yes</td>\n",
       "      <td>1000</td>\n",
       "      <td>30720</td>\n",
       "      <td>3000</td>\n",
       "      <td>70</td>\n",
       "      <td>7</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1008</td>\n",
       "      <td>10</td>\n",
       "      <td>71.0</td>\n",
       "      <td>476.0</td>\n",
       "      <td>21.0</td>\n",
       "      <td>17131.0</td>\n",
       "      <td>Emely</td>\n",
       "      <td>Hoffman</td>\n",
       "      <td>53</td>\n",
       "      <td>Orlando-Kissimmee-Sanford, FL MSA</td>\n",
       "      <td>...</td>\n",
       "      <td>ultimate</td>\n",
       "      <td>NaT</td>\n",
       "      <td>No</td>\n",
       "      <td>1000</td>\n",
       "      <td>30720</td>\n",
       "      <td>3000</td>\n",
       "      <td>70</td>\n",
       "      <td>7</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1008</td>\n",
       "      <td>11</td>\n",
       "      <td>63.0</td>\n",
       "      <td>446.0</td>\n",
       "      <td>37.0</td>\n",
       "      <td>23706.0</td>\n",
       "      <td>Emely</td>\n",
       "      <td>Hoffman</td>\n",
       "      <td>53</td>\n",
       "      <td>Orlando-Kissimmee-Sanford, FL MSA</td>\n",
       "      <td>...</td>\n",
       "      <td>ultimate</td>\n",
       "      <td>NaT</td>\n",
       "      <td>No</td>\n",
       "      <td>1000</td>\n",
       "      <td>30720</td>\n",
       "      <td>3000</td>\n",
       "      <td>70</td>\n",
       "      <td>7</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2288</th>\n",
       "      <td>1498</td>\n",
       "      <td>12</td>\n",
       "      <td>39.0</td>\n",
       "      <td>339.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>23160.0</td>\n",
       "      <td>Scot</td>\n",
       "      <td>Williamson</td>\n",
       "      <td>51</td>\n",
       "      <td>New York-Newark-Jersey City, NY-NJ-PA MSA</td>\n",
       "      <td>...</td>\n",
       "      <td>surf</td>\n",
       "      <td>NaT</td>\n",
       "      <td>No</td>\n",
       "      <td>50</td>\n",
       "      <td>15360</td>\n",
       "      <td>500</td>\n",
       "      <td>20</td>\n",
       "      <td>10</td>\n",
       "      <td>0.03</td>\n",
       "      <td>0.03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2289</th>\n",
       "      <td>1499</td>\n",
       "      <td>9</td>\n",
       "      <td>41.0</td>\n",
       "      <td>346.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>13004.0</td>\n",
       "      <td>Shena</td>\n",
       "      <td>Dickson</td>\n",
       "      <td>37</td>\n",
       "      <td>Orlando-Kissimmee-Sanford, FL MSA</td>\n",
       "      <td>...</td>\n",
       "      <td>surf</td>\n",
       "      <td>NaT</td>\n",
       "      <td>No</td>\n",
       "      <td>50</td>\n",
       "      <td>15360</td>\n",
       "      <td>500</td>\n",
       "      <td>20</td>\n",
       "      <td>10</td>\n",
       "      <td>0.03</td>\n",
       "      <td>0.03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2290</th>\n",
       "      <td>1499</td>\n",
       "      <td>10</td>\n",
       "      <td>53.0</td>\n",
       "      <td>385.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>19515.0</td>\n",
       "      <td>Shena</td>\n",
       "      <td>Dickson</td>\n",
       "      <td>37</td>\n",
       "      <td>Orlando-Kissimmee-Sanford, FL MSA</td>\n",
       "      <td>...</td>\n",
       "      <td>surf</td>\n",
       "      <td>NaT</td>\n",
       "      <td>No</td>\n",
       "      <td>50</td>\n",
       "      <td>15360</td>\n",
       "      <td>500</td>\n",
       "      <td>20</td>\n",
       "      <td>10</td>\n",
       "      <td>0.03</td>\n",
       "      <td>0.03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2291</th>\n",
       "      <td>1499</td>\n",
       "      <td>11</td>\n",
       "      <td>45.0</td>\n",
       "      <td>308.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>16834.0</td>\n",
       "      <td>Shena</td>\n",
       "      <td>Dickson</td>\n",
       "      <td>37</td>\n",
       "      <td>Orlando-Kissimmee-Sanford, FL MSA</td>\n",
       "      <td>...</td>\n",
       "      <td>surf</td>\n",
       "      <td>NaT</td>\n",
       "      <td>No</td>\n",
       "      <td>50</td>\n",
       "      <td>15360</td>\n",
       "      <td>500</td>\n",
       "      <td>20</td>\n",
       "      <td>10</td>\n",
       "      <td>0.03</td>\n",
       "      <td>0.03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2292</th>\n",
       "      <td>1499</td>\n",
       "      <td>12</td>\n",
       "      <td>65.0</td>\n",
       "      <td>496.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>22091.0</td>\n",
       "      <td>Shena</td>\n",
       "      <td>Dickson</td>\n",
       "      <td>37</td>\n",
       "      <td>Orlando-Kissimmee-Sanford, FL MSA</td>\n",
       "      <td>...</td>\n",
       "      <td>surf</td>\n",
       "      <td>NaT</td>\n",
       "      <td>No</td>\n",
       "      <td>50</td>\n",
       "      <td>15360</td>\n",
       "      <td>500</td>\n",
       "      <td>20</td>\n",
       "      <td>10</td>\n",
       "      <td>0.03</td>\n",
       "      <td>0.03</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2293 rows √ó 21 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      user id  month  calls made  duration(min)  messages sent  data used  \\\n",
       "0        1000     12        16.0          124.0           11.0     1903.0   \n",
       "1        1006     11         2.0           10.0           15.0     2072.0   \n",
       "2        1006     12         9.0           59.0          139.0    32144.0   \n",
       "3        1008     10        71.0          476.0           21.0    17131.0   \n",
       "4        1008     11        63.0          446.0           37.0    23706.0   \n",
       "...       ...    ...         ...            ...            ...        ...   \n",
       "2288     1498     12        39.0          339.0            0.0    23160.0   \n",
       "2289     1499      9        41.0          346.0            0.0    13004.0   \n",
       "2290     1499     10        53.0          385.0            0.0    19515.0   \n",
       "2291     1499     11        45.0          308.0            0.0    16834.0   \n",
       "2292     1499     12        65.0          496.0            0.0    22091.0   \n",
       "\n",
       "     user's name user's last name  user's age  \\\n",
       "0       Anamaria            Bauer          45   \n",
       "1         Jesusa         Bradford          73   \n",
       "2         Jesusa         Bradford          73   \n",
       "3          Emely          Hoffman          53   \n",
       "4          Emely          Hoffman          53   \n",
       "...          ...              ...         ...   \n",
       "2288        Scot       Williamson          51   \n",
       "2289       Shena          Dickson          37   \n",
       "2290       Shena          Dickson          37   \n",
       "2291       Shena          Dickson          37   \n",
       "2292       Shena          Dickson          37   \n",
       "\n",
       "                                           city  ...      plan churn date  \\\n",
       "0         Atlanta-Sandy Springs-Roswell, GA MSA  ...  ultimate        NaT   \n",
       "1        San Francisco-Oakland-Berkeley, CA MSA  ...  ultimate 2018-12-18   \n",
       "2        San Francisco-Oakland-Berkeley, CA MSA  ...  ultimate 2018-12-18   \n",
       "3             Orlando-Kissimmee-Sanford, FL MSA  ...  ultimate        NaT   \n",
       "4             Orlando-Kissimmee-Sanford, FL MSA  ...  ultimate        NaT   \n",
       "...                                         ...  ...       ...        ...   \n",
       "2288  New York-Newark-Jersey City, NY-NJ-PA MSA  ...      surf        NaT   \n",
       "2289          Orlando-Kissimmee-Sanford, FL MSA  ...      surf        NaT   \n",
       "2290          Orlando-Kissimmee-Sanford, FL MSA  ...      surf        NaT   \n",
       "2291          Orlando-Kissimmee-Sanford, FL MSA  ...      surf        NaT   \n",
       "2292          Orlando-Kissimmee-Sanford, FL MSA  ...      surf        NaT   \n",
       "\n",
       "     customer churn messages included  mb included  minutes included  \\\n",
       "0                No              1000        30720              3000   \n",
       "1               Yes              1000        30720              3000   \n",
       "2               Yes              1000        30720              3000   \n",
       "3                No              1000        30720              3000   \n",
       "4                No              1000        30720              3000   \n",
       "...             ...               ...          ...               ...   \n",
       "2288             No                50        15360               500   \n",
       "2289             No                50        15360               500   \n",
       "2290             No                50        15360               500   \n",
       "2291             No                50        15360               500   \n",
       "2292             No                50        15360               500   \n",
       "\n",
       "      usd monthly charge  usd per gb  usd per message  usd per minute  \n",
       "0                     70           7             0.01            0.01  \n",
       "1                     70           7             0.01            0.01  \n",
       "2                     70           7             0.01            0.01  \n",
       "3                     70           7             0.01            0.01  \n",
       "4                     70           7             0.01            0.01  \n",
       "...                  ...         ...              ...             ...  \n",
       "2288                  20          10             0.03            0.03  \n",
       "2289                  20          10             0.03            0.03  \n",
       "2290                  20          10             0.03            0.03  \n",
       "2291                  20          10             0.03            0.03  \n",
       "2292                  20          10             0.03            0.03  \n",
       "\n",
       "[2293 rows x 21 columns]"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Add the plan information\n",
    "merge_data = merge_data.merge(plans, left_on ='plan', right_on='plan')\n",
    "merge_data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "[Calculate the monthly revenue from each user (subtract the free package limit from the total number of calls, text messages, and data; multiply the result by the calling plan value; add the monthly charge depending on the calling plan). N.B. This might not be as trivial as just a couple of lines given the plan conditions! So, it's okay to spend some time on it.]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>user id</th>\n",
       "      <th>month</th>\n",
       "      <th>calls made</th>\n",
       "      <th>duration(min)</th>\n",
       "      <th>messages sent</th>\n",
       "      <th>data used</th>\n",
       "      <th>user's name</th>\n",
       "      <th>user's last name</th>\n",
       "      <th>user's age</th>\n",
       "      <th>city</th>\n",
       "      <th>...</th>\n",
       "      <th>mb included</th>\n",
       "      <th>minutes included</th>\n",
       "      <th>usd monthly charge</th>\n",
       "      <th>usd per gb</th>\n",
       "      <th>usd per message</th>\n",
       "      <th>usd per minute</th>\n",
       "      <th>message cost</th>\n",
       "      <th>call cost</th>\n",
       "      <th>gb cost</th>\n",
       "      <th>revenue</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1000</td>\n",
       "      <td>12</td>\n",
       "      <td>16.0</td>\n",
       "      <td>124.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>1903.0</td>\n",
       "      <td>Anamaria</td>\n",
       "      <td>Bauer</td>\n",
       "      <td>45</td>\n",
       "      <td>Atlanta-Sandy Springs-Roswell, GA MSA</td>\n",
       "      <td>...</td>\n",
       "      <td>30720</td>\n",
       "      <td>3000</td>\n",
       "      <td>70</td>\n",
       "      <td>7</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>70.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1006</td>\n",
       "      <td>11</td>\n",
       "      <td>2.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>15.0</td>\n",
       "      <td>2072.0</td>\n",
       "      <td>Jesusa</td>\n",
       "      <td>Bradford</td>\n",
       "      <td>73</td>\n",
       "      <td>San Francisco-Oakland-Berkeley, CA MSA</td>\n",
       "      <td>...</td>\n",
       "      <td>30720</td>\n",
       "      <td>3000</td>\n",
       "      <td>70</td>\n",
       "      <td>7</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>70.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1006</td>\n",
       "      <td>12</td>\n",
       "      <td>9.0</td>\n",
       "      <td>59.0</td>\n",
       "      <td>139.0</td>\n",
       "      <td>32144.0</td>\n",
       "      <td>Jesusa</td>\n",
       "      <td>Bradford</td>\n",
       "      <td>73</td>\n",
       "      <td>San Francisco-Oakland-Berkeley, CA MSA</td>\n",
       "      <td>...</td>\n",
       "      <td>30720</td>\n",
       "      <td>3000</td>\n",
       "      <td>70</td>\n",
       "      <td>7</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>14.0</td>\n",
       "      <td>84.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1008</td>\n",
       "      <td>10</td>\n",
       "      <td>71.0</td>\n",
       "      <td>476.0</td>\n",
       "      <td>21.0</td>\n",
       "      <td>17131.0</td>\n",
       "      <td>Emely</td>\n",
       "      <td>Hoffman</td>\n",
       "      <td>53</td>\n",
       "      <td>Orlando-Kissimmee-Sanford, FL MSA</td>\n",
       "      <td>...</td>\n",
       "      <td>30720</td>\n",
       "      <td>3000</td>\n",
       "      <td>70</td>\n",
       "      <td>7</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>70.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1008</td>\n",
       "      <td>11</td>\n",
       "      <td>63.0</td>\n",
       "      <td>446.0</td>\n",
       "      <td>37.0</td>\n",
       "      <td>23706.0</td>\n",
       "      <td>Emely</td>\n",
       "      <td>Hoffman</td>\n",
       "      <td>53</td>\n",
       "      <td>Orlando-Kissimmee-Sanford, FL MSA</td>\n",
       "      <td>...</td>\n",
       "      <td>30720</td>\n",
       "      <td>3000</td>\n",
       "      <td>70</td>\n",
       "      <td>7</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>70.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows √ó 25 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   user id  month  calls made  duration(min)  messages sent  data used  \\\n",
       "0     1000     12        16.0          124.0           11.0     1903.0   \n",
       "1     1006     11         2.0           10.0           15.0     2072.0   \n",
       "2     1006     12         9.0           59.0          139.0    32144.0   \n",
       "3     1008     10        71.0          476.0           21.0    17131.0   \n",
       "4     1008     11        63.0          446.0           37.0    23706.0   \n",
       "\n",
       "  user's name user's last name  user's age  \\\n",
       "0    Anamaria            Bauer          45   \n",
       "1      Jesusa         Bradford          73   \n",
       "2      Jesusa         Bradford          73   \n",
       "3       Emely          Hoffman          53   \n",
       "4       Emely          Hoffman          53   \n",
       "\n",
       "                                     city  ... mb included minutes included  \\\n",
       "0   Atlanta-Sandy Springs-Roswell, GA MSA  ...       30720             3000   \n",
       "1  San Francisco-Oakland-Berkeley, CA MSA  ...       30720             3000   \n",
       "2  San Francisco-Oakland-Berkeley, CA MSA  ...       30720             3000   \n",
       "3       Orlando-Kissimmee-Sanford, FL MSA  ...       30720             3000   \n",
       "4       Orlando-Kissimmee-Sanford, FL MSA  ...       30720             3000   \n",
       "\n",
       "  usd monthly charge usd per gb  usd per message  usd per minute  \\\n",
       "0                 70          7             0.01            0.01   \n",
       "1                 70          7             0.01            0.01   \n",
       "2                 70          7             0.01            0.01   \n",
       "3                 70          7             0.01            0.01   \n",
       "4                 70          7             0.01            0.01   \n",
       "\n",
       "   message cost  call cost  gb cost  revenue  \n",
       "0           0.0        0.0      0.0     70.0  \n",
       "1           0.0        0.0      0.0     70.0  \n",
       "2           0.0        0.0     14.0     84.0  \n",
       "3           0.0        0.0      0.0     70.0  \n",
       "4           0.0        0.0      0.0     70.0  \n",
       "\n",
       "[5 rows x 25 columns]"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Calculate the monthly revenue for each user\n",
    "\n",
    "merge_data['message cost'] = merge_data.apply(lambda x: max(0, x['messages sent'] - x['messages included']) * x['usd per message'], \n",
    "                                      axis = 1)\n",
    "merge_data['call cost'] = merge_data.apply(lambda x: max(0, x['duration(min)'] - x['minutes included']) * x['usd per minute'], \n",
    "                                   axis = 1)\n",
    "merge_data['gb cost'] = merge_data.apply(lambda x: np.ceil(max(0, x['data used'] - x['mb included'])/1024)*x['usd per gb'], \n",
    "                                axis = 1)\n",
    "merge_data['revenue'] = merge_data['message cost'] + merge_data['call cost'] + merge_data['gb cost'] + merge_data['usd monthly charge']\n",
    "merge_data.head()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<div class=\"alert alert-block alert-success\">‚úîÔ∏è\n",
    "    \n",
    "\n",
    "__Reviewer's comment ‚Ññ2__\n",
    "\n",
    "That's right. There are 1,024 megabytes in one gigabyte."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<div class=\"alert alert-block alert-success\">‚úîÔ∏è\n",
    "    \n",
    "\n",
    "__Reviewer's comment ‚Ññ1__\n",
    "\n",
    "Great code"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Study user behaviour"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "[Calculate some useful descriptive statistics for the aggregated and merged data, which typically reveal an overall picture captured by the data. Draw useful plots to help the understanding. Given that the main task is to compare the plans and decide on which one is more profitable, the statistics and the plots should be calculated on a per-plan basis.]\n",
    "\n",
    "[There are relevant hints in the comments for Calls but they are not provided for Messages and Internet though the principle of statistical study is the same for them as for Calls.]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Calls"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:title={'center':'Average Duration of Calls per Plan per Month'}, xlabel='Month', ylabel='Duration(min)'>"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Compare average duration of calls per each plan per each distinct month. Plot a bar plat to visualize it.\n",
    "average_call_duration = merge_data.groupby(['month', 'plan'])['duration(min)'].mean()\n",
    "average_call_duration = average_call_duration.unstack(level ='plan')\n",
    "average_call_duration = average_call_duration.reset_index()\n",
    "average_call_duration.columns.name= None\n",
    "average_call_duration.plot(kind='bar', x= 'month', xlabel='Month', ylabel='Duration(min)', title='Average Duration of Calls per Plan per Month')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "      duration(min)         \n",
      "plan           surf ultimate\n",
      "month                       \n",
      "1             406.0    774.0\n",
      "2            2673.0   2822.0\n",
      "3            7590.0   3651.0\n",
      "4           17577.0   7074.0\n",
      "5           30768.0  11781.0\n",
      "6           41836.0  17435.0\n",
      "7           54448.0  25197.0\n",
      "8           66438.0  29922.0\n",
      "9           80360.0  37626.0\n",
      "10         101846.0  47778.0\n",
      "11         119801.0  56540.0\n",
      "12         150680.0  69324.0\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Compare the number of minutes users of each plan require each month. Plot a histogram.\n",
    "users_minutes = merge_data.groupby(['month', 'plan']).agg({'duration(min)':'sum'})\n",
    "users_minutes = users_minutes.unstack(level='plan')\n",
    "print(users_minutes)\n",
    "plt.figure(figsize=(10, 6))\n",
    "plt.hist([users_minutes['duration(min)', 'surf'], users_minutes['duration(min)', 'ultimate']], \n",
    "         alpha=0.5, bins=10, label=['Surf', 'Ultimate'])\n",
    "plt.xlabel('Number of minutes')\n",
    "plt.ylabel('Frequency')\n",
    "plt.title('Required Call Duration for Both Plans')\n",
    "plt.legend()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "[Calculate the mean and the variable of the call duration to reason on whether users on the different plans have different behaviours for their calls.]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "    month      plan  duration(min)\n",
      "0       1      surf     203.000000\n",
      "1       1  ultimate     193.500000\n",
      "2       2      surf     297.000000\n",
      "3       2  ultimate     403.142857\n",
      "4       3      surf     330.000000\n",
      "5       3  ultimate     304.250000\n",
      "6       4      surf     351.540000\n",
      "7       4  ultimate     336.857143\n",
      "8       5      surf     399.584416\n",
      "9       5  ultimate     406.241379\n",
      "10      6      surf     431.298969\n",
      "11      6  ultimate     370.957447\n",
      "12      7      surf     449.983471\n",
      "13      7  ultimate     427.067797\n",
      "14      8      surf     410.111111\n",
      "15      8  ultimate     421.436620\n",
      "16      9      surf     414.226804\n",
      "17      9  ultimate     437.511628\n",
      "18     10      surf     429.729958\n",
      "19     10  ultimate     450.735849\n",
      "20     11      surf     423.325088\n",
      "21     11  ultimate     445.196850\n",
      "22     12      surf     473.836478\n",
      "23     12  ultimate     459.099338\n",
      "month  plan    \n",
      "1      surf        15842.000000\n",
      "       ultimate    16572.333333\n",
      "2      surf        52226.500000\n",
      "       ultimate    76889.476190\n",
      "3      surf        35809.363636\n",
      "       ultimate    61984.931818\n",
      "4      surf        50866.743265\n",
      "       ultimate    34888.928571\n",
      "5      surf        59754.219754\n",
      "       ultimate    43841.046798\n",
      "6      surf        45592.628436\n",
      "       ultimate    42503.563367\n",
      "7      surf        61005.099725\n",
      "       ultimate    72563.374635\n",
      "8      surf        54344.645963\n",
      "       ultimate    53645.506640\n",
      "9      surf        46595.958656\n",
      "       ultimate    57070.464569\n",
      "10     surf        52278.664056\n",
      "       ultimate    54261.910512\n",
      "11     surf        51607.021602\n",
      "       ultimate    60593.222847\n",
      "12     surf        63629.518918\n",
      "       ultimate    62503.783400\n",
      "Name: duration(min), dtype: float64\n"
     ]
    }
   ],
   "source": [
    "# Calculate the mean and the variance of the monthly call duration\n",
    "call_duration_mean = merge_data.groupby(['month', 'plan'])['duration(min)'].mean().reset_index()\n",
    "print(call_duration_mean)\n",
    "call_duration_var = merge_data.groupby(['month', 'plan'])['duration(min)'].var()\n",
    "print(call_duration_var)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Plot a boxplot to visualize the distribution of the monthly call duration\n",
    "sns.boxplot(x='duration(min)', y='plan', data=call_duration_mean, orient='h')\n",
    "plt.title('Monthly Call Duration for Surf and Ultimate Data Plans')\n",
    "plt.xlabel('Mins used/month')\n",
    "plt.ylabel('Plan')\n",
    "plt.xticks(np.arange(0, 1000, step=100))\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "[Formulate conclusions on how the users behave in terms of calling. Is their behaviour different between the plans?]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Average Duration of Calls per Month:**\n",
    "\n",
    "**Surf Plan:** The average duration of calls for surf plan users shows a steady increase from January to December, peaking in December. The call durations are generally consistent and high throughout the year.\n",
    "\n",
    "**Ultimate Plan:** Similarly, ultimate plan users also show an increasing trend in call duration from January to December. The average call duration for ultimate plan users is slightly higher or comparable to surf plan users throughout most of the year.\n",
    "\n",
    "**Distribution of Call Durations:**\n",
    "\n",
    "**Surf Plan:** The distribution shows a wide range of call durations, with some users having very high total call durations (up to 140,000 minutes). There is a broader spread, indicating varied calling behavior among surf plan users.\n",
    "\n",
    "**Ultimate Plan:** Most ultimate plan users have lower total call durations, concentrated below 40,000 minutes. The distribution is more concentrated compared to the surf plan, indicating a more uniform calling behavior.\n",
    "\n",
    "**Monthly Call Duration Box Plot:**\n",
    "\n",
    "**Surf Plan:** The box plot shows that the median call duration for surf plan users is around 400 minutes per month, with a few outliers indicating higher usage. The interquartile range (IQR) is relatively tight, suggesting consistent usage among most users.\n",
    "\n",
    "**Ultimate Plan:** The box plot for ultimate plan users shows a similar median call duration of around 400 minutes per month, but the IQR is slightly wider than the surf plan. There are also outliers indicating both lower and higher usage, suggesting some variability in user behavior. \n",
    "\n",
    "**Overall, while the average call durations are similar between the two plans, the surf plan users display a wider range of calling behaviors compared to the more consistent patterns observed among ultimate plan users.**"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Messages"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:title={'center':'Number of messages sent per Plan per Month'}, xlabel='Month', ylabel='messages sent'>"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Compare the number of messages users of each plan tend to send each month\n",
    "number_of_messages = merge_data.groupby(['month', 'plan'])['messages sent'].sum()\n",
    "number_of_messages = number_of_messages.unstack(level ='plan')\n",
    "number_of_messages = number_of_messages.reset_index()\n",
    "number_of_messages.columns.name= None\n",
    "number_of_messages.plot(kind='bar', x= 'month', xlabel='Month', ylabel='messages sent', title='Number of messages sent per Plan per Month')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "      messages sent         \n",
      "plan           surf ultimate\n",
      "month                       \n",
      "1              21.0     62.0\n",
      "2             108.0    151.0\n",
      "3             351.0    243.0\n",
      "4             870.0    463.0\n",
      "5            1849.0    931.0\n",
      "6            2454.0   1379.0\n",
      "7            3271.0   1937.0\n",
      "8            4662.0   2732.0\n",
      "9            5968.0   3259.0\n",
      "10           8020.0   4181.0\n",
      "11           9165.0   4903.0\n",
      "12          12275.0   6796.0\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "messages_sent = merge_data.groupby(['month', 'plan']).agg({'messages sent':'sum'})\n",
    "messages_sent = messages_sent.unstack(level='plan')\n",
    "print(messages_sent)\n",
    "plt.figure(figsize=(10, 6))\n",
    "plt.hist([messages_sent['messages sent', 'surf'], messages_sent['messages sent', 'ultimate']], \n",
    "         alpha=0.5, bins=10, label=['Surf', 'Ultimate'])\n",
    "plt.xlabel('Messages Sent')\n",
    "plt.ylabel('Frequency')\n",
    "plt.title('Require messages for Both Plans')\n",
    "plt.legend()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "[Formulate conclusions on how the users behave in terms of messaging. Is their behaviour different between the plans?]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Monthly Number of Messages Sent:**\n",
    "\n",
    "**Surf Plan:** Users on the surf plan consistently send more messages each month compared to those on the ultimate plan. The number of messages sent increases steadily over the months, peaking in December.\n",
    "\n",
    "**Ultimate Plan:** Users on the ultimate plan also show an increase in the number of messages sent each month, but their overall message count is lower than that of the surf plan users. The growth trend is similar, peaking in December as well.\n",
    "\n",
    "**Distribution of Messages Sent:**\n",
    "\n",
    "**Surf Plan:** There is a broader distribution of the number of messages sent by surf plan users, with some users sending as many as 12,000 messages. This indicates that the surf plan has a diverse user base in terms of messaging activity.\n",
    "\n",
    "**Ultimate Plan:** The majority of ultimate plan users send fewer messages, mostly between 0 and 4,000 messages. The distribution shows a higher concentration of users who send fewer messages compared to the surf plan. \n",
    "\n",
    "**Overall, the surf plan users demonstrate higher and more varied messaging activity compared to ultimate plan users, who generally have lower and more concentrated messaging usage.**"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Internet"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "    month       surf   ultimate\n",
      "0       1     9762.0    27705.0\n",
      "1       2   109736.0   120042.0\n",
      "2       3   307304.0   220083.0\n",
      "3       4   599910.0   338950.0\n",
      "4       5  1074400.0   482669.0\n",
      "5       6  1485998.0   721690.0\n",
      "6       7  2033185.0   965457.0\n",
      "7       8  2724008.0  1266277.0\n",
      "8       9  3222517.0  1461088.0\n",
      "9      10  4107618.0  1869118.0\n",
      "10     11  4629467.0  2165809.0\n",
      "11     12  5772904.0  2770055.0\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:title={'center':'Amount of Internet Traffic per Plan per Month'}, xlabel='Month', ylabel='Amount of Internet Traffic'>"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Compare the amount of internet traffic consumed by users per plan\n",
    "amount_of_internet_traffic = merge_data.groupby(['month', 'plan'])['data used'].sum()\n",
    "amount_of_internet_traffic = amount_of_internet_traffic.unstack(level ='plan')\n",
    "amount_of_internet_traffic = amount_of_internet_traffic.reset_index()\n",
    "amount_of_internet_traffic.columns.name= None\n",
    "print(amount_of_internet_traffic)\n",
    "amount_of_internet_traffic.plot(kind='bar', x= 'month', xlabel='Month', ylabel='Amount of Internet Traffic', title='Amount of Internet Traffic per Plan per Month')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "       data used           \n",
      "plan        surf   ultimate\n",
      "month                      \n",
      "1         9762.0    27705.0\n",
      "2       109736.0   120042.0\n",
      "3       307304.0   220083.0\n",
      "4       599910.0   338950.0\n",
      "5      1074400.0   482669.0\n",
      "6      1485998.0   721690.0\n",
      "7      2033185.0   965457.0\n",
      "8      2724008.0  1266277.0\n",
      "9      3222517.0  1461088.0\n",
      "10     4107618.0  1869118.0\n",
      "11     4629467.0  2165809.0\n",
      "12     5772904.0  2770055.0\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "amount_of_data_used = merge_data.groupby(['month', 'plan']).agg({'data used':'sum'})\n",
    "amount_of_data_used = amount_of_data_used.unstack(level='plan')\n",
    "print(amount_of_data_used)\n",
    "plt.figure(figsize=(10, 6))\n",
    "plt.hist([amount_of_data_used['data used', 'surf'], amount_of_data_used['data used', 'ultimate']], \n",
    "         alpha=0.5, bins=10, label=['Surf', 'Ultimate'])\n",
    "plt.xlabel('Amount of data(mb)')\n",
    "plt.ylabel('Frequency')\n",
    "plt.title('Require Internet Data for Both Plans')\n",
    "plt.legend()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "[Formulate conclusions on how the users tend to consume the internet traffic? Is their behaviour different between the plans?]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Monthly Internet Traffic Consumption:**\n",
    "\n",
    "**Surf Plan:** Users on the surf plan consistently use more internet data each month compared to those on the ultimate plan. There is a clear upward trend, indicating increasing usage over the year, peaking in December.\n",
    "\n",
    "\n",
    "**Ultimate Plan:** Users on the ultimate plan also show an increase in data consumption over the year, but their overall usage is significantly lower than that of the surf plan users.\n",
    "\n",
    "**Distribution of Internet Data Usage:**\n",
    "\n",
    "**Surf Plan:** The users on the surf plan have a more varied distribution of internet data usage. There is a noticeable frequency of users who consume higher amounts of data (3 to 6 million MB).\n",
    "\n",
    "**Ultimate Plan:** The majority of users on the ultimate plan tend to consume less internet data. A significant number of users use between 0 to 1 million MB of data.\n",
    "\n",
    "**These observations suggest that the surf plan is more suitable for users with high data requirements, while the ultimate plan caters to users with moderate to low data needs.**"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Revenue"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "[Likewise you have studied the user behaviour, statistically describe the revenue between the plans.]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "72.33333333333333"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ultimate_data = merge_data.query(\"plan == 'ultimate'\")\n",
    "ultimate_avg = ultimate_data['revenue'].sum() / len(ultimate_data['revenue'])\n",
    "ultimate_avg"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "60.79541004450095"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "surf_data = merge_data.query(\"plan == 'surf'\")\n",
    "surf_avg = surf_data['revenue'].sum() / len(surf_data['revenue'])\n",
    "surf_avg\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The average revenue for users of the ultimate plan is $72.33\n",
      "The average revenue for users of the surf plan is $60.80\n",
      "Percentage difference between ultimate plan revenue and surf plan revenue is 15.95%\n"
     ]
    }
   ],
   "source": [
    "diff = (ultimate_avg - surf_avg) / ultimate_avg * 100\n",
    "print('The average revenue for users of the ultimate plan is ${:.2f}'.format(ultimate_avg))\n",
    "print('The average revenue for users of the surf plan is ${:.2f}'.format(surf_avg))\n",
    "print('Percentage difference between ultimate plan revenue and surf plan revenue is {:.2f}%'.format(diff))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "[Formulate conclusions about how the revenue differs between the plans.]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    " In this section, we calculated the statistics of our data. We determined that ultimate users on the average make 58 calls, use 418 minutes per month, sent about 34 messages, and use 16877 MB of data per month. We also computed statistics for surf users, and observed that on the average users make 58 calls, use 418 minutes per month, sent about 28 messages, and use 16553 MB of data per month. We plotted the distribution and the frequency density of the plans per user and observed that surf users have more representation overall than ultimate users. Also, on the average, ultimate users has more call duration per month, send more text messages, require more data volume than users in the surf plan. We also determined that users in the ultimate plan brought in more revenue on the average than users in the surf plan."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Test statistical hypotheses"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "[Test the hypothesis that the average revenue from users of the Ultimate and Surf calling plans differs.]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "[Formulate the null and the alternative hypotheses, choose the statistical test, decide on the alpha value.]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "*Null Hypothesis*: There is *no difference* between the average revenue from users of Ultimate and Surf calling plans.\n",
    "\n",
    "We calculated the average revenue for users of Ultimate calling plan as USD72.31, and the average revenue for the surf plan as USD60.71. We want to know whether the difference between these numbers are significant? That depends on the variance of the samples the values are calculated from. Instead of basing our comparison on the mean alone, we use the data to perform a statistical test. In this experiment, the *null hypothesis* is that there is *no difference* between the average revenue from users of Ultimate and Surf calling plan. The *alternative* hypothesis is that the average revenue from users of Ultimate and Surf calling plans differs. We can carry out hypothesis testing to test the hypothesis. We use a significance level (or alpha) of 0.05, which means that only in 5% of the case will we reject the null hypothesis when it is true. We use a t-test to test the hypothesis because it is used to compare the means of two groups in order to determine whether two groups are different from one another. \n",
    "\n",
    "- $H_0$ (null hypothesis): average revenue per month for **ultimate** users = average revenue per month for **surf** users\n",
    "- $H_1$ (alternative hypothesis): average revenue per month for **ultimate** users <> average revenue per month for **surf** users\n",
    "- $\\alpha$ = 0.05\n",
    "- If p-value < $\\alpha$, then reject null hypothesis. If p-value > $\\alpha$, fail to reject null hypothesis."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The p-value is: 5.1234033722748e-15\n",
      "We reject the null hypohesis\n"
     ]
    }
   ],
   "source": [
    "# Test the hypotheses\n",
    "ultimate = ultimate_data['revenue']\n",
    "surf = surf_data['revenue']\n",
    "\n",
    "alpha = 0.05\n",
    "\n",
    "results = st.ttest_ind(ultimate, surf, equal_var = False)\n",
    "print('The p-value is: {}'.format(results.pvalue))\n",
    "\n",
    "if (results.pvalue < alpha):\n",
    "    print('We reject the null hypohesis')\n",
    "else:\n",
    "    print('We fail to reject the null hypothesis')\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We formulated the null hypothesis by stating that there is no difference between the average revenue from users of ultimate and surf calling plans. We used a significance level of 0.05. Since the p-value is less than 0.05, it means that the group are different hence we reject the null hypothesis. Our analysis suggest that average revenue from users of Ultimate and Surf calling plans differs."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "[Test the hypothesis that the average revenue from users in the NY-NJ area is different from that of the users from the other regions.]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "[Formulate the null and the alternative hypotheses, choose the statistical test, decide on the alpha value.]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The average revenue of users in NY-NJ area is $60.00\n",
      "The average revenue of users from other regions is $65.29\n",
      "The p-value is: 0.03408041222493359\n",
      "We reject the null hypohesis\n"
     ]
    }
   ],
   "source": [
    "# Test the hypotheses\n",
    "newyork_jersey = merge_data.query('city == \"New York-Newark-Jersey City, NY-NJ-PA MSA\"')['revenue']\n",
    "not_newyork_jersey = merge_data.query('city != \"New York-Newark-Jersey City, NY-NJ-PA MSA\"')['revenue']\n",
    "print('The average revenue of users in NY-NJ area is ${:.2f}'.format(newyork_jersey.mean()))\n",
    "print('The average revenue of users from other regions is ${:.2f}'.format(not_newyork_jersey.mean()))\n",
    "\n",
    "newyork_jersey = merge_data.query('city == \"New York-Newark-Jersey City, NY-NJ-PA MSA\"')['revenue'] # revenue of users in NY-NJ\n",
    "not_newyork_jersey = merge_data.query('city != \"New York-Newark-Jersey City, NY-NJ-PA MSA\"')['revenue'] # revenue of users not in NY-NJ\n",
    "\n",
    "# set critical statistical significance level\n",
    "alpha = 0.05\n",
    "\n",
    "# test the hypothesis that the means of the two independent population are equal\n",
    "results = st.ttest_ind(newyork_jersey, not_newyork_jersey, equal_var = False)\n",
    "print('The p-value is: {}'.format(results.pvalue))\n",
    "\n",
    "# compare the p-value with the significance level\n",
    "if (results.pvalue < alpha):\n",
    "    print('We reject the null hypohesis')\n",
    "else:\n",
    "    print('We fail to reject the null hypothesis')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We have determined the average revenue of users in New York-New Jersey area as USD59.92, and the average revenue of users from other regions as USD65.22. We want to know whether the difference between these number is significant? We set up a hypothesis test for significance using a significance level (or \n",
    " values) of 0.05, which means that only in 5% of the case will we reject the null hypothesis when it is true. We use a t-test to test the hypothesis since it can be used to compare the means of two groups in order to determine whether the two groups are different from one another. The set is shown in the code below."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We formulated our null hypothesis by stating that there is no difference between the average revenue from users in New York-New Jersey area, and users from other region. We used a t-test to test the hypothesis using a significance level of 0.05. Since the p-value is less than 0.05, it means that the group are different hence we reject the null hypothesis. We may not know the size of the difference between the average revenue from users in New York-New Jersey area, and users from other regions. All the test tells us is that they are different. However, by calculating the average number for revenue from users in both groups, we can say with certainty that the mean of the revenue between the two groups are significantly different."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## General conclusion\n",
    "\n",
    "[List your important conclusions in this final section, make sure they cover all those important decisions (assumptions) that you've made and that led you to the way you processed and analyzed the data.]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    " By looking at the general information of the data, we identified some errors like problem with the datatype and corrected them by converting datatype to the right format. We analyzed the data by carrying out exploratory data analysis and found that the distribution of the data is slightly skewed to the right. We detected and removed some outliers from the data, and used the filtered data to compute the statistics. We determined that ultimate users on the average make 58 calls, use 418 minutes per month, sent about 34 messages, and use 16877 MB of data per month. We also computed statistics for surf users, and observed that on the average users make 58 calls, use 418 minutes per month, sent about 28 messages, and use 16553 MB of data per month.\n",
    "\n",
    "We plotted the distribution and the frequency density of the plans per user and observed that surf users have more call count overall than ultimate users. Also, on the average, ultimate users has more call duration per month, send more text messages, require more data volume than users in the surf plan. We also determined that users in the ultimate plan brought in more revenue on the average than users in the surf plan. We also determined that ultimate users brought in more revenue on the average since the average revenue for users in the ultimate plan is \n",
    " 16.05% greater than users in the surf plan. The calculated average revenue for users of ultimate calling plan is $72.31, while the average revenue for the surf plan as $60.71.\n",
    "\n",
    "We formulated the null hypothesis by stating that there is no difference between the average revenue from users of ultimate and surf calling plans. We used a significance level of 0.05 to calculate the p-value. From the hypothesis test, we determined that the group are different hence we reject the null hypothesis. The test suggested that average revenue from users of Ultimate and Surf calling plans differs. We also tested the hypothesis by stating that there is no difference between the average revenue from users in New York-New Jersey area, and users from other region. Our hypothesis test shows that the average revenue from users in New York-New Jersey area, and users from other region are different.\n",
    "\n",
    "We can conclude from this analysis that:\n",
    "\n",
    "- users on the ultimate plan has more call duration per month, send more text messages, require more data volume, and brings in more average revenue than users on the surf plan.\n",
    "- users on the surf plan on the average make more calls than users on the ultimate plan.\n",
    "- the average revenue from users in other regions is greater than revenue from users in the New York-New Jersey area.\n",
    "- the commercial department should adjust advertising budget and advertise more calls, messaging and internet data offers to the user in the ultimate plan.\n",
    "- the commercial department should invest in more advertisements in other regions since Megaline makes more money in that area than the New York-New Jersey area .\n",
    "- the ultimate plan is more profitable than the surf plan even though the surf plan has more users overall than the ultimate plan.\n",
    "\n",
    "We could carry out further analysis to determine the average revenue by age group. That will also inform Megaline telecom on which age group and advertising medium to target for marketing purposes. For instance, if we analyze that people in the age group 1 - 25 brings in more revenue, we can also determine whether marketing on social media apps like TikTok or Instagram will bring in more users and revenue than TV or billboard advertisement."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<div class=\"alert alert-block alert-success\">‚úîÔ∏è\n",
    "    \n",
    "\n",
    "__Reviewer's comment ‚Ññ1__\n",
    "\n",
    "You've done a great job. There are a few things that need to be fixed"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<div class=\"alert alert-block alert-success\">‚úîÔ∏è\n",
    "    \n",
    "\n",
    "__Reviewer's comment ‚Ññ2__\n",
    "\n",
    "\n",
    "Otherwise it's greatüòä. Your project is begging for github =)   \n",
    "    \n",
    "Congratulations on the successful completion of the project üòäüëç\n",
    "And I wish you success in new works üòä"
   ]
  }
 ],
 "metadata": {
  "ExecuteTimeLog": [
   {
    "duration": 828,
    "start_time": "2021-11-16T09:21:11.304Z"
   },
   {
    "duration": 893,
    "start_time": "2021-11-16T09:21:17.728Z"
   },
   {
    "duration": 1150,
    "start_time": "2021-11-16T09:21:29.568Z"
   },
   {
    "duration": 3,
    "start_time": "2021-11-16T09:24:14.495Z"
   },
   {
    "duration": 120,
    "start_time": "2021-11-16T09:24:46.630Z"
   },
   {
    "duration": 3,
    "start_time": "2021-11-16T09:28:27.882Z"
   },
   {
    "duration": 4,
    "start_time": "2021-11-16T09:29:54.281Z"
   },
   {
    "duration": 3,
    "start_time": "2021-11-16T09:30:45.936Z"
   },
   {
    "duration": 4,
    "start_time": "2021-11-16T09:31:06.300Z"
   },
   {
    "duration": 113,
    "start_time": "2021-11-16T09:31:37.208Z"
   },
   {
    "duration": 143,
    "start_time": "2021-11-16T09:31:48.656Z"
   },
   {
    "duration": 98,
    "start_time": "2021-11-16T09:31:55.678Z"
   },
   {
    "duration": 3,
    "start_time": "2021-11-16T09:32:08.535Z"
   },
   {
    "duration": 111,
    "start_time": "2021-11-16T09:32:10.120Z"
   },
   {
    "duration": 3,
    "start_time": "2021-11-16T09:32:15.732Z"
   },
   {
    "duration": 4,
    "start_time": "2021-11-16T09:32:29.423Z"
   },
   {
    "duration": 3,
    "start_time": "2021-11-16T10:03:03.074Z"
   },
   {
    "duration": 3,
    "start_time": "2021-11-16T10:10:01.288Z"
   },
   {
    "duration": 3,
    "start_time": "2021-11-16T10:10:46.923Z"
   },
   {
    "duration": 121,
    "start_time": "2021-11-16T10:37:46.494Z"
   },
   {
    "duration": 125,
    "start_time": "2021-11-16T10:38:20.632Z"
   },
   {
    "duration": 112,
    "start_time": "2021-11-16T10:46:53.001Z"
   },
   {
    "duration": 110,
    "start_time": "2021-11-16T10:48:25.775Z"
   },
   {
    "duration": 3,
    "start_time": "2021-11-16T10:50:18.720Z"
   },
   {
    "duration": 4,
    "start_time": "2021-11-16T10:50:37.649Z"
   },
   {
    "duration": 2,
    "start_time": "2021-11-16T10:50:51.884Z"
   },
   {
    "duration": 3,
    "start_time": "2021-11-16T10:51:56.237Z"
   },
   {
    "duration": 101,
    "start_time": "2021-11-16T10:53:13.791Z"
   },
   {
    "duration": 3,
    "start_time": "2021-11-16T10:55:59.186Z"
   },
   {
    "duration": 3,
    "start_time": "2021-11-16T10:56:10.751Z"
   },
   {
    "duration": 3,
    "start_time": "2021-11-16T10:56:49.038Z"
   },
   {
    "duration": 3,
    "start_time": "2021-11-16T10:56:49.174Z"
   },
   {
    "duration": 4,
    "start_time": "2021-11-16T10:56:49.414Z"
   },
   {
    "duration": 3,
    "start_time": "2021-11-16T10:56:49.680Z"
   },
   {
    "duration": 3,
    "start_time": "2021-11-16T10:56:50.370Z"
   },
   {
    "duration": 114,
    "start_time": "2021-11-16T10:59:34.518Z"
   },
   {
    "duration": 3,
    "start_time": "2021-11-16T11:01:41.201Z"
   },
   {
    "duration": 116,
    "start_time": "2021-11-16T11:01:48.754Z"
   },
   {
    "duration": 3,
    "start_time": "2021-11-16T11:02:16.685Z"
   },
   {
    "duration": 3,
    "start_time": "2021-11-16T11:02:19.479Z"
   },
   {
    "duration": 3,
    "start_time": "2021-11-16T11:02:47.067Z"
   },
   {
    "duration": 3,
    "start_time": "2021-11-16T11:02:49.353Z"
   },
   {
    "duration": 3,
    "start_time": "2021-11-16T11:03:07.835Z"
   },
   {
    "duration": 3,
    "start_time": "2021-11-16T11:03:07.953Z"
   },
   {
    "duration": 112,
    "start_time": "2021-11-16T11:07:52.072Z"
   },
   {
    "duration": 187,
    "start_time": "2021-11-16T11:09:23.468Z"
   },
   {
    "duration": 4,
    "start_time": "2021-11-16T11:10:01.455Z"
   },
   {
    "duration": 3,
    "start_time": "2021-11-16T11:10:05.069Z"
   },
   {
    "duration": 4,
    "start_time": "2021-11-16T11:10:13.376Z"
   },
   {
    "duration": 3,
    "start_time": "2021-11-16T11:10:14.434Z"
   },
   {
    "duration": 3,
    "start_time": "2021-11-16T11:10:22.853Z"
   },
   {
    "duration": 4,
    "start_time": "2021-11-16T11:27:29.279Z"
   },
   {
    "duration": 4,
    "start_time": "2021-11-16T11:29:08.919Z"
   },
   {
    "duration": 118,
    "start_time": "2021-11-16T11:29:46.703Z"
   },
   {
    "duration": 437,
    "start_time": "2021-11-16T11:36:02.181Z"
   },
   {
    "duration": 157,
    "start_time": "2021-11-16T11:36:14.388Z"
   },
   {
    "duration": 207,
    "start_time": "2021-11-16T11:47:15.898Z"
   },
   {
    "duration": 3,
    "start_time": "2021-11-16T11:53:52.092Z"
   },
   {
    "duration": 3,
    "start_time": "2021-11-16T11:53:52.236Z"
   },
   {
    "duration": 3,
    "start_time": "2021-11-16T11:59:12.005Z"
   },
   {
    "duration": 112,
    "start_time": "2021-11-16T12:00:33.446Z"
   },
   {
    "duration": 3,
    "start_time": "2021-11-16T12:02:14.453Z"
   },
   {
    "duration": 3,
    "start_time": "2021-11-16T12:02:39.512Z"
   },
   {
    "duration": 106,
    "start_time": "2021-11-16T12:03:03.460Z"
   },
   {
    "duration": 3,
    "start_time": "2021-11-17T20:37:21.139Z"
   },
   {
    "duration": 3,
    "start_time": "2021-11-17T20:37:22.229Z"
   },
   {
    "duration": 3,
    "start_time": "2021-11-17T20:38:38.806Z"
   },
   {
    "duration": 3,
    "start_time": "2021-11-17T20:38:41.958Z"
   },
   {
    "duration": 3,
    "start_time": "2021-11-17T20:43:46.551Z"
   },
   {
    "duration": 4,
    "start_time": "2021-11-17T20:58:21.835Z"
   },
   {
    "duration": 3,
    "start_time": "2021-11-17T20:59:21.872Z"
   },
   {
    "duration": 4,
    "start_time": "2021-11-17T20:59:45.352Z"
   },
   {
    "duration": 4,
    "start_time": "2021-11-17T20:59:49.646Z"
   },
   {
    "duration": 159,
    "start_time": "2021-11-17T21:02:26.949Z"
   },
   {
    "duration": 3,
    "start_time": "2021-11-17T21:03:53.461Z"
   },
   {
    "duration": 3,
    "start_time": "2021-11-17T21:03:53.694Z"
   },
   {
    "duration": 3,
    "start_time": "2021-11-17T21:05:28.145Z"
   },
   {
    "duration": 116,
    "start_time": "2021-11-17T21:05:57.787Z"
   },
   {
    "duration": 3,
    "start_time": "2021-11-17T21:06:37.993Z"
   },
   {
    "duration": 3,
    "start_time": "2021-11-17T21:06:38.261Z"
   },
   {
    "duration": 3,
    "start_time": "2021-11-17T21:11:54.358Z"
   },
   {
    "duration": 3,
    "start_time": "2021-11-17T21:12:43.846Z"
   },
   {
    "duration": 4,
    "start_time": "2021-11-17T21:13:08.773Z"
   },
   {
    "duration": 3,
    "start_time": "2021-11-17T21:14:44.441Z"
   },
   {
    "duration": 3,
    "start_time": "2021-11-17T21:15:42.059Z"
   },
   {
    "duration": 4,
    "start_time": "2021-11-17T21:15:51.995Z"
   },
   {
    "duration": 3,
    "start_time": "2021-11-17T21:15:53.923Z"
   },
   {
    "duration": 3,
    "start_time": "2021-11-17T21:15:55.282Z"
   },
   {
    "duration": 3,
    "start_time": "2021-11-17T21:16:28.492Z"
   },
   {
    "duration": 3,
    "start_time": "2021-11-17T21:16:32.603Z"
   },
   {
    "duration": 3,
    "start_time": "2021-11-17T21:17:06.941Z"
   },
   {
    "duration": 98,
    "start_time": "2021-11-17T21:18:05.733Z"
   },
   {
    "duration": 4,
    "start_time": "2021-11-17T21:21:35.255Z"
   },
   {
    "duration": 3,
    "start_time": "2021-11-17T21:21:37.804Z"
   },
   {
    "duration": 4,
    "start_time": "2021-11-17T21:23:06.071Z"
   },
   {
    "duration": 3,
    "start_time": "2021-11-17T21:23:24.799Z"
   },
   {
    "duration": 3,
    "start_time": "2021-11-17T21:23:32.591Z"
   },
   {
    "duration": 98,
    "start_time": "2021-11-17T21:28:31.559Z"
   },
   {
    "duration": 3,
    "start_time": "2021-11-17T21:28:45.448Z"
   },
   {
    "duration": 3,
    "start_time": "2021-11-17T21:29:17.303Z"
   },
   {
    "duration": 3,
    "start_time": "2021-11-17T21:29:29.617Z"
   },
   {
    "duration": 3,
    "start_time": "2021-11-17T21:29:32.681Z"
   },
   {
    "duration": 3,
    "start_time": "2021-11-17T21:36:11.474Z"
   },
   {
    "duration": 3,
    "start_time": "2021-11-17T21:36:14.791Z"
   },
   {
    "duration": 3,
    "start_time": "2021-11-17T21:36:53.943Z"
   },
   {
    "duration": 3,
    "start_time": "2021-11-17T21:36:56.165Z"
   },
   {
    "duration": 4,
    "start_time": "2021-11-17T21:37:16.590Z"
   },
   {
    "duration": 3,
    "start_time": "2021-11-17T21:37:22.702Z"
   },
   {
    "duration": 4,
    "start_time": "2021-11-17T21:38:03.479Z"
   },
   {
    "duration": 3,
    "start_time": "2021-11-17T21:38:08.601Z"
   },
   {
    "duration": 3,
    "start_time": "2021-11-17T21:38:12.928Z"
   },
   {
    "duration": 3,
    "start_time": "2021-11-17T21:38:48.896Z"
   },
   {
    "duration": 2,
    "start_time": "2021-11-17T21:38:49.171Z"
   },
   {
    "duration": 4,
    "start_time": "2021-11-17T21:39:57.889Z"
   },
   {
    "duration": 3,
    "start_time": "2021-11-17T21:39:58.057Z"
   },
   {
    "duration": 3,
    "start_time": "2021-11-17T21:41:20.108Z"
   },
   {
    "duration": 3,
    "start_time": "2021-11-17T21:41:20.629Z"
   },
   {
    "duration": 3,
    "start_time": "2021-11-17T21:42:49.136Z"
   },
   {
    "duration": 3,
    "start_time": "2021-11-17T21:43:15.137Z"
   },
   {
    "duration": 4,
    "start_time": "2021-11-17T21:43:16.766Z"
   },
   {
    "duration": 4,
    "start_time": "2021-11-17T21:43:31.711Z"
   },
   {
    "duration": 3,
    "start_time": "2021-11-17T21:43:36.312Z"
   },
   {
    "duration": 4,
    "start_time": "2021-11-17T21:45:08.825Z"
   },
   {
    "duration": 4,
    "start_time": "2021-11-17T21:45:10.119Z"
   },
   {
    "duration": 4,
    "start_time": "2021-11-17T21:45:13.748Z"
   },
   {
    "duration": 3,
    "start_time": "2021-11-17T21:45:22.219Z"
   },
   {
    "duration": 3,
    "start_time": "2021-11-17T21:45:33.412Z"
   },
   {
    "duration": 2,
    "start_time": "2021-11-17T21:46:01.885Z"
   },
   {
    "duration": 3,
    "start_time": "2021-11-17T21:46:03.628Z"
   },
   {
    "duration": 107,
    "start_time": "2021-11-17T21:47:32.512Z"
   },
   {
    "duration": 103,
    "start_time": "2021-11-17T21:50:36.243Z"
   },
   {
    "duration": 3,
    "start_time": "2021-11-18T06:28:31.440Z"
   },
   {
    "duration": 3,
    "start_time": "2021-11-18T06:29:00.168Z"
   },
   {
    "duration": 3,
    "start_time": "2021-11-18T06:31:27.008Z"
   },
   {
    "duration": 2,
    "start_time": "2021-11-18T06:35:34.288Z"
   },
   {
    "duration": 2,
    "start_time": "2021-11-18T06:38:04.527Z"
   },
   {
    "duration": 4294,
    "start_time": "2024-05-21T17:41:00.671Z"
   },
   {
    "duration": 351,
    "start_time": "2024-05-21T17:41:12.886Z"
   },
   {
    "duration": 74,
    "start_time": "2024-05-21T17:41:44.320Z"
   },
   {
    "duration": 608,
    "start_time": "2024-05-21T17:42:11.584Z"
   },
   {
    "duration": 331,
    "start_time": "2024-05-21T17:42:25.043Z"
   },
   {
    "duration": 3,
    "start_time": "2024-05-21T17:43:06.155Z"
   },
   {
    "duration": 287,
    "start_time": "2024-05-21T17:44:47.310Z"
   },
   {
    "duration": 12,
    "start_time": "2024-05-21T17:45:59.500Z"
   },
   {
    "duration": 4381,
    "start_time": "2024-05-22T15:50:44.644Z"
   },
   {
    "duration": 379,
    "start_time": "2024-05-22T15:50:50.296Z"
   },
   {
    "duration": 66,
    "start_time": "2024-05-22T15:50:52.508Z"
   },
   {
    "duration": 18,
    "start_time": "2024-05-22T15:50:53.353Z"
   },
   {
    "duration": 716,
    "start_time": "2024-05-22T15:51:12.504Z"
   },
   {
    "duration": 305,
    "start_time": "2024-05-22T15:51:14.508Z"
   },
   {
    "duration": 13,
    "start_time": "2024-05-22T15:51:15.709Z"
   },
   {
    "duration": 14,
    "start_time": "2024-05-22T15:51:34.998Z"
   },
   {
    "duration": 13,
    "start_time": "2024-05-22T15:51:56.440Z"
   },
   {
    "duration": 366,
    "start_time": "2024-05-22T17:55:26.991Z"
   },
   {
    "duration": 4834,
    "start_time": "2024-05-22T17:55:44.280Z"
   },
   {
    "duration": 402,
    "start_time": "2024-05-22T17:55:50.050Z"
   },
   {
    "duration": 16,
    "start_time": "2024-05-22T17:55:51.602Z"
   },
   {
    "duration": 25,
    "start_time": "2024-05-22T17:55:52.072Z"
   },
   {
    "duration": 931,
    "start_time": "2024-05-22T17:55:54.180Z"
   },
   {
    "duration": 763,
    "start_time": "2024-05-22T17:56:30.415Z"
   },
   {
    "duration": 7,
    "start_time": "2024-05-22T17:59:36.259Z"
   },
   {
    "duration": 96,
    "start_time": "2024-05-22T17:59:44.336Z"
   },
   {
    "duration": 759,
    "start_time": "2024-05-22T18:01:07.698Z"
   },
   {
    "duration": 359,
    "start_time": "2024-05-22T18:01:08.461Z"
   },
   {
    "duration": 18,
    "start_time": "2024-05-22T18:01:09.542Z"
   },
   {
    "duration": 19,
    "start_time": "2024-05-22T18:01:10.113Z"
   },
   {
    "duration": 1233,
    "start_time": "2024-05-22T18:01:14.077Z"
   },
   {
    "duration": 18,
    "start_time": "2024-05-22T18:01:35.095Z"
   },
   {
    "duration": 93,
    "start_time": "2024-05-22T18:14:01.228Z"
   },
   {
    "duration": 4,
    "start_time": "2024-05-22T18:14:12.687Z"
   },
   {
    "duration": 280,
    "start_time": "2024-05-22T18:14:13.490Z"
   },
   {
    "duration": 15,
    "start_time": "2024-05-22T18:14:14.069Z"
   },
   {
    "duration": 15,
    "start_time": "2024-05-22T18:14:14.229Z"
   },
   {
    "duration": 20,
    "start_time": "2024-05-22T18:14:15.548Z"
   },
   {
    "duration": 16,
    "start_time": "2024-05-22T18:26:05.170Z"
   },
   {
    "duration": 14,
    "start_time": "2024-05-22T18:27:01.532Z"
   },
   {
    "duration": 25,
    "start_time": "2024-05-22T18:38:37.287Z"
   },
   {
    "duration": 4,
    "start_time": "2024-05-22T18:38:45.142Z"
   },
   {
    "duration": 339,
    "start_time": "2024-05-22T18:38:45.665Z"
   },
   {
    "duration": 15,
    "start_time": "2024-05-22T18:38:46.266Z"
   },
   {
    "duration": 12,
    "start_time": "2024-05-22T18:38:46.431Z"
   },
   {
    "duration": 27,
    "start_time": "2024-05-22T18:38:47.714Z"
   },
   {
    "duration": 5,
    "start_time": "2024-05-22T18:39:31.063Z"
   },
   {
    "duration": 4,
    "start_time": "2024-05-22T18:39:37.083Z"
   },
   {
    "duration": 14,
    "start_time": "2024-05-22T18:39:41.978Z"
   },
   {
    "duration": 829,
    "start_time": "2024-05-22T18:40:23.698Z"
   },
   {
    "duration": 19,
    "start_time": "2024-05-22T18:40:26.431Z"
   },
   {
    "duration": 27,
    "start_time": "2024-05-22T18:41:05.887Z"
   },
   {
    "duration": 97,
    "start_time": "2024-05-22T18:41:08.822Z"
   },
   {
    "duration": 96,
    "start_time": "2024-05-22T18:41:39.165Z"
   },
   {
    "duration": 4,
    "start_time": "2024-05-22T18:41:41.970Z"
   },
   {
    "duration": 274,
    "start_time": "2024-05-22T18:41:42.352Z"
   },
   {
    "duration": 17,
    "start_time": "2024-05-22T18:41:42.856Z"
   },
   {
    "duration": 12,
    "start_time": "2024-05-22T18:41:42.989Z"
   },
   {
    "duration": 13,
    "start_time": "2024-05-22T18:41:43.985Z"
   },
   {
    "duration": 19,
    "start_time": "2024-05-22T18:41:47.349Z"
   },
   {
    "duration": 14,
    "start_time": "2024-05-22T18:42:20.622Z"
   },
   {
    "duration": 16,
    "start_time": "2024-05-22T18:42:43.037Z"
   },
   {
    "duration": 4,
    "start_time": "2024-05-22T18:42:54.424Z"
   },
   {
    "duration": 278,
    "start_time": "2024-05-22T18:42:55.105Z"
   },
   {
    "duration": 16,
    "start_time": "2024-05-22T18:42:56.188Z"
   },
   {
    "duration": 15,
    "start_time": "2024-05-22T18:42:58.013Z"
   },
   {
    "duration": 13,
    "start_time": "2024-05-22T18:43:08.671Z"
   },
   {
    "duration": 22,
    "start_time": "2024-05-22T18:43:12.103Z"
   },
   {
    "duration": 19,
    "start_time": "2024-05-22T18:43:18.367Z"
   },
   {
    "duration": 18,
    "start_time": "2024-05-22T18:43:20.919Z"
   },
   {
    "duration": 293,
    "start_time": "2024-05-22T18:54:05.837Z"
   },
   {
    "duration": 147,
    "start_time": "2024-05-22T18:55:37.476Z"
   },
   {
    "duration": 149,
    "start_time": "2024-05-22T18:55:54.864Z"
   },
   {
    "duration": 5,
    "start_time": "2024-05-22T18:55:58.143Z"
   },
   {
    "duration": 281,
    "start_time": "2024-05-22T18:55:58.522Z"
   },
   {
    "duration": 16,
    "start_time": "2024-05-22T18:55:59.049Z"
   },
   {
    "duration": 19,
    "start_time": "2024-05-22T18:55:59.180Z"
   },
   {
    "duration": 15,
    "start_time": "2024-05-22T18:55:59.834Z"
   },
   {
    "duration": 20,
    "start_time": "2024-05-22T18:56:00.626Z"
   },
   {
    "duration": 17,
    "start_time": "2024-05-22T18:56:01.115Z"
   },
   {
    "duration": 14,
    "start_time": "2024-05-22T18:56:01.444Z"
   },
   {
    "duration": 149,
    "start_time": "2024-05-22T18:56:03.326Z"
   },
   {
    "duration": 6,
    "start_time": "2024-05-22T18:56:27.259Z"
   },
   {
    "duration": 31,
    "start_time": "2024-05-22T18:56:31.415Z"
   },
   {
    "duration": 16,
    "start_time": "2024-05-22T18:56:40.619Z"
   },
   {
    "duration": 16,
    "start_time": "2024-05-22T18:56:47.097Z"
   },
   {
    "duration": 23,
    "start_time": "2024-05-22T18:57:14.056Z"
   },
   {
    "duration": 8,
    "start_time": "2024-05-22T19:02:16.885Z"
   },
   {
    "duration": 82,
    "start_time": "2024-05-22T19:02:18.391Z"
   },
   {
    "duration": 4,
    "start_time": "2024-05-22T19:02:21.723Z"
   },
   {
    "duration": 268,
    "start_time": "2024-05-22T19:02:22.193Z"
   },
   {
    "duration": 19,
    "start_time": "2024-05-22T19:02:22.837Z"
   },
   {
    "duration": 12,
    "start_time": "2024-05-22T19:02:22.996Z"
   },
   {
    "duration": 13,
    "start_time": "2024-05-22T19:02:23.869Z"
   },
   {
    "duration": 16,
    "start_time": "2024-05-22T19:02:24.423Z"
   },
   {
    "duration": 13,
    "start_time": "2024-05-22T19:02:24.768Z"
   },
   {
    "duration": 13,
    "start_time": "2024-05-22T19:02:24.952Z"
   },
   {
    "duration": 7,
    "start_time": "2024-05-22T19:02:26.234Z"
   },
   {
    "duration": 76,
    "start_time": "2024-05-22T19:02:31.993Z"
   },
   {
    "duration": 4,
    "start_time": "2024-05-22T19:02:44.572Z"
   },
   {
    "duration": 267,
    "start_time": "2024-05-22T19:02:45.067Z"
   },
   {
    "duration": 14,
    "start_time": "2024-05-22T19:02:45.767Z"
   },
   {
    "duration": 11,
    "start_time": "2024-05-22T19:02:45.944Z"
   },
   {
    "duration": 13,
    "start_time": "2024-05-22T19:02:46.847Z"
   },
   {
    "duration": 17,
    "start_time": "2024-05-22T19:02:47.472Z"
   },
   {
    "duration": 14,
    "start_time": "2024-05-22T19:02:47.754Z"
   },
   {
    "duration": 17,
    "start_time": "2024-05-22T19:02:47.997Z"
   },
   {
    "duration": 31,
    "start_time": "2024-05-22T19:02:49.133Z"
   },
   {
    "duration": 76,
    "start_time": "2024-05-22T19:03:04.414Z"
   },
   {
    "duration": 3,
    "start_time": "2024-05-22T19:03:08.619Z"
   },
   {
    "duration": 277,
    "start_time": "2024-05-22T19:03:09.104Z"
   },
   {
    "duration": 14,
    "start_time": "2024-05-22T19:03:09.741Z"
   },
   {
    "duration": 12,
    "start_time": "2024-05-22T19:03:09.892Z"
   },
   {
    "duration": 13,
    "start_time": "2024-05-22T19:03:10.776Z"
   },
   {
    "duration": 16,
    "start_time": "2024-05-22T19:03:11.363Z"
   },
   {
    "duration": 15,
    "start_time": "2024-05-22T19:03:11.785Z"
   },
   {
    "duration": 13,
    "start_time": "2024-05-22T19:03:11.996Z"
   },
   {
    "duration": 29,
    "start_time": "2024-05-22T19:03:13.497Z"
   },
   {
    "duration": 28,
    "start_time": "2024-05-22T19:03:15.006Z"
   },
   {
    "duration": 5,
    "start_time": "2024-05-22T19:04:21.530Z"
   },
   {
    "duration": 334,
    "start_time": "2024-05-22T19:04:24.552Z"
   },
   {
    "duration": 69,
    "start_time": "2024-05-22T19:04:57.559Z"
   },
   {
    "duration": 5,
    "start_time": "2024-05-22T19:07:24.702Z"
   },
   {
    "duration": 270,
    "start_time": "2024-05-22T19:07:25.131Z"
   },
   {
    "duration": 16,
    "start_time": "2024-05-22T19:07:25.672Z"
   },
   {
    "duration": 14,
    "start_time": "2024-05-22T19:07:25.802Z"
   },
   {
    "duration": 15,
    "start_time": "2024-05-22T19:07:26.498Z"
   },
   {
    "duration": 16,
    "start_time": "2024-05-22T19:07:27.195Z"
   },
   {
    "duration": 15,
    "start_time": "2024-05-22T19:07:27.576Z"
   },
   {
    "duration": 16,
    "start_time": "2024-05-22T19:07:27.744Z"
   },
   {
    "duration": 37,
    "start_time": "2024-05-22T19:07:28.620Z"
   },
   {
    "duration": 11,
    "start_time": "2024-05-22T19:07:29.177Z"
   },
   {
    "duration": 52,
    "start_time": "2024-05-22T19:07:47.585Z"
   },
   {
    "duration": 5,
    "start_time": "2024-05-22T19:07:50.732Z"
   },
   {
    "duration": 368,
    "start_time": "2024-05-22T19:07:51.189Z"
   },
   {
    "duration": 16,
    "start_time": "2024-05-22T19:07:51.713Z"
   },
   {
    "duration": 19,
    "start_time": "2024-05-22T19:07:51.772Z"
   },
   {
    "duration": 18,
    "start_time": "2024-05-22T19:07:52.426Z"
   },
   {
    "duration": 16,
    "start_time": "2024-05-22T19:07:52.829Z"
   },
   {
    "duration": 17,
    "start_time": "2024-05-22T19:07:53.101Z"
   },
   {
    "duration": 14,
    "start_time": "2024-05-22T19:07:53.284Z"
   },
   {
    "duration": 31,
    "start_time": "2024-05-22T19:08:00.980Z"
   },
   {
    "duration": 38,
    "start_time": "2024-05-22T19:08:06.865Z"
   },
   {
    "duration": 732,
    "start_time": "2024-05-22T19:11:35.548Z"
   },
   {
    "duration": 314,
    "start_time": "2024-05-22T19:11:36.284Z"
   },
   {
    "duration": 19,
    "start_time": "2024-05-22T19:11:36.601Z"
   },
   {
    "duration": 17,
    "start_time": "2024-05-22T19:11:36.622Z"
   },
   {
    "duration": 12,
    "start_time": "2024-05-22T19:11:36.645Z"
   },
   {
    "duration": 58,
    "start_time": "2024-05-22T19:11:36.660Z"
   },
   {
    "duration": 14,
    "start_time": "2024-05-22T19:11:36.721Z"
   },
   {
    "duration": 14,
    "start_time": "2024-05-22T19:11:36.738Z"
   },
   {
    "duration": 62,
    "start_time": "2024-05-22T19:11:36.756Z"
   },
   {
    "duration": 30,
    "start_time": "2024-05-22T19:11:36.821Z"
   },
   {
    "duration": 4,
    "start_time": "2024-05-22T19:11:36.855Z"
   },
   {
    "duration": 4,
    "start_time": "2024-05-22T19:11:36.863Z"
   },
   {
    "duration": 4,
    "start_time": "2024-05-22T19:11:36.907Z"
   },
   {
    "duration": 4,
    "start_time": "2024-05-22T19:11:36.919Z"
   },
   {
    "duration": 5,
    "start_time": "2024-05-22T19:11:36.927Z"
   },
   {
    "duration": 5,
    "start_time": "2024-05-22T19:11:36.934Z"
   },
   {
    "duration": 6,
    "start_time": "2024-05-22T19:11:36.941Z"
   },
   {
    "duration": 4,
    "start_time": "2024-05-22T19:11:36.950Z"
   },
   {
    "duration": 52,
    "start_time": "2024-05-22T19:11:36.957Z"
   },
   {
    "duration": 4,
    "start_time": "2024-05-22T19:11:37.013Z"
   },
   {
    "duration": 4,
    "start_time": "2024-05-22T19:11:37.021Z"
   },
   {
    "duration": 6,
    "start_time": "2024-05-22T19:11:37.028Z"
   },
   {
    "duration": 4,
    "start_time": "2024-05-22T19:11:37.038Z"
   },
   {
    "duration": 3,
    "start_time": "2024-05-22T19:11:37.045Z"
   },
   {
    "duration": 3,
    "start_time": "2024-05-22T19:11:37.052Z"
   },
   {
    "duration": 4,
    "start_time": "2024-05-22T19:11:37.106Z"
   },
   {
    "duration": 4,
    "start_time": "2024-05-22T19:11:37.113Z"
   },
   {
    "duration": 3,
    "start_time": "2024-05-22T19:11:37.120Z"
   },
   {
    "duration": 3,
    "start_time": "2024-05-22T19:11:37.127Z"
   },
   {
    "duration": 4,
    "start_time": "2024-05-22T19:11:37.133Z"
   },
   {
    "duration": 4,
    "start_time": "2024-05-22T19:11:37.139Z"
   },
   {
    "duration": 60,
    "start_time": "2024-05-22T19:11:37.147Z"
   },
   {
    "duration": 23,
    "start_time": "2024-05-22T19:11:55.007Z"
   },
   {
    "duration": 17,
    "start_time": "2024-05-22T19:14:29.189Z"
   },
   {
    "duration": 16,
    "start_time": "2024-05-22T19:14:40.563Z"
   },
   {
    "duration": 16,
    "start_time": "2024-05-22T19:14:46.255Z"
   },
   {
    "duration": 16,
    "start_time": "2024-05-22T19:15:06.288Z"
   },
   {
    "duration": 27,
    "start_time": "2024-05-22T19:26:30.388Z"
   },
   {
    "duration": 22,
    "start_time": "2024-05-22T19:26:39.268Z"
   },
   {
    "duration": 40,
    "start_time": "2024-05-22T19:28:38.596Z"
   },
   {
    "duration": 17,
    "start_time": "2024-05-22T19:30:31.090Z"
   },
   {
    "duration": 30,
    "start_time": "2024-05-22T19:32:14.336Z"
   },
   {
    "duration": 1087,
    "start_time": "2024-05-22T19:32:21.115Z"
   },
   {
    "duration": 732,
    "start_time": "2024-05-22T19:32:30.104Z"
   },
   {
    "duration": 340,
    "start_time": "2024-05-22T19:32:30.839Z"
   },
   {
    "duration": 21,
    "start_time": "2024-05-22T19:32:31.183Z"
   },
   {
    "duration": 15,
    "start_time": "2024-05-22T19:32:31.209Z"
   },
   {
    "duration": 12,
    "start_time": "2024-05-22T19:32:31.228Z"
   },
   {
    "duration": 18,
    "start_time": "2024-05-22T19:32:31.243Z"
   },
   {
    "duration": 53,
    "start_time": "2024-05-22T19:32:31.264Z"
   },
   {
    "duration": 14,
    "start_time": "2024-05-22T19:32:31.320Z"
   },
   {
    "duration": 31,
    "start_time": "2024-05-22T19:32:31.337Z"
   },
   {
    "duration": 51,
    "start_time": "2024-05-22T19:32:31.379Z"
   },
   {
    "duration": 25,
    "start_time": "2024-05-22T19:32:31.433Z"
   },
   {
    "duration": 50,
    "start_time": "2024-05-22T19:32:31.461Z"
   },
   {
    "duration": 60,
    "start_time": "2024-05-22T19:32:31.514Z"
   },
   {
    "duration": 65,
    "start_time": "2024-05-22T19:32:31.577Z"
   },
   {
    "duration": 3,
    "start_time": "2024-05-22T19:32:31.645Z"
   },
   {
    "duration": 3,
    "start_time": "2024-05-22T19:32:31.651Z"
   },
   {
    "duration": 4,
    "start_time": "2024-05-22T19:32:31.657Z"
   },
   {
    "duration": 41,
    "start_time": "2024-05-22T19:32:31.665Z"
   },
   {
    "duration": 5,
    "start_time": "2024-05-22T19:32:31.713Z"
   },
   {
    "duration": 4,
    "start_time": "2024-05-22T19:32:31.722Z"
   },
   {
    "duration": 3,
    "start_time": "2024-05-22T19:32:31.730Z"
   },
   {
    "duration": 4,
    "start_time": "2024-05-22T19:32:31.736Z"
   },
   {
    "duration": 3,
    "start_time": "2024-05-22T19:32:31.744Z"
   },
   {
    "duration": 5,
    "start_time": "2024-05-22T19:32:31.750Z"
   },
   {
    "duration": 6,
    "start_time": "2024-05-22T19:32:31.806Z"
   },
   {
    "duration": 3,
    "start_time": "2024-05-22T19:32:31.815Z"
   },
   {
    "duration": 4,
    "start_time": "2024-05-22T19:32:31.822Z"
   },
   {
    "duration": 8,
    "start_time": "2024-05-22T19:32:31.833Z"
   },
   {
    "duration": 4,
    "start_time": "2024-05-22T19:32:31.844Z"
   },
   {
    "duration": 4,
    "start_time": "2024-05-22T19:32:31.851Z"
   },
   {
    "duration": 49,
    "start_time": "2024-05-22T19:32:31.858Z"
   },
   {
    "duration": 4,
    "start_time": "2024-05-22T19:32:31.910Z"
   },
   {
    "duration": 4,
    "start_time": "2024-05-22T19:32:31.917Z"
   },
   {
    "duration": 3,
    "start_time": "2024-05-22T19:32:31.924Z"
   },
   {
    "duration": 1210,
    "start_time": "2024-05-22T19:50:38.317Z"
   },
   {
    "duration": 724,
    "start_time": "2024-05-22T19:50:46.304Z"
   },
   {
    "duration": 314,
    "start_time": "2024-05-22T19:50:47.032Z"
   },
   {
    "duration": 15,
    "start_time": "2024-05-22T19:50:47.349Z"
   },
   {
    "duration": 38,
    "start_time": "2024-05-22T19:50:47.369Z"
   },
   {
    "duration": 13,
    "start_time": "2024-05-22T19:50:47.410Z"
   },
   {
    "duration": 18,
    "start_time": "2024-05-22T19:50:47.426Z"
   },
   {
    "duration": 14,
    "start_time": "2024-05-22T19:50:47.447Z"
   },
   {
    "duration": 52,
    "start_time": "2024-05-22T19:50:47.464Z"
   },
   {
    "duration": 30,
    "start_time": "2024-05-22T19:50:47.518Z"
   },
   {
    "duration": 62,
    "start_time": "2024-05-22T19:50:47.554Z"
   },
   {
    "duration": 24,
    "start_time": "2024-05-22T19:50:47.619Z"
   },
   {
    "duration": 16,
    "start_time": "2024-05-22T19:50:47.646Z"
   },
   {
    "duration": 1277,
    "start_time": "2024-05-22T19:50:47.664Z"
   },
   {
    "duration": 0,
    "start_time": "2024-05-22T19:50:48.945Z"
   },
   {
    "duration": 0,
    "start_time": "2024-05-22T19:50:48.948Z"
   },
   {
    "duration": 0,
    "start_time": "2024-05-22T19:50:48.950Z"
   },
   {
    "duration": 0,
    "start_time": "2024-05-22T19:50:48.952Z"
   },
   {
    "duration": 0,
    "start_time": "2024-05-22T19:50:48.954Z"
   },
   {
    "duration": 0,
    "start_time": "2024-05-22T19:50:48.956Z"
   },
   {
    "duration": 0,
    "start_time": "2024-05-22T19:50:48.958Z"
   },
   {
    "duration": 0,
    "start_time": "2024-05-22T19:50:48.960Z"
   },
   {
    "duration": 0,
    "start_time": "2024-05-22T19:50:48.963Z"
   },
   {
    "duration": 0,
    "start_time": "2024-05-22T19:50:48.966Z"
   },
   {
    "duration": 0,
    "start_time": "2024-05-22T19:50:48.968Z"
   },
   {
    "duration": 0,
    "start_time": "2024-05-22T19:50:48.970Z"
   },
   {
    "duration": 0,
    "start_time": "2024-05-22T19:50:49.007Z"
   },
   {
    "duration": 0,
    "start_time": "2024-05-22T19:50:49.008Z"
   },
   {
    "duration": 0,
    "start_time": "2024-05-22T19:50:49.010Z"
   },
   {
    "duration": 0,
    "start_time": "2024-05-22T19:50:49.012Z"
   },
   {
    "duration": 0,
    "start_time": "2024-05-22T19:50:49.014Z"
   },
   {
    "duration": 0,
    "start_time": "2024-05-22T19:50:49.017Z"
   },
   {
    "duration": 0,
    "start_time": "2024-05-22T19:50:49.019Z"
   },
   {
    "duration": 0,
    "start_time": "2024-05-22T19:50:49.025Z"
   },
   {
    "duration": 0,
    "start_time": "2024-05-22T19:50:49.027Z"
   },
   {
    "duration": 5,
    "start_time": "2024-05-22T19:50:57.661Z"
   },
   {
    "duration": 276,
    "start_time": "2024-05-22T19:50:58.104Z"
   },
   {
    "duration": 14,
    "start_time": "2024-05-22T19:50:58.676Z"
   },
   {
    "duration": 12,
    "start_time": "2024-05-22T19:50:58.827Z"
   },
   {
    "duration": 13,
    "start_time": "2024-05-22T19:50:59.612Z"
   },
   {
    "duration": 16,
    "start_time": "2024-05-22T19:51:00.020Z"
   },
   {
    "duration": 22,
    "start_time": "2024-05-22T19:51:00.290Z"
   },
   {
    "duration": 45,
    "start_time": "2024-05-22T19:51:00.425Z"
   },
   {
    "duration": 33,
    "start_time": "2024-05-22T19:51:07.779Z"
   },
   {
    "duration": 38,
    "start_time": "2024-05-22T19:51:09.712Z"
   },
   {
    "duration": 24,
    "start_time": "2024-05-22T19:51:12.326Z"
   },
   {
    "duration": 15,
    "start_time": "2024-05-22T19:51:12.852Z"
   },
   {
    "duration": 95,
    "start_time": "2024-05-22T19:51:15.881Z"
   },
   {
    "duration": 38,
    "start_time": "2024-05-22T19:51:25.711Z"
   },
   {
    "duration": 42,
    "start_time": "2024-05-22T19:51:29.079Z"
   },
   {
    "duration": 78,
    "start_time": "2024-05-22T19:52:32.542Z"
   },
   {
    "duration": 111,
    "start_time": "2024-05-22T19:53:28.135Z"
   },
   {
    "duration": 3,
    "start_time": "2024-05-22T19:53:38.254Z"
   },
   {
    "duration": 288,
    "start_time": "2024-05-22T19:53:38.644Z"
   },
   {
    "duration": 14,
    "start_time": "2024-05-22T19:53:39.205Z"
   },
   {
    "duration": 11,
    "start_time": "2024-05-22T19:53:39.390Z"
   },
   {
    "duration": 12,
    "start_time": "2024-05-22T19:53:40.252Z"
   },
   {
    "duration": 16,
    "start_time": "2024-05-22T19:53:40.767Z"
   },
   {
    "duration": 14,
    "start_time": "2024-05-22T19:53:41.285Z"
   },
   {
    "duration": 28,
    "start_time": "2024-05-22T19:53:41.304Z"
   },
   {
    "duration": 34,
    "start_time": "2024-05-22T19:53:42.089Z"
   },
   {
    "duration": 26,
    "start_time": "2024-05-22T19:53:42.610Z"
   },
   {
    "duration": 26,
    "start_time": "2024-05-22T19:53:42.983Z"
   },
   {
    "duration": 15,
    "start_time": "2024-05-22T19:53:43.083Z"
   },
   {
    "duration": 273,
    "start_time": "2024-05-22T19:53:44.789Z"
   },
   {
    "duration": 4,
    "start_time": "2024-05-22T19:54:49.359Z"
   },
   {
    "duration": 274,
    "start_time": "2024-05-22T19:54:50.266Z"
   },
   {
    "duration": 15,
    "start_time": "2024-05-22T19:54:50.847Z"
   },
   {
    "duration": 11,
    "start_time": "2024-05-22T19:54:51.002Z"
   },
   {
    "duration": 13,
    "start_time": "2024-05-22T19:54:51.809Z"
   },
   {
    "duration": 16,
    "start_time": "2024-05-22T19:54:52.248Z"
   },
   {
    "duration": 15,
    "start_time": "2024-05-22T19:54:52.558Z"
   },
   {
    "duration": 13,
    "start_time": "2024-05-22T19:54:52.700Z"
   },
   {
    "duration": 28,
    "start_time": "2024-05-22T19:54:53.481Z"
   },
   {
    "duration": 26,
    "start_time": "2024-05-22T19:54:53.970Z"
   },
   {
    "duration": 26,
    "start_time": "2024-05-22T19:54:54.470Z"
   },
   {
    "duration": 15,
    "start_time": "2024-05-22T19:54:54.774Z"
   },
   {
    "duration": 123,
    "start_time": "2024-05-22T19:54:57.311Z"
   },
   {
    "duration": 37,
    "start_time": "2024-05-22T19:55:03.753Z"
   },
   {
    "duration": 787,
    "start_time": "2024-05-22T20:00:23.054Z"
   },
   {
    "duration": 5,
    "start_time": "2024-05-22T20:00:30.849Z"
   },
   {
    "duration": 254,
    "start_time": "2024-05-22T20:00:31.251Z"
   },
   {
    "duration": 16,
    "start_time": "2024-05-22T20:00:31.888Z"
   },
   {
    "duration": 11,
    "start_time": "2024-05-22T20:00:32.028Z"
   },
   {
    "duration": 12,
    "start_time": "2024-05-22T20:00:32.900Z"
   },
   {
    "duration": 18,
    "start_time": "2024-05-22T20:00:33.463Z"
   },
   {
    "duration": 15,
    "start_time": "2024-05-22T20:00:33.883Z"
   },
   {
    "duration": 18,
    "start_time": "2024-05-22T20:00:34.077Z"
   },
   {
    "duration": 29,
    "start_time": "2024-05-22T20:00:35.265Z"
   },
   {
    "duration": 28,
    "start_time": "2024-05-22T20:00:35.856Z"
   },
   {
    "duration": 25,
    "start_time": "2024-05-22T20:00:36.804Z"
   },
   {
    "duration": 15,
    "start_time": "2024-05-22T20:00:37.746Z"
   },
   {
    "duration": 124,
    "start_time": "2024-05-22T20:00:39.268Z"
   },
   {
    "duration": 93,
    "start_time": "2024-05-22T20:00:41.460Z"
   },
   {
    "duration": 69,
    "start_time": "2024-05-22T20:01:25.468Z"
   },
   {
    "duration": 4,
    "start_time": "2024-05-22T20:01:28.420Z"
   },
   {
    "duration": 264,
    "start_time": "2024-05-22T20:01:28.876Z"
   },
   {
    "duration": 14,
    "start_time": "2024-05-22T20:01:29.634Z"
   },
   {
    "duration": 11,
    "start_time": "2024-05-22T20:01:29.652Z"
   },
   {
    "duration": 12,
    "start_time": "2024-05-22T20:01:30.385Z"
   },
   {
    "duration": 16,
    "start_time": "2024-05-22T20:01:30.836Z"
   },
   {
    "duration": 13,
    "start_time": "2024-05-22T20:01:31.106Z"
   },
   {
    "duration": 13,
    "start_time": "2024-05-22T20:01:31.266Z"
   },
   {
    "duration": 28,
    "start_time": "2024-05-22T20:01:31.966Z"
   },
   {
    "duration": 28,
    "start_time": "2024-05-22T20:01:32.367Z"
   },
   {
    "duration": 24,
    "start_time": "2024-05-22T20:01:32.782Z"
   },
   {
    "duration": 16,
    "start_time": "2024-05-22T20:01:32.809Z"
   },
   {
    "duration": 131,
    "start_time": "2024-05-22T20:01:33.521Z"
   },
   {
    "duration": 161,
    "start_time": "2024-05-22T20:01:33.901Z"
   },
   {
    "duration": 56,
    "start_time": "2024-05-22T20:01:50.743Z"
   },
   {
    "duration": 4,
    "start_time": "2024-05-22T20:01:53.667Z"
   },
   {
    "duration": 261,
    "start_time": "2024-05-22T20:01:54.101Z"
   },
   {
    "duration": 16,
    "start_time": "2024-05-22T20:01:54.645Z"
   },
   {
    "duration": 12,
    "start_time": "2024-05-22T20:01:54.783Z"
   },
   {
    "duration": 14,
    "start_time": "2024-05-22T20:01:55.471Z"
   },
   {
    "duration": 16,
    "start_time": "2024-05-22T20:01:55.825Z"
   },
   {
    "duration": 17,
    "start_time": "2024-05-22T20:01:56.094Z"
   },
   {
    "duration": 14,
    "start_time": "2024-05-22T20:01:56.225Z"
   },
   {
    "duration": 28,
    "start_time": "2024-05-22T20:01:56.881Z"
   },
   {
    "duration": 30,
    "start_time": "2024-05-22T20:02:01.357Z"
   },
   {
    "duration": 25,
    "start_time": "2024-05-22T20:02:01.716Z"
   },
   {
    "duration": 16,
    "start_time": "2024-05-22T20:02:01.889Z"
   },
   {
    "duration": 127,
    "start_time": "2024-05-22T20:02:02.799Z"
   },
   {
    "duration": 153,
    "start_time": "2024-05-22T20:02:04.580Z"
   },
   {
    "duration": 22,
    "start_time": "2024-05-22T20:58:40.561Z"
   },
   {
    "duration": 29,
    "start_time": "2024-05-22T20:58:50.587Z"
   },
   {
    "duration": 19,
    "start_time": "2024-05-22T20:58:52.922Z"
   },
   {
    "duration": 12,
    "start_time": "2024-05-22T20:59:36.364Z"
   },
   {
    "duration": 40,
    "start_time": "2024-05-22T21:03:24.281Z"
   },
   {
    "duration": 7,
    "start_time": "2024-05-22T21:08:16.726Z"
   },
   {
    "duration": 6,
    "start_time": "2024-05-22T21:08:53.637Z"
   },
   {
    "duration": 76,
    "start_time": "2024-05-22T21:09:03.590Z"
   },
   {
    "duration": 5,
    "start_time": "2024-05-22T21:09:10.136Z"
   },
   {
    "duration": 266,
    "start_time": "2024-05-22T21:09:10.560Z"
   },
   {
    "duration": 13,
    "start_time": "2024-05-22T21:09:11.102Z"
   },
   {
    "duration": 12,
    "start_time": "2024-05-22T21:09:11.235Z"
   },
   {
    "duration": 12,
    "start_time": "2024-05-22T21:09:12.198Z"
   },
   {
    "duration": 17,
    "start_time": "2024-05-22T21:09:13.223Z"
   },
   {
    "duration": 14,
    "start_time": "2024-05-22T21:09:13.778Z"
   },
   {
    "duration": 14,
    "start_time": "2024-05-22T21:09:14.010Z"
   },
   {
    "duration": 33,
    "start_time": "2024-05-22T21:09:16.267Z"
   },
   {
    "duration": 685,
    "start_time": "2024-05-22T21:09:53.615Z"
   },
   {
    "duration": 321,
    "start_time": "2024-05-22T21:09:54.305Z"
   },
   {
    "duration": 18,
    "start_time": "2024-05-22T21:09:54.630Z"
   },
   {
    "duration": 20,
    "start_time": "2024-05-22T21:09:54.652Z"
   },
   {
    "duration": 41,
    "start_time": "2024-05-22T21:09:54.680Z"
   },
   {
    "duration": 20,
    "start_time": "2024-05-22T21:09:54.725Z"
   },
   {
    "duration": 16,
    "start_time": "2024-05-22T21:09:54.748Z"
   },
   {
    "duration": 43,
    "start_time": "2024-05-22T21:09:54.771Z"
   },
   {
    "duration": 30,
    "start_time": "2024-05-22T21:09:54.817Z"
   },
   {
    "duration": 58,
    "start_time": "2024-05-22T21:09:54.849Z"
   },
   {
    "duration": 26,
    "start_time": "2024-05-22T21:09:54.910Z"
   },
   {
    "duration": 16,
    "start_time": "2024-05-22T21:09:54.939Z"
   },
   {
    "duration": 163,
    "start_time": "2024-05-22T21:09:54.958Z"
   },
   {
    "duration": 171,
    "start_time": "2024-05-22T21:09:55.127Z"
   },
   {
    "duration": 20,
    "start_time": "2024-05-22T21:09:55.305Z"
   },
   {
    "duration": 13,
    "start_time": "2024-05-22T21:09:55.328Z"
   },
   {
    "duration": 66,
    "start_time": "2024-05-22T21:09:55.345Z"
   },
   {
    "duration": 4,
    "start_time": "2024-05-22T21:09:55.414Z"
   },
   {
    "duration": 4,
    "start_time": "2024-05-22T21:09:55.421Z"
   },
   {
    "duration": 8,
    "start_time": "2024-05-22T21:09:55.427Z"
   },
   {
    "duration": 7,
    "start_time": "2024-05-22T21:09:55.437Z"
   },
   {
    "duration": 3,
    "start_time": "2024-05-22T21:09:55.447Z"
   },
   {
    "duration": 7,
    "start_time": "2024-05-22T21:09:55.453Z"
   },
   {
    "duration": 4,
    "start_time": "2024-05-22T21:09:55.505Z"
   },
   {
    "duration": 4,
    "start_time": "2024-05-22T21:09:55.512Z"
   },
   {
    "duration": 4,
    "start_time": "2024-05-22T21:09:55.519Z"
   },
   {
    "duration": 4,
    "start_time": "2024-05-22T21:09:55.526Z"
   },
   {
    "duration": 6,
    "start_time": "2024-05-22T21:09:55.533Z"
   },
   {
    "duration": 8,
    "start_time": "2024-05-22T21:09:55.542Z"
   },
   {
    "duration": 4,
    "start_time": "2024-05-22T21:09:55.554Z"
   },
   {
    "duration": 4,
    "start_time": "2024-05-22T21:09:55.605Z"
   },
   {
    "duration": 4,
    "start_time": "2024-05-22T21:09:55.612Z"
   },
   {
    "duration": 4,
    "start_time": "2024-05-22T21:09:55.619Z"
   },
   {
    "duration": 8,
    "start_time": "2024-05-22T21:09:55.626Z"
   },
   {
    "duration": 5,
    "start_time": "2024-05-22T21:09:55.637Z"
   },
   {
    "duration": 8,
    "start_time": "2024-05-22T21:09:55.645Z"
   },
   {
    "duration": 695,
    "start_time": "2024-05-22T21:10:00.411Z"
   },
   {
    "duration": 325,
    "start_time": "2024-05-22T21:10:01.109Z"
   },
   {
    "duration": 14,
    "start_time": "2024-05-22T21:10:01.510Z"
   },
   {
    "duration": 15,
    "start_time": "2024-05-22T21:10:01.671Z"
   },
   {
    "duration": 17,
    "start_time": "2024-05-22T21:10:02.457Z"
   },
   {
    "duration": 18,
    "start_time": "2024-05-22T21:10:03.103Z"
   },
   {
    "duration": 15,
    "start_time": "2024-05-22T21:10:03.404Z"
   },
   {
    "duration": 20,
    "start_time": "2024-05-22T21:10:03.549Z"
   },
   {
    "duration": 29,
    "start_time": "2024-05-22T21:10:04.338Z"
   },
   {
    "duration": 31,
    "start_time": "2024-05-22T21:10:04.817Z"
   },
   {
    "duration": 25,
    "start_time": "2024-05-22T21:10:05.103Z"
   },
   {
    "duration": 15,
    "start_time": "2024-05-22T21:10:05.307Z"
   },
   {
    "duration": 129,
    "start_time": "2024-05-22T21:10:07.106Z"
   },
   {
    "duration": 158,
    "start_time": "2024-05-22T21:10:07.713Z"
   },
   {
    "duration": 20,
    "start_time": "2024-05-22T21:10:11.793Z"
   },
   {
    "duration": 12,
    "start_time": "2024-05-22T21:10:12.157Z"
   },
   {
    "duration": 39,
    "start_time": "2024-05-22T21:10:18.622Z"
   },
   {
    "duration": 68,
    "start_time": "2024-05-22T21:11:17.610Z"
   },
   {
    "duration": 1134,
    "start_time": "2024-05-22T21:11:21.982Z"
   },
   {
    "duration": 4,
    "start_time": "2024-05-22T21:11:27.457Z"
   },
   {
    "duration": 261,
    "start_time": "2024-05-22T21:11:27.932Z"
   },
   {
    "duration": 14,
    "start_time": "2024-05-22T21:11:28.540Z"
   },
   {
    "duration": 13,
    "start_time": "2024-05-22T21:11:28.676Z"
   },
   {
    "duration": 13,
    "start_time": "2024-05-22T21:11:29.489Z"
   },
   {
    "duration": 16,
    "start_time": "2024-05-22T21:11:29.978Z"
   },
   {
    "duration": 14,
    "start_time": "2024-05-22T21:11:30.309Z"
   },
   {
    "duration": 14,
    "start_time": "2024-05-22T21:11:30.473Z"
   },
   {
    "duration": 28,
    "start_time": "2024-05-22T21:11:31.318Z"
   },
   {
    "duration": 28,
    "start_time": "2024-05-22T21:11:31.807Z"
   },
   {
    "duration": 28,
    "start_time": "2024-05-22T21:11:32.136Z"
   },
   {
    "duration": 15,
    "start_time": "2024-05-22T21:11:32.285Z"
   },
   {
    "duration": 124,
    "start_time": "2024-05-22T21:11:33.104Z"
   },
   {
    "duration": 155,
    "start_time": "2024-05-22T21:11:33.660Z"
   },
   {
    "duration": 19,
    "start_time": "2024-05-22T21:11:34.733Z"
   },
   {
    "duration": 12,
    "start_time": "2024-05-22T21:11:35.237Z"
   },
   {
    "duration": 42,
    "start_time": "2024-05-22T21:11:37.866Z"
   },
   {
    "duration": 85,
    "start_time": "2024-05-22T21:11:39.045Z"
   },
   {
    "duration": 4364,
    "start_time": "2024-05-23T03:16:36.845Z"
   },
   {
    "duration": 343,
    "start_time": "2024-05-23T03:16:41.212Z"
   },
   {
    "duration": 20,
    "start_time": "2024-05-23T03:16:41.558Z"
   },
   {
    "duration": 32,
    "start_time": "2024-05-23T03:16:41.581Z"
   },
   {
    "duration": 14,
    "start_time": "2024-05-23T03:16:41.616Z"
   },
   {
    "duration": 18,
    "start_time": "2024-05-23T03:16:41.633Z"
   },
   {
    "duration": 16,
    "start_time": "2024-05-23T03:16:41.653Z"
   },
   {
    "duration": 15,
    "start_time": "2024-05-23T03:16:41.708Z"
   },
   {
    "duration": 33,
    "start_time": "2024-05-23T03:16:42.796Z"
   },
   {
    "duration": 32,
    "start_time": "2024-05-23T03:16:43.510Z"
   },
   {
    "duration": 25,
    "start_time": "2024-05-23T03:16:44.422Z"
   },
   {
    "duration": 17,
    "start_time": "2024-05-23T03:16:44.658Z"
   },
   {
    "duration": 135,
    "start_time": "2024-05-23T03:16:47.184Z"
   },
   {
    "duration": 160,
    "start_time": "2024-05-23T03:16:48.965Z"
   },
   {
    "duration": 20,
    "start_time": "2024-05-23T03:16:50.821Z"
   },
   {
    "duration": 12,
    "start_time": "2024-05-23T03:16:52.546Z"
   },
   {
    "duration": 40,
    "start_time": "2024-05-23T03:16:56.348Z"
   },
   {
    "duration": 81,
    "start_time": "2024-05-23T03:16:56.937Z"
   },
   {
    "duration": 10,
    "start_time": "2024-05-23T03:16:57.371Z"
   },
   {
    "duration": 3,
    "start_time": "2024-05-23T03:16:57.606Z"
   },
   {
    "duration": 22,
    "start_time": "2024-05-23T03:17:07.697Z"
   },
   {
    "duration": 13,
    "start_time": "2024-05-23T03:17:29.374Z"
   },
   {
    "duration": 21,
    "start_time": "2024-05-23T03:17:35.849Z"
   },
   {
    "duration": 1278,
    "start_time": "2024-05-23T03:23:57.195Z"
   },
   {
    "duration": 24,
    "start_time": "2024-05-23T03:24:13.961Z"
   },
   {
    "duration": 29,
    "start_time": "2024-05-23T03:24:20.250Z"
   },
   {
    "duration": 19,
    "start_time": "2024-05-23T03:24:27.025Z"
   },
   {
    "duration": 76,
    "start_time": "2024-05-23T03:24:50.433Z"
   },
   {
    "duration": 95,
    "start_time": "2024-05-23T03:27:22.631Z"
   },
   {
    "duration": 777,
    "start_time": "2024-05-23T03:27:27.355Z"
   },
   {
    "duration": 647,
    "start_time": "2024-05-23T03:28:56.375Z"
   },
   {
    "duration": 347,
    "start_time": "2024-05-23T03:28:57.026Z"
   },
   {
    "duration": 24,
    "start_time": "2024-05-23T03:28:57.377Z"
   },
   {
    "duration": 15,
    "start_time": "2024-05-23T03:28:57.473Z"
   },
   {
    "duration": 13,
    "start_time": "2024-05-23T03:28:58.328Z"
   },
   {
    "duration": 19,
    "start_time": "2024-05-23T03:28:58.879Z"
   },
   {
    "duration": 15,
    "start_time": "2024-05-23T03:28:59.250Z"
   },
   {
    "duration": 14,
    "start_time": "2024-05-23T03:28:59.428Z"
   },
   {
    "duration": 29,
    "start_time": "2024-05-23T03:29:00.361Z"
   },
   {
    "duration": 29,
    "start_time": "2024-05-23T03:29:00.916Z"
   },
   {
    "duration": 25,
    "start_time": "2024-05-23T03:29:01.292Z"
   },
   {
    "duration": 17,
    "start_time": "2024-05-23T03:29:01.468Z"
   },
   {
    "duration": 130,
    "start_time": "2024-05-23T03:29:02.262Z"
   },
   {
    "duration": 166,
    "start_time": "2024-05-23T03:29:02.803Z"
   },
   {
    "duration": 20,
    "start_time": "2024-05-23T03:29:03.226Z"
   },
   {
    "duration": 12,
    "start_time": "2024-05-23T03:29:04.729Z"
   },
   {
    "duration": 41,
    "start_time": "2024-05-23T03:29:06.212Z"
   },
   {
    "duration": 82,
    "start_time": "2024-05-23T03:29:08.067Z"
   },
   {
    "duration": 21,
    "start_time": "2024-05-23T03:29:10.055Z"
   },
   {
    "duration": 15,
    "start_time": "2024-05-23T03:29:10.487Z"
   },
   {
    "duration": 43,
    "start_time": "2024-05-23T03:29:12.529Z"
   },
   {
    "duration": 107,
    "start_time": "2024-05-23T03:29:14.362Z"
   },
   {
    "duration": 13,
    "start_time": "2024-05-23T03:32:09.770Z"
   },
   {
    "duration": 1075,
    "start_time": "2024-05-23T03:39:21.498Z"
   },
   {
    "duration": 31,
    "start_time": "2024-05-23T03:39:37.343Z"
   },
   {
    "duration": 34,
    "start_time": "2024-05-23T03:39:46.126Z"
   },
   {
    "duration": 34,
    "start_time": "2024-05-23T03:40:32.515Z"
   },
   {
    "duration": 33,
    "start_time": "2024-05-23T03:41:16.464Z"
   },
   {
    "duration": 318,
    "start_time": "2024-05-28T18:58:51.375Z"
   },
   {
    "duration": 4394,
    "start_time": "2024-05-28T18:59:07.050Z"
   },
   {
    "duration": 402,
    "start_time": "2024-05-28T18:59:11.448Z"
   },
   {
    "duration": 25,
    "start_time": "2024-05-28T18:59:11.853Z"
   },
   {
    "duration": 16,
    "start_time": "2024-05-28T18:59:11.882Z"
   },
   {
    "duration": 13,
    "start_time": "2024-05-28T18:59:11.913Z"
   },
   {
    "duration": 19,
    "start_time": "2024-05-28T18:59:11.929Z"
   },
   {
    "duration": 15,
    "start_time": "2024-05-28T18:59:13.679Z"
   },
   {
    "duration": 18,
    "start_time": "2024-05-28T18:59:13.916Z"
   },
   {
    "duration": 31,
    "start_time": "2024-05-28T18:59:15.025Z"
   },
   {
    "duration": 27,
    "start_time": "2024-05-28T18:59:15.674Z"
   },
   {
    "duration": 25,
    "start_time": "2024-05-28T18:59:16.067Z"
   },
   {
    "duration": 17,
    "start_time": "2024-05-28T18:59:16.299Z"
   },
   {
    "duration": 129,
    "start_time": "2024-05-28T18:59:17.236Z"
   },
   {
    "duration": 160,
    "start_time": "2024-05-28T18:59:17.841Z"
   },
   {
    "duration": 19,
    "start_time": "2024-05-28T18:59:18.229Z"
   },
   {
    "duration": 13,
    "start_time": "2024-05-28T18:59:18.429Z"
   },
   {
    "duration": 39,
    "start_time": "2024-05-28T18:59:19.461Z"
   },
   {
    "duration": 85,
    "start_time": "2024-05-28T18:59:20.149Z"
   },
   {
    "duration": 22,
    "start_time": "2024-05-28T18:59:20.493Z"
   },
   {
    "duration": 15,
    "start_time": "2024-05-28T18:59:20.700Z"
   },
   {
    "duration": 39,
    "start_time": "2024-05-28T18:59:21.778Z"
   },
   {
    "duration": 107,
    "start_time": "2024-05-28T18:59:22.448Z"
   },
   {
    "duration": 12,
    "start_time": "2024-05-28T18:59:23.164Z"
   },
   {
    "duration": 43,
    "start_time": "2024-05-28T18:59:23.689Z"
   },
   {
    "duration": 1058,
    "start_time": "2024-05-28T19:08:49.320Z"
   },
   {
    "duration": 6,
    "start_time": "2024-05-28T19:17:24.155Z"
   },
   {
    "duration": 6,
    "start_time": "2024-05-28T19:17:32.679Z"
   },
   {
    "duration": 5,
    "start_time": "2024-05-28T19:17:45.378Z"
   },
   {
    "duration": 346,
    "start_time": "2024-05-28T19:17:52.368Z"
   },
   {
    "duration": 184,
    "start_time": "2024-05-28T19:19:33.876Z"
   },
   {
    "duration": 26,
    "start_time": "2024-05-28T19:20:01.411Z"
   },
   {
    "duration": 35,
    "start_time": "2024-05-28T19:20:13.074Z"
   },
   {
    "duration": 37,
    "start_time": "2024-05-28T19:20:29.171Z"
   },
   {
    "duration": 4654,
    "start_time": "2024-05-30T01:11:26.610Z"
   },
   {
    "duration": 355,
    "start_time": "2024-05-30T01:11:31.268Z"
   },
   {
    "duration": 16,
    "start_time": "2024-05-30T01:11:31.626Z"
   },
   {
    "duration": 16,
    "start_time": "2024-05-30T01:11:31.646Z"
   },
   {
    "duration": 13,
    "start_time": "2024-05-30T01:11:31.665Z"
   },
   {
    "duration": 55,
    "start_time": "2024-05-30T01:11:31.681Z"
   },
   {
    "duration": 15,
    "start_time": "2024-05-30T01:11:31.739Z"
   },
   {
    "duration": 16,
    "start_time": "2024-05-30T01:11:31.756Z"
   },
   {
    "duration": 66,
    "start_time": "2024-05-30T01:11:31.775Z"
   },
   {
    "duration": 28,
    "start_time": "2024-05-30T01:11:31.847Z"
   },
   {
    "duration": 25,
    "start_time": "2024-05-30T01:11:31.878Z"
   },
   {
    "duration": 20,
    "start_time": "2024-05-30T01:11:32.039Z"
   },
   {
    "duration": 131,
    "start_time": "2024-05-30T01:11:32.938Z"
   },
   {
    "duration": 163,
    "start_time": "2024-05-30T01:11:33.466Z"
   },
   {
    "duration": 27,
    "start_time": "2024-05-30T01:11:33.795Z"
   },
   {
    "duration": 16,
    "start_time": "2024-05-30T01:11:33.954Z"
   },
   {
    "duration": 43,
    "start_time": "2024-05-30T01:11:34.803Z"
   },
   {
    "duration": 107,
    "start_time": "2024-05-30T01:11:35.186Z"
   },
   {
    "duration": 23,
    "start_time": "2024-05-30T01:11:35.488Z"
   },
   {
    "duration": 14,
    "start_time": "2024-05-30T01:11:35.639Z"
   },
   {
    "duration": 37,
    "start_time": "2024-05-30T01:11:36.380Z"
   },
   {
    "duration": 110,
    "start_time": "2024-05-30T01:11:37.424Z"
   },
   {
    "duration": 13,
    "start_time": "2024-05-30T01:11:39.673Z"
   },
   {
    "duration": 43,
    "start_time": "2024-05-30T01:11:40.087Z"
   },
   {
    "duration": 35,
    "start_time": "2024-05-30T01:11:40.290Z"
   },
   {
    "duration": 3,
    "start_time": "2024-05-30T01:11:40.566Z"
   },
   {
    "duration": 3,
    "start_time": "2024-05-30T01:11:41.000Z"
   },
   {
    "duration": 17,
    "start_time": "2024-05-30T01:12:26.592Z"
   },
   {
    "duration": 26,
    "start_time": "2024-05-30T01:12:35.645Z"
   },
   {
    "duration": 27,
    "start_time": "2024-05-30T01:13:25.876Z"
   },
   {
    "duration": 20,
    "start_time": "2024-05-30T01:17:36.285Z"
   },
   {
    "duration": 32,
    "start_time": "2024-05-30T01:17:42.724Z"
   },
   {
    "duration": 405,
    "start_time": "2024-05-30T01:35:36.297Z"
   },
   {
    "duration": 27,
    "start_time": "2024-05-30T01:35:55.833Z"
   },
   {
    "duration": 34,
    "start_time": "2024-05-30T01:36:02.150Z"
   },
   {
    "duration": 607,
    "start_time": "2024-05-30T01:36:03.517Z"
   },
   {
    "duration": 27,
    "start_time": "2024-05-30T01:36:23.519Z"
   },
   {
    "duration": 23,
    "start_time": "2024-05-30T01:38:11.777Z"
   },
   {
    "duration": 8,
    "start_time": "2024-05-30T01:38:40.938Z"
   },
   {
    "duration": 5,
    "start_time": "2024-05-30T01:40:05.119Z"
   },
   {
    "duration": 647,
    "start_time": "2024-05-30T01:40:37.773Z"
   },
   {
    "duration": 319,
    "start_time": "2024-05-30T01:40:38.424Z"
   },
   {
    "duration": 15,
    "start_time": "2024-05-30T01:40:38.756Z"
   },
   {
    "duration": 16,
    "start_time": "2024-05-30T01:40:38.903Z"
   },
   {
    "duration": 12,
    "start_time": "2024-05-30T01:40:39.711Z"
   },
   {
    "duration": 16,
    "start_time": "2024-05-30T01:40:40.205Z"
   },
   {
    "duration": 14,
    "start_time": "2024-05-30T01:40:40.580Z"
   },
   {
    "duration": 14,
    "start_time": "2024-05-30T01:40:40.756Z"
   },
   {
    "duration": 30,
    "start_time": "2024-05-30T01:40:41.730Z"
   },
   {
    "duration": 27,
    "start_time": "2024-05-30T01:40:42.322Z"
   },
   {
    "duration": 26,
    "start_time": "2024-05-30T01:40:42.697Z"
   },
   {
    "duration": 15,
    "start_time": "2024-05-30T01:40:42.892Z"
   },
   {
    "duration": 136,
    "start_time": "2024-05-30T01:40:43.827Z"
   },
   {
    "duration": 157,
    "start_time": "2024-05-30T01:40:44.379Z"
   },
   {
    "duration": 21,
    "start_time": "2024-05-30T01:40:44.753Z"
   },
   {
    "duration": 13,
    "start_time": "2024-05-30T01:40:44.950Z"
   },
   {
    "duration": 45,
    "start_time": "2024-05-30T01:40:45.925Z"
   },
   {
    "duration": 85,
    "start_time": "2024-05-30T01:40:46.509Z"
   },
   {
    "duration": 29,
    "start_time": "2024-05-30T01:40:46.925Z"
   },
   {
    "duration": 14,
    "start_time": "2024-05-30T01:40:47.161Z"
   },
   {
    "duration": 38,
    "start_time": "2024-05-30T01:40:48.279Z"
   },
   {
    "duration": 106,
    "start_time": "2024-05-30T01:40:48.857Z"
   },
   {
    "duration": 11,
    "start_time": "2024-05-30T01:40:49.380Z"
   },
   {
    "duration": 42,
    "start_time": "2024-05-30T01:40:49.775Z"
   },
   {
    "duration": 42,
    "start_time": "2024-05-30T01:40:50.166Z"
   },
   {
    "duration": 28,
    "start_time": "2024-05-30T01:40:50.366Z"
   },
   {
    "duration": 31,
    "start_time": "2024-05-30T01:40:50.599Z"
   },
   {
    "duration": 6,
    "start_time": "2024-05-30T01:40:51.064Z"
   },
   {
    "duration": 7,
    "start_time": "2024-05-30T01:44:54.637Z"
   },
   {
    "duration": 26,
    "start_time": "2024-05-30T02:54:13.717Z"
   },
   {
    "duration": 39,
    "start_time": "2024-05-30T02:54:25.762Z"
   },
   {
    "duration": 38,
    "start_time": "2024-05-30T02:54:47.735Z"
   },
   {
    "duration": 364,
    "start_time": "2024-05-30T02:55:32.079Z"
   },
   {
    "duration": 90,
    "start_time": "2024-05-30T02:55:38.802Z"
   },
   {
    "duration": 30,
    "start_time": "2024-05-30T02:56:16.787Z"
   },
   {
    "duration": 59,
    "start_time": "2024-05-30T02:56:23.153Z"
   },
   {
    "duration": 829,
    "start_time": "2024-05-30T02:59:21.461Z"
   },
   {
    "duration": 645,
    "start_time": "2024-05-30T02:59:33.298Z"
   },
   {
    "duration": 314,
    "start_time": "2024-05-30T02:59:33.946Z"
   },
   {
    "duration": 14,
    "start_time": "2024-05-30T02:59:34.300Z"
   },
   {
    "duration": 16,
    "start_time": "2024-05-30T02:59:34.420Z"
   },
   {
    "duration": 13,
    "start_time": "2024-05-30T02:59:35.200Z"
   },
   {
    "duration": 18,
    "start_time": "2024-05-30T02:59:35.626Z"
   },
   {
    "duration": 14,
    "start_time": "2024-05-30T02:59:35.881Z"
   },
   {
    "duration": 19,
    "start_time": "2024-05-30T02:59:36.028Z"
   },
   {
    "duration": 30,
    "start_time": "2024-05-30T02:59:36.700Z"
   },
   {
    "duration": 28,
    "start_time": "2024-05-30T02:59:37.129Z"
   },
   {
    "duration": 25,
    "start_time": "2024-05-30T02:59:37.447Z"
   },
   {
    "duration": 16,
    "start_time": "2024-05-30T02:59:37.586Z"
   },
   {
    "duration": 131,
    "start_time": "2024-05-30T02:59:38.768Z"
   },
   {
    "duration": 161,
    "start_time": "2024-05-30T02:59:39.308Z"
   },
   {
    "duration": 19,
    "start_time": "2024-05-30T02:59:39.679Z"
   },
   {
    "duration": 12,
    "start_time": "2024-05-30T02:59:39.899Z"
   },
   {
    "duration": 39,
    "start_time": "2024-05-30T02:59:40.892Z"
   },
   {
    "duration": 86,
    "start_time": "2024-05-30T02:59:41.482Z"
   },
   {
    "duration": 22,
    "start_time": "2024-05-30T02:59:41.875Z"
   },
   {
    "duration": 16,
    "start_time": "2024-05-30T02:59:42.062Z"
   },
   {
    "duration": 39,
    "start_time": "2024-05-30T02:59:43.107Z"
   },
   {
    "duration": 110,
    "start_time": "2024-05-30T02:59:43.714Z"
   },
   {
    "duration": 12,
    "start_time": "2024-05-30T02:59:44.355Z"
   },
   {
    "duration": 50,
    "start_time": "2024-05-30T02:59:44.835Z"
   },
   {
    "duration": 35,
    "start_time": "2024-05-30T02:59:45.642Z"
   },
   {
    "duration": 28,
    "start_time": "2024-05-30T02:59:46.287Z"
   },
   {
    "duration": 30,
    "start_time": "2024-05-30T02:59:47.318Z"
   },
   {
    "duration": 60,
    "start_time": "2024-05-30T02:59:48.624Z"
   },
   {
    "duration": 167,
    "start_time": "2024-05-30T02:59:54.789Z"
   },
   {
    "duration": 11,
    "start_time": "2024-05-30T03:00:01.185Z"
   },
   {
    "duration": 55,
    "start_time": "2024-05-30T03:00:06.515Z"
   },
   {
    "duration": 904,
    "start_time": "2024-05-30T03:03:03.150Z"
   },
   {
    "duration": 61,
    "start_time": "2024-05-30T03:03:13.636Z"
   },
   {
    "duration": 80,
    "start_time": "2024-05-30T03:03:19.356Z"
   },
   {
    "duration": 23,
    "start_time": "2024-05-30T03:03:40.082Z"
   },
   {
    "duration": 52,
    "start_time": "2024-05-30T03:03:46.086Z"
   },
   {
    "duration": 5,
    "start_time": "2024-05-30T03:17:40.093Z"
   },
   {
    "duration": 47,
    "start_time": "2024-05-30T03:17:47.919Z"
   },
   {
    "duration": 317,
    "start_time": "2024-06-25T14:43:31.321Z"
   },
   {
    "duration": 4402,
    "start_time": "2024-06-25T14:43:48.422Z"
   },
   {
    "duration": 401,
    "start_time": "2024-06-25T14:43:52.828Z"
   },
   {
    "duration": 16,
    "start_time": "2024-06-25T14:43:53.232Z"
   },
   {
    "duration": 18,
    "start_time": "2024-06-25T14:43:53.252Z"
   },
   {
    "duration": 13,
    "start_time": "2024-06-25T14:43:53.273Z"
   },
   {
    "duration": 17,
    "start_time": "2024-06-25T14:43:54.256Z"
   },
   {
    "duration": 14,
    "start_time": "2024-06-25T14:43:54.622Z"
   },
   {
    "duration": 15,
    "start_time": "2024-06-25T14:43:54.806Z"
   },
   {
    "duration": 31,
    "start_time": "2024-06-25T14:43:55.717Z"
   },
   {
    "duration": 28,
    "start_time": "2024-06-25T14:43:56.354Z"
   },
   {
    "duration": 26,
    "start_time": "2024-06-25T14:43:56.758Z"
   },
   {
    "duration": 16,
    "start_time": "2024-06-25T14:43:56.950Z"
   },
   {
    "duration": 165,
    "start_time": "2024-06-25T14:43:57.976Z"
   },
   {
    "duration": 158,
    "start_time": "2024-06-25T14:43:58.548Z"
   },
   {
    "duration": 20,
    "start_time": "2024-06-25T14:43:58.930Z"
   },
   {
    "duration": 14,
    "start_time": "2024-06-25T14:43:59.136Z"
   },
   {
    "duration": 39,
    "start_time": "2024-06-25T14:44:00.171Z"
   },
   {
    "duration": 84,
    "start_time": "2024-06-25T14:44:00.686Z"
   },
   {
    "duration": 22,
    "start_time": "2024-06-25T14:44:01.051Z"
   },
   {
    "duration": 16,
    "start_time": "2024-06-25T14:44:01.223Z"
   },
   {
    "duration": 42,
    "start_time": "2024-06-25T14:44:02.842Z"
   },
   {
    "duration": 114,
    "start_time": "2024-06-25T14:44:03.465Z"
   },
   {
    "duration": 12,
    "start_time": "2024-06-25T14:44:04.086Z"
   },
   {
    "duration": 50,
    "start_time": "2024-06-25T14:44:04.552Z"
   },
   {
    "duration": 37,
    "start_time": "2024-06-25T14:44:04.859Z"
   },
   {
    "duration": 27,
    "start_time": "2024-06-25T14:44:08.122Z"
   },
   {
    "duration": 31,
    "start_time": "2024-06-25T14:44:08.331Z"
   },
   {
    "duration": 65,
    "start_time": "2024-06-25T14:44:08.881Z"
   },
   {
    "duration": 53,
    "start_time": "2024-06-25T14:44:09.152Z"
   },
   {
    "duration": 48,
    "start_time": "2024-06-25T14:44:11.623Z"
   },
   {
    "duration": 47,
    "start_time": "2024-06-25T14:44:15.232Z"
   },
   {
    "duration": 3,
    "start_time": "2024-06-25T14:53:56.973Z"
   },
   {
    "duration": 180,
    "start_time": "2024-06-25T16:02:02.608Z"
   },
   {
    "duration": 19,
    "start_time": "2024-06-25T16:02:08.980Z"
   },
   {
    "duration": 27,
    "start_time": "2024-06-25T16:02:11.430Z"
   },
   {
    "duration": 22,
    "start_time": "2024-06-25T16:03:05.544Z"
   },
   {
    "duration": 21,
    "start_time": "2024-06-25T16:03:40.477Z"
   },
   {
    "duration": 745,
    "start_time": "2024-06-25T16:04:31.190Z"
   },
   {
    "duration": 364,
    "start_time": "2024-06-25T16:04:31.941Z"
   },
   {
    "duration": 16,
    "start_time": "2024-06-25T16:04:32.461Z"
   },
   {
    "duration": 15,
    "start_time": "2024-06-25T16:04:32.649Z"
   },
   {
    "duration": 13,
    "start_time": "2024-06-25T16:04:33.537Z"
   },
   {
    "duration": 17,
    "start_time": "2024-06-25T16:04:34.062Z"
   },
   {
    "duration": 14,
    "start_time": "2024-06-25T16:04:34.456Z"
   },
   {
    "duration": 15,
    "start_time": "2024-06-25T16:04:34.645Z"
   },
   {
    "duration": 49,
    "start_time": "2024-06-25T16:04:35.599Z"
   },
   {
    "duration": 30,
    "start_time": "2024-06-25T16:04:36.161Z"
   },
   {
    "duration": 31,
    "start_time": "2024-06-25T16:04:36.527Z"
   },
   {
    "duration": 27,
    "start_time": "2024-06-25T16:04:36.711Z"
   },
   {
    "duration": 149,
    "start_time": "2024-06-25T16:04:37.630Z"
   },
   {
    "duration": 194,
    "start_time": "2024-06-25T16:04:38.209Z"
   },
   {
    "duration": 21,
    "start_time": "2024-06-25T16:04:38.566Z"
   },
   {
    "duration": 14,
    "start_time": "2024-06-25T16:04:38.749Z"
   },
   {
    "duration": 39,
    "start_time": "2024-06-25T16:04:39.753Z"
   },
   {
    "duration": 96,
    "start_time": "2024-06-25T16:04:40.768Z"
   },
   {
    "duration": 25,
    "start_time": "2024-06-25T16:04:41.237Z"
   },
   {
    "duration": 15,
    "start_time": "2024-06-25T16:04:41.477Z"
   },
   {
    "duration": 58,
    "start_time": "2024-06-25T16:04:42.594Z"
   },
   {
    "duration": 134,
    "start_time": "2024-06-25T16:04:43.216Z"
   },
   {
    "duration": 14,
    "start_time": "2024-06-25T16:04:43.833Z"
   },
   {
    "duration": 53,
    "start_time": "2024-06-25T16:04:44.320Z"
   },
   {
    "duration": 36,
    "start_time": "2024-06-25T16:04:44.737Z"
   },
   {
    "duration": 44,
    "start_time": "2024-06-25T16:04:45.697Z"
   },
   {
    "duration": 38,
    "start_time": "2024-06-25T16:04:46.098Z"
   },
   {
    "duration": 82,
    "start_time": "2024-06-25T16:04:46.747Z"
   },
   {
    "duration": 54,
    "start_time": "2024-06-25T16:04:46.838Z"
   },
   {
    "duration": 54,
    "start_time": "2024-06-25T16:04:47.101Z"
   },
   {
    "duration": 160,
    "start_time": "2024-06-25T16:04:49.143Z"
   },
   {
    "duration": 28,
    "start_time": "2024-06-25T16:06:41.803Z"
   },
   {
    "duration": 22,
    "start_time": "2024-06-25T16:11:09.596Z"
   },
   {
    "duration": 4,
    "start_time": "2024-06-25T16:13:24.302Z"
   },
   {
    "duration": 707,
    "start_time": "2024-06-25T16:13:34.993Z"
   },
   {
    "duration": 332,
    "start_time": "2024-06-25T16:13:35.704Z"
   },
   {
    "duration": 16,
    "start_time": "2024-06-25T16:13:36.042Z"
   },
   {
    "duration": 15,
    "start_time": "2024-06-25T16:13:36.122Z"
   },
   {
    "duration": 13,
    "start_time": "2024-06-25T16:13:36.544Z"
   },
   {
    "duration": 17,
    "start_time": "2024-06-25T16:13:36.788Z"
   },
   {
    "duration": 17,
    "start_time": "2024-06-25T16:13:36.962Z"
   },
   {
    "duration": 16,
    "start_time": "2024-06-25T16:13:37.039Z"
   },
   {
    "duration": 31,
    "start_time": "2024-06-25T16:13:37.461Z"
   },
   {
    "duration": 31,
    "start_time": "2024-06-25T16:13:37.717Z"
   },
   {
    "duration": 23,
    "start_time": "2024-06-25T16:13:37.872Z"
   },
   {
    "duration": 16,
    "start_time": "2024-06-25T16:13:37.957Z"
   },
   {
    "duration": 127,
    "start_time": "2024-06-25T16:13:38.371Z"
   },
   {
    "duration": 160,
    "start_time": "2024-06-25T16:13:38.621Z"
   },
   {
    "duration": 27,
    "start_time": "2024-06-25T16:13:38.787Z"
   },
   {
    "duration": 13,
    "start_time": "2024-06-25T16:13:38.875Z"
   },
   {
    "duration": 41,
    "start_time": "2024-06-25T16:13:39.298Z"
   },
   {
    "duration": 82,
    "start_time": "2024-06-25T16:13:39.543Z"
   },
   {
    "duration": 22,
    "start_time": "2024-06-25T16:13:39.705Z"
   },
   {
    "duration": 14,
    "start_time": "2024-06-25T16:13:39.789Z"
   },
   {
    "duration": 44,
    "start_time": "2024-06-25T16:13:40.208Z"
   },
   {
    "duration": 107,
    "start_time": "2024-06-25T16:13:40.461Z"
   },
   {
    "duration": 12,
    "start_time": "2024-06-25T16:13:41.024Z"
   },
   {
    "duration": 44,
    "start_time": "2024-06-25T16:13:41.405Z"
   },
   {
    "duration": 35,
    "start_time": "2024-06-25T16:13:41.679Z"
   },
   {
    "duration": 27,
    "start_time": "2024-06-25T16:13:42.079Z"
   },
   {
    "duration": 31,
    "start_time": "2024-06-25T16:13:42.439Z"
   },
   {
    "duration": 61,
    "start_time": "2024-06-25T16:13:42.792Z"
   },
   {
    "duration": 56,
    "start_time": "2024-06-25T16:13:42.953Z"
   },
   {
    "duration": 49,
    "start_time": "2024-06-25T16:13:43.233Z"
   },
   {
    "duration": 154,
    "start_time": "2024-06-25T16:14:49.224Z"
   },
   {
    "duration": 23,
    "start_time": "2024-06-25T16:18:15.223Z"
   },
   {
    "duration": 925,
    "start_time": "2024-06-25T16:18:57.623Z"
   },
   {
    "duration": 725,
    "start_time": "2024-06-25T16:19:43.821Z"
   },
   {
    "duration": 325,
    "start_time": "2024-06-25T16:19:44.550Z"
   },
   {
    "duration": 15,
    "start_time": "2024-06-25T16:19:44.879Z"
   },
   {
    "duration": 31,
    "start_time": "2024-06-25T16:19:44.898Z"
   },
   {
    "duration": 15,
    "start_time": "2024-06-25T16:19:44.932Z"
   },
   {
    "duration": 30,
    "start_time": "2024-06-25T16:19:45.141Z"
   },
   {
    "duration": 19,
    "start_time": "2024-06-25T16:19:45.307Z"
   },
   {
    "duration": 18,
    "start_time": "2024-06-25T16:19:45.394Z"
   },
   {
    "duration": 32,
    "start_time": "2024-06-25T16:19:45.815Z"
   },
   {
    "duration": 37,
    "start_time": "2024-06-25T16:19:46.058Z"
   },
   {
    "duration": 26,
    "start_time": "2024-06-25T16:19:46.223Z"
   },
   {
    "duration": 20,
    "start_time": "2024-06-25T16:19:46.308Z"
   },
   {
    "duration": 142,
    "start_time": "2024-06-25T16:19:46.724Z"
   },
   {
    "duration": 158,
    "start_time": "2024-06-25T16:19:46.982Z"
   },
   {
    "duration": 25,
    "start_time": "2024-06-25T16:19:47.144Z"
   },
   {
    "duration": 16,
    "start_time": "2024-06-25T16:19:47.250Z"
   },
   {
    "duration": 51,
    "start_time": "2024-06-25T16:19:47.653Z"
   },
   {
    "duration": 83,
    "start_time": "2024-06-25T16:19:47.902Z"
   },
   {
    "duration": 30,
    "start_time": "2024-06-25T16:19:48.064Z"
   },
   {
    "duration": 17,
    "start_time": "2024-06-25T16:19:48.152Z"
   },
   {
    "duration": 40,
    "start_time": "2024-06-25T16:19:48.578Z"
   },
   {
    "duration": 108,
    "start_time": "2024-06-25T16:19:48.822Z"
   },
   {
    "duration": 16,
    "start_time": "2024-06-25T16:19:49.075Z"
   },
   {
    "duration": 57,
    "start_time": "2024-06-25T16:19:49.247Z"
   },
   {
    "duration": 48,
    "start_time": "2024-06-25T16:19:49.322Z"
   },
   {
    "duration": 28,
    "start_time": "2024-06-25T16:19:49.889Z"
   },
   {
    "duration": 36,
    "start_time": "2024-06-25T16:19:50.034Z"
   },
   {
    "duration": 64,
    "start_time": "2024-06-25T16:19:50.354Z"
   },
   {
    "duration": 79,
    "start_time": "2024-06-25T16:19:50.493Z"
   },
   {
    "duration": 72,
    "start_time": "2024-06-25T16:19:50.774Z"
   },
   {
    "duration": 1119,
    "start_time": "2024-06-25T16:19:51.305Z"
   },
   {
    "duration": 13,
    "start_time": "2024-06-25T16:20:05.575Z"
   },
   {
    "duration": 20,
    "start_time": "2024-06-25T16:20:25.581Z"
   },
   {
    "duration": 39,
    "start_time": "2024-06-25T16:30:41.688Z"
   },
   {
    "duration": 26,
    "start_time": "2024-06-25T16:30:52.908Z"
   },
   {
    "duration": 229,
    "start_time": "2024-06-25T16:31:12.774Z"
   },
   {
    "duration": 384,
    "start_time": "2024-06-25T16:32:32.965Z"
   },
   {
    "duration": 19,
    "start_time": "2024-06-25T16:35:07.881Z"
   },
   {
    "duration": 20,
    "start_time": "2024-06-25T16:52:12.421Z"
   },
   {
    "duration": 13,
    "start_time": "2024-06-25T16:53:22.273Z"
   },
   {
    "duration": 18,
    "start_time": "2024-06-25T16:53:33.707Z"
   },
   {
    "duration": 14,
    "start_time": "2024-06-25T16:53:44.939Z"
   },
   {
    "duration": 16,
    "start_time": "2024-06-25T16:54:39.337Z"
   },
   {
    "duration": 7,
    "start_time": "2024-06-25T16:55:32.466Z"
   },
   {
    "duration": 14,
    "start_time": "2024-06-25T16:55:45.139Z"
   },
   {
    "duration": 7,
    "start_time": "2024-06-25T16:56:02.897Z"
   },
   {
    "duration": 7,
    "start_time": "2024-06-25T16:56:14.476Z"
   },
   {
    "duration": 6,
    "start_time": "2024-06-25T16:56:26.340Z"
   },
   {
    "duration": 14,
    "start_time": "2024-06-25T16:56:35.191Z"
   },
   {
    "duration": 35,
    "start_time": "2024-06-25T16:57:53.227Z"
   },
   {
    "duration": 31,
    "start_time": "2024-06-25T16:58:31.589Z"
   },
   {
    "duration": 713,
    "start_time": "2024-06-25T16:58:48.099Z"
   },
   {
    "duration": 332,
    "start_time": "2024-06-25T16:58:48.816Z"
   },
   {
    "duration": 17,
    "start_time": "2024-06-25T16:58:49.151Z"
   },
   {
    "duration": 15,
    "start_time": "2024-06-25T16:58:49.173Z"
   },
   {
    "duration": 13,
    "start_time": "2024-06-25T16:58:49.216Z"
   },
   {
    "duration": 18,
    "start_time": "2024-06-25T16:58:49.451Z"
   },
   {
    "duration": 16,
    "start_time": "2024-06-25T16:58:49.605Z"
   },
   {
    "duration": 14,
    "start_time": "2024-06-25T16:58:49.694Z"
   },
   {
    "duration": 30,
    "start_time": "2024-06-25T16:58:50.114Z"
   },
   {
    "duration": 30,
    "start_time": "2024-06-25T16:58:50.360Z"
   },
   {
    "duration": 26,
    "start_time": "2024-06-25T16:58:50.526Z"
   },
   {
    "duration": 16,
    "start_time": "2024-06-25T16:58:50.609Z"
   },
   {
    "duration": 129,
    "start_time": "2024-06-25T16:58:51.038Z"
   },
   {
    "duration": 161,
    "start_time": "2024-06-25T16:58:51.282Z"
   },
   {
    "duration": 19,
    "start_time": "2024-06-25T16:58:51.450Z"
   },
   {
    "duration": 13,
    "start_time": "2024-06-25T16:58:51.538Z"
   },
   {
    "duration": 41,
    "start_time": "2024-06-25T16:58:51.959Z"
   },
   {
    "duration": 80,
    "start_time": "2024-06-25T16:58:52.202Z"
   },
   {
    "duration": 23,
    "start_time": "2024-06-25T16:58:52.365Z"
   },
   {
    "duration": 15,
    "start_time": "2024-06-25T16:58:52.448Z"
   },
   {
    "duration": 40,
    "start_time": "2024-06-25T16:58:52.867Z"
   },
   {
    "duration": 114,
    "start_time": "2024-06-25T16:58:53.904Z"
   },
   {
    "duration": 12,
    "start_time": "2024-06-25T16:58:56.478Z"
   },
   {
    "duration": 43,
    "start_time": "2024-06-25T16:58:56.825Z"
   },
   {
    "duration": 35,
    "start_time": "2024-06-25T16:58:56.983Z"
   },
   {
    "duration": 28,
    "start_time": "2024-06-25T16:58:57.148Z"
   },
   {
    "duration": 33,
    "start_time": "2024-06-25T16:58:57.323Z"
   },
   {
    "duration": 61,
    "start_time": "2024-06-25T16:59:08.043Z"
   },
   {
    "duration": 53,
    "start_time": "2024-06-25T16:59:08.247Z"
   },
   {
    "duration": 48,
    "start_time": "2024-06-25T16:59:08.601Z"
   },
   {
    "duration": 354,
    "start_time": "2024-06-25T16:59:10.469Z"
   },
   {
    "duration": 19,
    "start_time": "2024-06-25T17:02:39.596Z"
   },
   {
    "duration": 19,
    "start_time": "2024-06-25T17:04:57.001Z"
   },
   {
    "duration": 11,
    "start_time": "2024-06-25T17:10:16.322Z"
   },
   {
    "duration": 836,
    "start_time": "2024-06-25T17:11:54.041Z"
   },
   {
    "duration": 693,
    "start_time": "2024-06-25T17:12:11.085Z"
   },
   {
    "duration": 340,
    "start_time": "2024-06-25T17:12:11.782Z"
   },
   {
    "duration": 18,
    "start_time": "2024-06-25T17:12:12.125Z"
   },
   {
    "duration": 17,
    "start_time": "2024-06-25T17:12:12.147Z"
   },
   {
    "duration": 34,
    "start_time": "2024-06-25T17:12:12.179Z"
   },
   {
    "duration": 17,
    "start_time": "2024-06-25T17:12:12.450Z"
   },
   {
    "duration": 14,
    "start_time": "2024-06-25T17:12:12.587Z"
   },
   {
    "duration": 16,
    "start_time": "2024-06-25T17:12:12.672Z"
   },
   {
    "duration": 28,
    "start_time": "2024-06-25T17:12:15.306Z"
   },
   {
    "duration": 29,
    "start_time": "2024-06-25T17:12:18.270Z"
   },
   {
    "duration": 24,
    "start_time": "2024-06-25T17:12:19.837Z"
   },
   {
    "duration": 17,
    "start_time": "2024-06-25T17:12:20.904Z"
   },
   {
    "duration": 622,
    "start_time": "2024-06-25T17:12:24.635Z"
   },
   {
    "duration": 108,
    "start_time": "2024-06-25T17:13:35.855Z"
   },
   {
    "duration": 111,
    "start_time": "2024-06-25T17:13:46.315Z"
   },
   {
    "duration": 794,
    "start_time": "2024-06-25T17:14:32.871Z"
   },
   {
    "duration": 701,
    "start_time": "2024-06-25T17:15:01.631Z"
   },
   {
    "duration": 331,
    "start_time": "2024-06-25T17:15:02.335Z"
   },
   {
    "duration": 17,
    "start_time": "2024-06-25T17:15:02.669Z"
   },
   {
    "duration": 24,
    "start_time": "2024-06-25T17:15:02.690Z"
   },
   {
    "duration": 13,
    "start_time": "2024-06-25T17:15:02.720Z"
   },
   {
    "duration": 20,
    "start_time": "2024-06-25T17:15:02.962Z"
   },
   {
    "duration": 16,
    "start_time": "2024-06-25T17:15:03.135Z"
   },
   {
    "duration": 17,
    "start_time": "2024-06-25T17:15:03.217Z"
   },
   {
    "duration": 30,
    "start_time": "2024-06-25T17:15:03.637Z"
   },
   {
    "duration": 30,
    "start_time": "2024-06-25T17:15:04.137Z"
   },
   {
    "duration": 23,
    "start_time": "2024-06-25T17:15:04.498Z"
   },
   {
    "duration": 17,
    "start_time": "2024-06-25T17:15:04.938Z"
   },
   {
    "duration": 132,
    "start_time": "2024-06-25T17:15:08.098Z"
   },
   {
    "duration": 101,
    "start_time": "2024-06-25T17:18:26.522Z"
   },
   {
    "duration": 138,
    "start_time": "2024-06-25T17:18:29.094Z"
   },
   {
    "duration": 20,
    "start_time": "2024-06-25T17:18:33.377Z"
   },
   {
    "duration": 14,
    "start_time": "2024-06-25T17:18:33.532Z"
   },
   {
    "duration": 53,
    "start_time": "2024-06-25T17:18:34.296Z"
   },
   {
    "duration": 101,
    "start_time": "2024-06-25T17:18:34.725Z"
   },
   {
    "duration": 25,
    "start_time": "2024-06-25T17:18:34.984Z"
   },
   {
    "duration": 22,
    "start_time": "2024-06-25T17:18:35.117Z"
   },
   {
    "duration": 41,
    "start_time": "2024-06-25T17:18:35.838Z"
   },
   {
    "duration": 120,
    "start_time": "2024-06-25T17:18:36.273Z"
   },
   {
    "duration": 13,
    "start_time": "2024-06-25T17:18:36.721Z"
   },
   {
    "duration": 32,
    "start_time": "2024-06-25T17:18:37.019Z"
   },
   {
    "duration": 25,
    "start_time": "2024-06-25T17:18:37.148Z"
   },
   {
    "duration": 27,
    "start_time": "2024-06-25T17:18:37.300Z"
   },
   {
    "duration": 31,
    "start_time": "2024-06-25T17:18:37.441Z"
   },
   {
    "duration": 77,
    "start_time": "2024-06-25T17:18:37.712Z"
   },
   {
    "duration": 57,
    "start_time": "2024-06-25T17:18:37.852Z"
   },
   {
    "duration": 50,
    "start_time": "2024-06-25T17:18:38.231Z"
   },
   {
    "duration": 13,
    "start_time": "2024-06-25T17:18:38.856Z"
   },
   {
    "duration": 4,
    "start_time": "2024-06-25T17:18:39.000Z"
   },
   {
    "duration": 1154,
    "start_time": "2024-06-25T17:19:07.147Z"
   },
   {
    "duration": 768,
    "start_time": "2024-06-25T17:19:11.953Z"
   },
   {
    "duration": 23,
    "start_time": "2024-06-25T17:19:13.079Z"
   },
   {
    "duration": 27,
    "start_time": "2024-06-25T17:19:13.260Z"
   },
   {
    "duration": 89,
    "start_time": "2024-06-25T17:19:20.465Z"
   },
   {
    "duration": 54,
    "start_time": "2024-06-25T17:19:25.987Z"
   },
   {
    "duration": 698,
    "start_time": "2024-06-25T17:19:38.036Z"
   },
   {
    "duration": 324,
    "start_time": "2024-06-25T17:19:38.739Z"
   },
   {
    "duration": 16,
    "start_time": "2024-06-25T17:19:39.066Z"
   },
   {
    "duration": 16,
    "start_time": "2024-06-25T17:19:39.120Z"
   },
   {
    "duration": 13,
    "start_time": "2024-06-25T17:19:39.810Z"
   },
   {
    "duration": 16,
    "start_time": "2024-06-25T17:19:40.199Z"
   },
   {
    "duration": 15,
    "start_time": "2024-06-25T17:19:40.460Z"
   },
   {
    "duration": 14,
    "start_time": "2024-06-25T17:19:40.586Z"
   },
   {
    "duration": 29,
    "start_time": "2024-06-25T17:19:41.463Z"
   },
   {
    "duration": 27,
    "start_time": "2024-06-25T17:19:41.712Z"
   },
   {
    "duration": 25,
    "start_time": "2024-06-25T17:19:41.873Z"
   },
   {
    "duration": 18,
    "start_time": "2024-06-25T17:19:42.643Z"
   },
   {
    "duration": 145,
    "start_time": "2024-06-25T17:19:44.404Z"
   },
   {
    "duration": 120,
    "start_time": "2024-06-25T17:19:45.644Z"
   },
   {
    "duration": 19,
    "start_time": "2024-06-25T17:19:46.792Z"
   },
   {
    "duration": 14,
    "start_time": "2024-06-25T17:19:46.946Z"
   },
   {
    "duration": 40,
    "start_time": "2024-06-25T17:19:48.611Z"
   },
   {
    "duration": 62,
    "start_time": "2024-06-25T17:19:50.343Z"
   },
   {
    "duration": 26,
    "start_time": "2024-06-25T17:19:51.352Z"
   },
   {
    "duration": 24,
    "start_time": "2024-06-25T17:19:51.510Z"
   },
   {
    "duration": 40,
    "start_time": "2024-06-25T17:19:52.252Z"
   },
   {
    "duration": 77,
    "start_time": "2024-06-25T17:19:52.671Z"
   },
   {
    "duration": 16,
    "start_time": "2024-06-25T17:19:53.214Z"
   },
   {
    "duration": 36,
    "start_time": "2024-06-25T17:19:53.701Z"
   },
   {
    "duration": 26,
    "start_time": "2024-06-25T17:19:53.903Z"
   },
   {
    "duration": 21,
    "start_time": "2024-06-25T17:19:54.651Z"
   },
   {
    "duration": 24,
    "start_time": "2024-06-25T17:19:55.357Z"
   },
   {
    "duration": 66,
    "start_time": "2024-06-25T17:19:56.440Z"
   },
   {
    "duration": 59,
    "start_time": "2024-06-25T17:19:56.634Z"
   },
   {
    "duration": 50,
    "start_time": "2024-06-25T17:19:57.371Z"
   },
   {
    "duration": 13,
    "start_time": "2024-06-25T17:19:58.498Z"
   },
   {
    "duration": 10,
    "start_time": "2024-06-25T17:21:51.819Z"
   },
   {
    "duration": 17,
    "start_time": "2024-06-25T17:22:02.485Z"
   },
   {
    "duration": 1263,
    "start_time": "2024-06-25T17:26:06.227Z"
   },
   {
    "duration": 16,
    "start_time": "2024-06-25T17:27:35.288Z"
   },
   {
    "duration": 113,
    "start_time": "2024-06-25T17:27:51.453Z"
   },
   {
    "duration": 250,
    "start_time": "2024-06-25T17:28:52.964Z"
   },
   {
    "duration": 314,
    "start_time": "2024-06-25T17:29:38.561Z"
   },
   {
    "duration": 303,
    "start_time": "2024-06-25T17:29:56.999Z"
   },
   {
    "duration": 22,
    "start_time": "2024-06-25T17:30:22.340Z"
   },
   {
    "duration": 13,
    "start_time": "2024-06-25T17:31:55.907Z"
   },
   {
    "duration": 17,
    "start_time": "2024-06-25T17:32:06.236Z"
   },
   {
    "duration": 112,
    "start_time": "2024-06-25T17:32:34.748Z"
   },
   {
    "duration": 28,
    "start_time": "2024-06-25T17:32:38.323Z"
   },
   {
    "duration": 37,
    "start_time": "2024-06-25T17:32:48.235Z"
   },
   {
    "duration": 17,
    "start_time": "2024-06-25T17:32:59.196Z"
   },
   {
    "duration": 281,
    "start_time": "2024-06-25T17:34:05.854Z"
   },
   {
    "duration": 23,
    "start_time": "2024-06-25T17:56:25.442Z"
   },
   {
    "duration": 13,
    "start_time": "2024-06-25T17:56:33.206Z"
   },
   {
    "duration": 23,
    "start_time": "2024-06-25T17:56:42.628Z"
   },
   {
    "duration": 317,
    "start_time": "2024-06-25T19:53:32.567Z"
   },
   {
    "duration": 3,
    "start_time": "2024-06-25T19:53:42.314Z"
   },
   {
    "duration": 3,
    "start_time": "2024-06-25T19:53:42.449Z"
   },
   {
    "duration": 4399,
    "start_time": "2024-06-25T19:53:51.211Z"
   },
   {
    "duration": 351,
    "start_time": "2024-06-25T19:53:55.613Z"
   },
   {
    "duration": 16,
    "start_time": "2024-06-25T19:53:55.967Z"
   },
   {
    "duration": 15,
    "start_time": "2024-06-25T19:53:55.988Z"
   },
   {
    "duration": 29,
    "start_time": "2024-06-25T19:53:56.006Z"
   },
   {
    "duration": 18,
    "start_time": "2024-06-25T19:53:56.038Z"
   },
   {
    "duration": 17,
    "start_time": "2024-06-25T19:53:56.059Z"
   },
   {
    "duration": 59,
    "start_time": "2024-06-25T19:53:56.081Z"
   },
   {
    "duration": 29,
    "start_time": "2024-06-25T19:53:59.121Z"
   },
   {
    "duration": 37,
    "start_time": "2024-06-25T19:53:59.526Z"
   },
   {
    "duration": 38,
    "start_time": "2024-06-25T19:53:59.777Z"
   },
   {
    "duration": 22,
    "start_time": "2024-06-25T19:53:59.899Z"
   },
   {
    "duration": 130,
    "start_time": "2024-06-25T19:54:00.535Z"
   },
   {
    "duration": 121,
    "start_time": "2024-06-25T19:54:00.900Z"
   },
   {
    "duration": 22,
    "start_time": "2024-06-25T19:54:01.141Z"
   },
   {
    "duration": 12,
    "start_time": "2024-06-25T19:54:01.242Z"
   },
   {
    "duration": 39,
    "start_time": "2024-06-25T19:54:01.950Z"
   },
   {
    "duration": 66,
    "start_time": "2024-06-25T19:54:02.416Z"
   },
   {
    "duration": 24,
    "start_time": "2024-06-25T19:54:02.719Z"
   },
   {
    "duration": 14,
    "start_time": "2024-06-25T19:54:02.913Z"
   },
   {
    "duration": 41,
    "start_time": "2024-06-25T19:54:04.074Z"
   },
   {
    "duration": 77,
    "start_time": "2024-06-25T19:54:04.670Z"
   },
   {
    "duration": 16,
    "start_time": "2024-06-25T19:54:05.437Z"
   },
   {
    "duration": 32,
    "start_time": "2024-06-25T19:54:06.633Z"
   },
   {
    "duration": 24,
    "start_time": "2024-06-25T19:54:06.848Z"
   },
   {
    "duration": 21,
    "start_time": "2024-06-25T19:54:07.099Z"
   },
   {
    "duration": 23,
    "start_time": "2024-06-25T19:54:07.389Z"
   },
   {
    "duration": 59,
    "start_time": "2024-06-25T19:54:07.939Z"
   },
   {
    "duration": 51,
    "start_time": "2024-06-25T19:54:08.254Z"
   },
   {
    "duration": 48,
    "start_time": "2024-06-25T19:54:08.896Z"
   },
   {
    "duration": 306,
    "start_time": "2024-06-25T19:54:10.456Z"
   },
   {
    "duration": 13,
    "start_time": "2024-06-25T19:54:10.768Z"
   },
   {
    "duration": 19,
    "start_time": "2024-06-25T19:54:24.317Z"
   },
   {
    "duration": 12,
    "start_time": "2024-06-25T19:56:10.791Z"
   },
   {
    "duration": 21,
    "start_time": "2024-06-25T19:56:16.497Z"
   },
   {
    "duration": 308,
    "start_time": "2024-06-25T19:56:56.901Z"
   },
   {
    "duration": 265,
    "start_time": "2024-06-25T20:02:26.706Z"
   },
   {
    "duration": 361,
    "start_time": "2024-06-25T20:03:47.517Z"
   },
   {
    "duration": 308,
    "start_time": "2024-06-25T20:03:54.095Z"
   },
   {
    "duration": 299,
    "start_time": "2024-06-25T20:04:47.042Z"
   },
   {
    "duration": 303,
    "start_time": "2024-06-25T20:05:18.206Z"
   },
   {
    "duration": 303,
    "start_time": "2024-06-25T20:05:23.673Z"
   },
   {
    "duration": 317,
    "start_time": "2024-06-25T20:07:05.918Z"
   },
   {
    "duration": 346,
    "start_time": "2024-06-25T20:07:39.080Z"
   },
   {
    "duration": 268,
    "start_time": "2024-06-25T20:09:47.404Z"
   },
   {
    "duration": 8,
    "start_time": "2024-06-25T20:11:42.874Z"
   },
   {
    "duration": 18,
    "start_time": "2024-06-25T20:11:58.658Z"
   },
   {
    "duration": 10,
    "start_time": "2024-06-25T20:12:12.936Z"
   },
   {
    "duration": 15,
    "start_time": "2024-06-25T20:13:05.728Z"
   },
   {
    "duration": 2216,
    "start_time": "2024-06-25T20:17:46.642Z"
   },
   {
    "duration": 398,
    "start_time": "2024-06-25T20:18:00.318Z"
   },
   {
    "duration": 18,
    "start_time": "2024-06-25T20:20:13.775Z"
   },
   {
    "duration": 1559,
    "start_time": "2024-06-25T20:31:13.154Z"
   },
   {
    "duration": 384,
    "start_time": "2024-06-25T20:31:14.719Z"
   },
   {
    "duration": 21,
    "start_time": "2024-06-25T20:31:15.107Z"
   },
   {
    "duration": 20,
    "start_time": "2024-06-25T20:31:15.211Z"
   },
   {
    "duration": 20,
    "start_time": "2024-06-25T20:31:16.104Z"
   },
   {
    "duration": 54,
    "start_time": "2024-06-25T20:31:16.355Z"
   },
   {
    "duration": 29,
    "start_time": "2024-06-25T20:31:16.528Z"
   },
   {
    "duration": 42,
    "start_time": "2024-06-25T20:31:16.613Z"
   },
   {
    "duration": 48,
    "start_time": "2024-06-25T20:31:17.026Z"
   },
   {
    "duration": 40,
    "start_time": "2024-06-25T20:31:17.278Z"
   },
   {
    "duration": 61,
    "start_time": "2024-06-25T20:31:17.444Z"
   },
   {
    "duration": 31,
    "start_time": "2024-06-25T20:31:17.529Z"
   },
   {
    "duration": 208,
    "start_time": "2024-06-25T20:31:17.956Z"
   },
   {
    "duration": 164,
    "start_time": "2024-06-25T20:31:18.197Z"
   },
   {
    "duration": 63,
    "start_time": "2024-06-25T20:31:18.373Z"
   },
   {
    "duration": 27,
    "start_time": "2024-06-25T20:31:18.452Z"
   },
   {
    "duration": 62,
    "start_time": "2024-06-25T20:31:18.875Z"
   },
   {
    "duration": 78,
    "start_time": "2024-06-25T20:31:19.114Z"
   },
   {
    "duration": 29,
    "start_time": "2024-06-25T20:31:19.283Z"
   },
   {
    "duration": 24,
    "start_time": "2024-06-25T20:31:19.369Z"
   },
   {
    "duration": 62,
    "start_time": "2024-06-25T20:31:19.803Z"
   },
   {
    "duration": 113,
    "start_time": "2024-06-25T20:31:20.046Z"
   },
   {
    "duration": 19,
    "start_time": "2024-06-25T20:31:20.290Z"
   },
   {
    "duration": 52,
    "start_time": "2024-06-25T20:31:20.461Z"
   },
   {
    "duration": 33,
    "start_time": "2024-06-25T20:31:20.541Z"
   },
   {
    "duration": 66,
    "start_time": "2024-06-25T20:31:20.625Z"
   },
   {
    "duration": 39,
    "start_time": "2024-06-25T20:31:20.705Z"
   },
   {
    "duration": 99,
    "start_time": "2024-06-25T20:31:20.889Z"
   },
   {
    "duration": 84,
    "start_time": "2024-06-25T20:31:20.994Z"
   },
   {
    "duration": 100,
    "start_time": "2024-06-25T20:31:21.138Z"
   },
   {
    "duration": 566,
    "start_time": "2024-06-25T20:31:21.461Z"
   },
   {
    "duration": 341,
    "start_time": "2024-06-25T20:31:22.032Z"
   },
   {
    "duration": 48,
    "start_time": "2024-06-25T20:31:22.394Z"
   },
   {
    "duration": 6,
    "start_time": "2024-06-25T20:31:23.659Z"
   },
   {
    "duration": 1409,
    "start_time": "2024-06-25T20:32:01.887Z"
   },
   {
    "duration": 33,
    "start_time": "2024-06-25T20:32:32.675Z"
   },
   {
    "duration": 75,
    "start_time": "2024-06-25T20:32:41.372Z"
   },
   {
    "duration": 15,
    "start_time": "2024-06-25T20:33:06.582Z"
   },
   {
    "duration": 16,
    "start_time": "2024-06-25T20:33:43.990Z"
   },
   {
    "duration": 19,
    "start_time": "2024-06-25T20:33:58.036Z"
   },
   {
    "duration": 19,
    "start_time": "2024-06-25T20:37:31.089Z"
   },
   {
    "duration": 34,
    "start_time": "2024-06-25T20:39:48.393Z"
   },
   {
    "duration": 220,
    "start_time": "2024-06-25T20:40:00.314Z"
   },
   {
    "duration": 257,
    "start_time": "2024-06-25T20:40:32.105Z"
   },
   {
    "duration": 228,
    "start_time": "2024-06-25T20:42:09.288Z"
   },
   {
    "duration": 288,
    "start_time": "2024-06-25T20:42:38.268Z"
   },
   {
    "duration": 205,
    "start_time": "2024-06-25T20:42:43.676Z"
   },
   {
    "duration": 284,
    "start_time": "2024-06-25T20:47:21.295Z"
   },
   {
    "duration": 395,
    "start_time": "2024-06-25T20:52:51.323Z"
   },
   {
    "duration": 351,
    "start_time": "2024-06-25T20:53:14.771Z"
   },
   {
    "duration": 331,
    "start_time": "2024-06-25T20:54:22.123Z"
   },
   {
    "duration": 300,
    "start_time": "2024-06-25T21:04:27.713Z"
   },
   {
    "duration": 386,
    "start_time": "2024-06-25T21:05:41.950Z"
   },
   {
    "duration": 693,
    "start_time": "2024-06-25T21:11:15.684Z"
   },
   {
    "duration": 173,
    "start_time": "2024-06-25T21:18:56.588Z"
   },
   {
    "duration": 1323,
    "start_time": "2024-06-25T21:19:11.251Z"
   },
   {
    "duration": 292,
    "start_time": "2024-06-25T21:19:12.578Z"
   },
   {
    "duration": 16,
    "start_time": "2024-06-25T21:19:12.873Z"
   },
   {
    "duration": 17,
    "start_time": "2024-06-25T21:19:12.894Z"
   },
   {
    "duration": 15,
    "start_time": "2024-06-25T21:19:13.111Z"
   },
   {
    "duration": 16,
    "start_time": "2024-06-25T21:19:13.567Z"
   },
   {
    "duration": 15,
    "start_time": "2024-06-25T21:19:13.855Z"
   },
   {
    "duration": 15,
    "start_time": "2024-06-25T21:19:14.002Z"
   },
   {
    "duration": 32,
    "start_time": "2024-06-25T21:19:14.872Z"
   },
   {
    "duration": 29,
    "start_time": "2024-06-25T21:19:15.265Z"
   },
   {
    "duration": 26,
    "start_time": "2024-06-25T21:19:15.661Z"
   },
   {
    "duration": 20,
    "start_time": "2024-06-25T21:19:15.965Z"
   },
   {
    "duration": 135,
    "start_time": "2024-06-25T21:19:16.651Z"
   },
   {
    "duration": 120,
    "start_time": "2024-06-25T21:19:17.072Z"
   },
   {
    "duration": 19,
    "start_time": "2024-06-25T21:19:17.361Z"
   },
   {
    "duration": 12,
    "start_time": "2024-06-25T21:19:17.498Z"
   },
   {
    "duration": 38,
    "start_time": "2024-06-25T21:19:18.207Z"
   },
   {
    "duration": 60,
    "start_time": "2024-06-25T21:19:18.790Z"
   },
   {
    "duration": 24,
    "start_time": "2024-06-25T21:19:19.072Z"
   },
   {
    "duration": 16,
    "start_time": "2024-06-25T21:19:19.219Z"
   },
   {
    "duration": 522,
    "start_time": "2024-06-25T21:19:20.248Z"
   },
   {
    "duration": 82,
    "start_time": "2024-06-25T21:19:21.455Z"
   },
   {
    "duration": 24,
    "start_time": "2024-06-25T21:19:29.746Z"
   },
   {
    "duration": 44,
    "start_time": "2024-06-25T21:19:31.984Z"
   },
   {
    "duration": 48,
    "start_time": "2024-06-25T21:19:32.126Z"
   },
   {
    "duration": 24,
    "start_time": "2024-06-25T21:19:32.675Z"
   },
   {
    "duration": 38,
    "start_time": "2024-06-25T21:19:33.197Z"
   },
   {
    "duration": 117,
    "start_time": "2024-06-25T21:19:35.518Z"
   },
   {
    "duration": 88,
    "start_time": "2024-06-25T21:19:35.992Z"
   },
   {
    "duration": 51,
    "start_time": "2024-06-25T21:19:37.413Z"
   },
   {
    "duration": 332,
    "start_time": "2024-06-25T21:19:40.236Z"
   },
   {
    "duration": 287,
    "start_time": "2024-06-25T21:19:40.681Z"
   },
   {
    "duration": 18,
    "start_time": "2024-06-25T21:19:41.983Z"
   },
   {
    "duration": 234,
    "start_time": "2024-06-25T21:19:42.530Z"
   },
   {
    "duration": 306,
    "start_time": "2024-06-25T21:19:44.655Z"
   },
   {
    "duration": 389,
    "start_time": "2024-06-25T21:20:14.136Z"
   },
   {
    "duration": 883,
    "start_time": "2024-06-25T21:21:00.175Z"
   },
   {
    "duration": 87,
    "start_time": "2024-06-25T21:21:58.520Z"
   },
   {
    "duration": 1237,
    "start_time": "2024-06-25T21:22:13.578Z"
   },
   {
    "duration": 292,
    "start_time": "2024-06-25T21:22:15.327Z"
   },
   {
    "duration": 15,
    "start_time": "2024-06-25T21:22:16.092Z"
   },
   {
    "duration": 19,
    "start_time": "2024-06-25T21:22:16.269Z"
   },
   {
    "duration": 13,
    "start_time": "2024-06-25T21:22:17.217Z"
   },
   {
    "duration": 48,
    "start_time": "2024-06-25T21:22:18.015Z"
   },
   {
    "duration": 27,
    "start_time": "2024-06-25T21:22:18.378Z"
   },
   {
    "duration": 22,
    "start_time": "2024-06-25T21:22:18.592Z"
   },
   {
    "duration": 46,
    "start_time": "2024-06-25T21:22:19.725Z"
   },
   {
    "duration": 29,
    "start_time": "2024-06-25T21:22:20.570Z"
   },
   {
    "duration": 29,
    "start_time": "2024-06-25T21:22:21.057Z"
   },
   {
    "duration": 21,
    "start_time": "2024-06-25T21:22:21.258Z"
   },
   {
    "duration": 155,
    "start_time": "2024-06-25T21:22:22.322Z"
   },
   {
    "duration": 133,
    "start_time": "2024-06-25T21:22:23.014Z"
   },
   {
    "duration": 20,
    "start_time": "2024-06-25T21:22:23.503Z"
   },
   {
    "duration": 29,
    "start_time": "2024-06-25T21:22:23.836Z"
   },
   {
    "duration": 56,
    "start_time": "2024-06-25T21:22:26.205Z"
   },
   {
    "duration": 62,
    "start_time": "2024-06-25T21:22:27.618Z"
   },
   {
    "duration": 28,
    "start_time": "2024-06-25T21:22:28.694Z"
   },
   {
    "duration": 34,
    "start_time": "2024-06-25T21:22:30.460Z"
   },
   {
    "duration": 39,
    "start_time": "2024-06-25T21:23:12.684Z"
   },
   {
    "duration": 91,
    "start_time": "2024-06-25T21:23:18.094Z"
   },
   {
    "duration": 14,
    "start_time": "2024-06-25T21:23:23.006Z"
   },
   {
    "duration": 510,
    "start_time": "2024-06-25T21:35:34.056Z"
   },
   {
    "duration": 1354,
    "start_time": "2024-06-25T21:35:49.023Z"
   },
   {
    "duration": 312,
    "start_time": "2024-06-25T21:35:50.380Z"
   },
   {
    "duration": 18,
    "start_time": "2024-06-25T21:35:50.694Z"
   },
   {
    "duration": 30,
    "start_time": "2024-06-25T21:35:50.716Z"
   },
   {
    "duration": 14,
    "start_time": "2024-06-25T21:35:50.749Z"
   },
   {
    "duration": 19,
    "start_time": "2024-06-25T21:35:50.766Z"
   },
   {
    "duration": 48,
    "start_time": "2024-06-25T21:35:50.788Z"
   },
   {
    "duration": 21,
    "start_time": "2024-06-25T21:35:50.839Z"
   },
   {
    "duration": 33,
    "start_time": "2024-06-25T21:35:51.052Z"
   },
   {
    "duration": 29,
    "start_time": "2024-06-25T21:35:51.282Z"
   },
   {
    "duration": 34,
    "start_time": "2024-06-25T21:35:51.451Z"
   },
   {
    "duration": 17,
    "start_time": "2024-06-25T21:35:51.532Z"
   },
   {
    "duration": 165,
    "start_time": "2024-06-25T21:35:51.948Z"
   },
   {
    "duration": 144,
    "start_time": "2024-06-25T21:35:52.202Z"
   },
   {
    "duration": 22,
    "start_time": "2024-06-25T21:35:52.365Z"
   },
   {
    "duration": 14,
    "start_time": "2024-06-25T21:35:52.449Z"
   },
   {
    "duration": 44,
    "start_time": "2024-06-25T21:35:52.871Z"
   },
   {
    "duration": 68,
    "start_time": "2024-06-25T21:35:53.118Z"
   },
   {
    "duration": 22,
    "start_time": "2024-06-25T21:35:53.286Z"
   },
   {
    "duration": 15,
    "start_time": "2024-06-25T21:35:53.370Z"
   },
   {
    "duration": 40,
    "start_time": "2024-06-25T21:35:53.781Z"
   },
   {
    "duration": 91,
    "start_time": "2024-06-25T21:35:54.034Z"
   },
   {
    "duration": 12,
    "start_time": "2024-06-25T21:35:54.286Z"
   },
   {
    "duration": 36,
    "start_time": "2024-06-25T21:35:54.452Z"
   },
   {
    "duration": 28,
    "start_time": "2024-06-25T21:35:54.533Z"
   },
   {
    "duration": 22,
    "start_time": "2024-06-25T21:35:54.620Z"
   },
   {
    "duration": 22,
    "start_time": "2024-06-25T21:35:54.701Z"
   },
   {
    "duration": 76,
    "start_time": "2024-06-25T21:35:54.865Z"
   },
   {
    "duration": 60,
    "start_time": "2024-06-25T21:35:54.950Z"
   },
   {
    "duration": 47,
    "start_time": "2024-06-25T21:35:55.118Z"
   },
   {
    "duration": 388,
    "start_time": "2024-06-25T21:35:55.945Z"
   },
   {
    "duration": 310,
    "start_time": "2024-06-25T21:35:56.337Z"
   },
   {
    "duration": 18,
    "start_time": "2024-06-25T21:35:56.650Z"
   },
   {
    "duration": 221,
    "start_time": "2024-06-25T21:35:56.677Z"
   },
   {
    "duration": 312,
    "start_time": "2024-06-25T21:35:58.266Z"
   },
   {
    "duration": 295,
    "start_time": "2024-06-25T21:35:58.582Z"
   },
   {
    "duration": 343,
    "start_time": "2024-06-25T21:39:11.793Z"
   },
   {
    "duration": 306,
    "start_time": "2024-06-25T21:41:34.253Z"
   },
   {
    "duration": 762,
    "start_time": "2024-06-25T21:42:27.824Z"
   },
   {
    "duration": 307,
    "start_time": "2024-06-25T21:42:59.131Z"
   },
   {
    "duration": 293,
    "start_time": "2024-06-25T21:43:15.117Z"
   },
   {
    "duration": 1298,
    "start_time": "2024-06-25T21:43:25.280Z"
   },
   {
    "duration": 282,
    "start_time": "2024-06-25T21:43:26.582Z"
   },
   {
    "duration": 16,
    "start_time": "2024-06-25T21:43:26.868Z"
   },
   {
    "duration": 17,
    "start_time": "2024-06-25T21:43:26.889Z"
   },
   {
    "duration": 33,
    "start_time": "2024-06-25T21:43:26.908Z"
   },
   {
    "duration": 17,
    "start_time": "2024-06-25T21:43:26.945Z"
   },
   {
    "duration": 18,
    "start_time": "2024-06-25T21:43:26.965Z"
   },
   {
    "duration": 58,
    "start_time": "2024-06-25T21:43:26.987Z"
   },
   {
    "duration": 42,
    "start_time": "2024-06-25T21:43:27.270Z"
   },
   {
    "duration": 33,
    "start_time": "2024-06-25T21:43:27.532Z"
   },
   {
    "duration": 26,
    "start_time": "2024-06-25T21:43:27.686Z"
   },
   {
    "duration": 17,
    "start_time": "2024-06-25T21:43:27.770Z"
   },
   {
    "duration": 132,
    "start_time": "2024-06-25T21:43:28.195Z"
   },
   {
    "duration": 142,
    "start_time": "2024-06-25T21:43:28.435Z"
   },
   {
    "duration": 23,
    "start_time": "2024-06-25T21:43:28.614Z"
   },
   {
    "duration": 14,
    "start_time": "2024-06-25T21:43:28.709Z"
   },
   {
    "duration": 46,
    "start_time": "2024-06-25T21:43:29.117Z"
   },
   {
    "duration": 65,
    "start_time": "2024-06-25T21:43:29.355Z"
   },
   {
    "duration": 25,
    "start_time": "2024-06-25T21:43:29.520Z"
   },
   {
    "duration": 19,
    "start_time": "2024-06-25T21:43:29.606Z"
   },
   {
    "duration": 49,
    "start_time": "2024-06-25T21:43:30.026Z"
   },
   {
    "duration": 84,
    "start_time": "2024-06-25T21:43:30.269Z"
   },
   {
    "duration": 13,
    "start_time": "2024-06-25T21:43:30.519Z"
   },
   {
    "duration": 41,
    "start_time": "2024-06-25T21:43:30.684Z"
   },
   {
    "duration": 31,
    "start_time": "2024-06-25T21:43:30.771Z"
   },
   {
    "duration": 23,
    "start_time": "2024-06-25T21:43:30.857Z"
   },
   {
    "duration": 25,
    "start_time": "2024-06-25T21:43:31.296Z"
   },
   {
    "duration": 74,
    "start_time": "2024-06-25T21:43:31.677Z"
   },
   {
    "duration": 66,
    "start_time": "2024-06-25T21:43:31.849Z"
   },
   {
    "duration": 52,
    "start_time": "2024-06-25T21:43:32.214Z"
   },
   {
    "duration": 402,
    "start_time": "2024-06-25T21:43:33.180Z"
   },
   {
    "duration": 296,
    "start_time": "2024-06-25T21:43:33.586Z"
   },
   {
    "duration": 19,
    "start_time": "2024-06-25T21:43:33.886Z"
   },
   {
    "duration": 234,
    "start_time": "2024-06-25T21:43:33.911Z"
   },
   {
    "duration": 351,
    "start_time": "2024-06-25T21:43:35.624Z"
   },
   {
    "duration": 314,
    "start_time": "2024-06-25T21:43:36.271Z"
   },
   {
    "duration": 316,
    "start_time": "2024-06-25T21:43:45.388Z"
   },
   {
    "duration": 343,
    "start_time": "2024-06-25T21:43:51.517Z"
   },
   {
    "duration": 278,
    "start_time": "2024-06-25T21:43:53.683Z"
   },
   {
    "duration": 289,
    "start_time": "2024-06-25T21:45:07.994Z"
   },
   {
    "duration": 1089,
    "start_time": "2024-06-25T21:45:33.500Z"
   },
   {
    "duration": 381,
    "start_time": "2024-06-25T21:45:47.924Z"
   },
   {
    "duration": 293,
    "start_time": "2024-06-25T21:45:54.713Z"
   },
   {
    "duration": 288,
    "start_time": "2024-06-25T21:48:07.281Z"
   },
   {
    "duration": 273,
    "start_time": "2024-06-25T21:48:14.436Z"
   },
   {
    "duration": 5,
    "start_time": "2024-06-25T22:01:00.830Z"
   },
   {
    "duration": 265,
    "start_time": "2024-06-25T22:01:01.317Z"
   },
   {
    "duration": 15,
    "start_time": "2024-06-25T22:01:01.935Z"
   },
   {
    "duration": 12,
    "start_time": "2024-06-25T22:01:02.072Z"
   },
   {
    "duration": 12,
    "start_time": "2024-06-25T22:01:03.129Z"
   },
   {
    "duration": 16,
    "start_time": "2024-06-25T22:01:03.526Z"
   },
   {
    "duration": 14,
    "start_time": "2024-06-25T22:01:03.784Z"
   },
   {
    "duration": 14,
    "start_time": "2024-06-25T22:01:03.922Z"
   },
   {
    "duration": 31,
    "start_time": "2024-06-25T22:01:04.713Z"
   },
   {
    "duration": 31,
    "start_time": "2024-06-25T22:01:05.125Z"
   },
   {
    "duration": 24,
    "start_time": "2024-06-25T22:01:05.380Z"
   },
   {
    "duration": 17,
    "start_time": "2024-06-25T22:01:05.511Z"
   },
   {
    "duration": 128,
    "start_time": "2024-06-25T22:01:06.203Z"
   },
   {
    "duration": 123,
    "start_time": "2024-06-25T22:01:06.632Z"
   },
   {
    "duration": 19,
    "start_time": "2024-06-25T22:01:07.097Z"
   },
   {
    "duration": 14,
    "start_time": "2024-06-25T22:01:07.269Z"
   },
   {
    "duration": 38,
    "start_time": "2024-06-25T22:01:08.288Z"
   },
   {
    "duration": 60,
    "start_time": "2024-06-25T22:01:09.455Z"
   },
   {
    "duration": 29,
    "start_time": "2024-06-25T22:01:10.167Z"
   },
   {
    "duration": 14,
    "start_time": "2024-06-25T22:01:10.602Z"
   },
   {
    "duration": 40,
    "start_time": "2024-06-25T22:01:11.701Z"
   },
   {
    "duration": 80,
    "start_time": "2024-06-25T22:01:12.267Z"
   },
   {
    "duration": 17,
    "start_time": "2024-06-25T22:01:16.466Z"
   },
   {
    "duration": 32,
    "start_time": "2024-06-25T22:01:17.449Z"
   },
   {
    "duration": 24,
    "start_time": "2024-06-25T22:01:19.911Z"
   },
   {
    "duration": 22,
    "start_time": "2024-06-25T22:01:20.207Z"
   },
   {
    "duration": 23,
    "start_time": "2024-06-25T22:01:22.280Z"
   },
   {
    "duration": 148,
    "start_time": "2024-06-25T22:01:26.604Z"
   },
   {
    "duration": 49,
    "start_time": "2024-06-25T22:01:26.767Z"
   },
   {
    "duration": 46,
    "start_time": "2024-06-25T22:01:27.126Z"
   },
   {
    "duration": 281,
    "start_time": "2024-06-25T22:01:29.217Z"
   },
   {
    "duration": 286,
    "start_time": "2024-06-25T22:01:29.502Z"
   },
   {
    "duration": 16,
    "start_time": "2024-06-25T22:01:29.828Z"
   },
   {
    "duration": 192,
    "start_time": "2024-06-25T22:01:29.986Z"
   },
   {
    "duration": 309,
    "start_time": "2024-06-25T22:01:30.691Z"
   },
   {
    "duration": 286,
    "start_time": "2024-06-25T22:01:31.003Z"
   },
   {
    "duration": 337,
    "start_time": "2024-06-25T22:01:31.764Z"
   },
   {
    "duration": 301,
    "start_time": "2024-06-25T22:01:32.105Z"
   },
   {
    "duration": 1644,
    "start_time": "2024-06-25T22:17:00.209Z"
   },
   {
    "duration": 237,
    "start_time": "2024-06-25T22:17:03.746Z"
   },
   {
    "duration": 231,
    "start_time": "2024-06-25T22:17:20.539Z"
   },
   {
    "duration": 339,
    "start_time": "2024-06-25T22:20:14.760Z"
   },
   {
    "duration": 309,
    "start_time": "2024-06-25T22:20:26.465Z"
   },
   {
    "duration": 154,
    "start_time": "2024-06-25T22:24:05.857Z"
   },
   {
    "duration": 87,
    "start_time": "2024-06-25T22:24:35.508Z"
   },
   {
    "duration": 131,
    "start_time": "2024-06-25T22:26:14.872Z"
   },
   {
    "duration": 1451,
    "start_time": "2024-06-25T22:26:32.109Z"
   },
   {
    "duration": 454,
    "start_time": "2024-06-25T22:26:33.575Z"
   },
   {
    "duration": 29,
    "start_time": "2024-06-25T22:26:34.044Z"
   },
   {
    "duration": 30,
    "start_time": "2024-06-25T22:26:34.096Z"
   },
   {
    "duration": 26,
    "start_time": "2024-06-25T22:26:34.134Z"
   },
   {
    "duration": 22,
    "start_time": "2024-06-25T22:26:34.207Z"
   },
   {
    "duration": 20,
    "start_time": "2024-06-25T22:26:34.959Z"
   },
   {
    "duration": 25,
    "start_time": "2024-06-25T22:26:35.092Z"
   },
   {
    "duration": 33,
    "start_time": "2024-06-25T22:26:35.963Z"
   },
   {
    "duration": 39,
    "start_time": "2024-06-25T22:26:36.488Z"
   },
   {
    "duration": 28,
    "start_time": "2024-06-25T22:26:36.860Z"
   },
   {
    "duration": 22,
    "start_time": "2024-06-25T22:26:37.024Z"
   },
   {
    "duration": 134,
    "start_time": "2024-06-25T22:26:37.864Z"
   },
   {
    "duration": 131,
    "start_time": "2024-06-25T22:26:38.299Z"
   },
   {
    "duration": 27,
    "start_time": "2024-06-25T22:26:38.587Z"
   },
   {
    "duration": 18,
    "start_time": "2024-06-25T22:26:38.724Z"
   },
   {
    "duration": 51,
    "start_time": "2024-06-25T22:26:39.444Z"
   },
   {
    "duration": 83,
    "start_time": "2024-06-25T22:26:39.875Z"
   },
   {
    "duration": 33,
    "start_time": "2024-06-25T22:26:41.094Z"
   },
   {
    "duration": 21,
    "start_time": "2024-06-25T22:26:41.536Z"
   },
   {
    "duration": 1392,
    "start_time": "2024-06-25T22:26:43.432Z"
   },
   {
    "duration": 30,
    "start_time": "2024-06-25T22:28:27.958Z"
   },
   {
    "duration": 108,
    "start_time": "2024-06-25T22:28:29.566Z"
   },
   {
    "duration": 14,
    "start_time": "2024-06-25T22:28:30.244Z"
   },
   {
    "duration": 40,
    "start_time": "2024-06-25T22:28:30.901Z"
   },
   {
    "duration": 34,
    "start_time": "2024-06-25T22:28:31.143Z"
   },
   {
    "duration": 40,
    "start_time": "2024-06-25T22:28:31.739Z"
   },
   {
    "duration": 58,
    "start_time": "2024-06-25T22:28:31.908Z"
   },
   {
    "duration": 67,
    "start_time": "2024-06-25T22:28:36.731Z"
   },
   {
    "duration": 62,
    "start_time": "2024-06-25T22:28:37.079Z"
   },
   {
    "duration": 769,
    "start_time": "2024-06-25T22:29:24.910Z"
   },
   {
    "duration": 263,
    "start_time": "2024-06-25T22:29:42.184Z"
   },
   {
    "duration": 378,
    "start_time": "2024-06-25T22:30:05.396Z"
   },
   {
    "duration": 289,
    "start_time": "2024-06-25T22:30:24.561Z"
   },
   {
    "duration": 82,
    "start_time": "2024-06-25T22:48:28.401Z"
   },
   {
    "duration": 14,
    "start_time": "2024-06-25T22:48:40.759Z"
   },
   {
    "duration": 1319,
    "start_time": "2024-06-25T22:49:15.428Z"
   },
   {
    "duration": 314,
    "start_time": "2024-06-25T22:49:16.769Z"
   },
   {
    "duration": 16,
    "start_time": "2024-06-25T22:49:17.087Z"
   },
   {
    "duration": 17,
    "start_time": "2024-06-25T22:49:20.675Z"
   },
   {
    "duration": 13,
    "start_time": "2024-06-25T22:49:21.465Z"
   },
   {
    "duration": 19,
    "start_time": "2024-06-25T22:49:21.948Z"
   },
   {
    "duration": 20,
    "start_time": "2024-06-25T22:49:22.262Z"
   },
   {
    "duration": 27,
    "start_time": "2024-06-25T22:49:22.426Z"
   },
   {
    "duration": 33,
    "start_time": "2024-06-25T22:49:23.260Z"
   },
   {
    "duration": 32,
    "start_time": "2024-06-25T22:49:24.387Z"
   },
   {
    "duration": 31,
    "start_time": "2024-06-25T22:49:24.553Z"
   },
   {
    "duration": 17,
    "start_time": "2024-06-25T22:49:24.651Z"
   },
   {
    "duration": 161,
    "start_time": "2024-06-25T22:49:25.064Z"
   },
   {
    "duration": 151,
    "start_time": "2024-06-25T22:49:25.307Z"
   },
   {
    "duration": 25,
    "start_time": "2024-06-25T22:49:25.476Z"
   },
   {
    "duration": 16,
    "start_time": "2024-06-25T22:49:25.559Z"
   },
   {
    "duration": 42,
    "start_time": "2024-06-25T22:49:26.603Z"
   },
   {
    "duration": 81,
    "start_time": "2024-06-25T22:49:27.066Z"
   },
   {
    "duration": 26,
    "start_time": "2024-06-25T22:49:27.329Z"
   },
   {
    "duration": 19,
    "start_time": "2024-06-25T22:49:27.482Z"
   },
   {
    "duration": 42,
    "start_time": "2024-06-25T22:49:28.489Z"
   },
   {
    "duration": 103,
    "start_time": "2024-06-25T22:49:28.724Z"
   },
   {
    "duration": 12,
    "start_time": "2024-06-25T22:49:28.976Z"
   },
   {
    "duration": 37,
    "start_time": "2024-06-25T22:49:30.254Z"
   },
   {
    "duration": 28,
    "start_time": "2024-06-25T22:49:30.770Z"
   },
   {
    "duration": 25,
    "start_time": "2024-06-25T22:49:30.965Z"
   },
   {
    "duration": 31,
    "start_time": "2024-06-25T22:49:31.438Z"
   },
   {
    "duration": 96,
    "start_time": "2024-06-25T22:49:32.003Z"
   },
   {
    "duration": 96,
    "start_time": "2024-06-25T22:49:33.544Z"
   },
   {
    "duration": 2371,
    "start_time": "2024-06-25T22:50:12.598Z"
   },
   {
    "duration": 260,
    "start_time": "2024-06-25T22:50:25.525Z"
   },
   {
    "duration": 348,
    "start_time": "2024-06-25T22:50:34.563Z"
   },
   {
    "duration": 300,
    "start_time": "2024-06-25T22:50:34.915Z"
   },
   {
    "duration": 23,
    "start_time": "2024-06-25T22:50:35.221Z"
   },
   {
    "duration": 234,
    "start_time": "2024-06-25T22:50:35.247Z"
   },
   {
    "duration": 347,
    "start_time": "2024-06-25T22:50:35.597Z"
   },
   {
    "duration": 409,
    "start_time": "2024-06-25T22:50:35.946Z"
   },
   {
    "duration": 385,
    "start_time": "2024-06-25T22:50:36.358Z"
   },
   {
    "duration": 325,
    "start_time": "2024-06-25T22:50:36.746Z"
   },
   {
    "duration": 22,
    "start_time": "2024-06-25T22:59:19.790Z"
   },
   {
    "duration": 8,
    "start_time": "2024-06-25T23:00:23.150Z"
   },
   {
    "duration": 12,
    "start_time": "2024-06-25T23:01:34.638Z"
   },
   {
    "duration": 15,
    "start_time": "2024-06-25T23:04:22.811Z"
   },
   {
    "duration": 15,
    "start_time": "2024-06-25T23:04:24.745Z"
   },
   {
    "duration": 18,
    "start_time": "2024-06-25T23:04:25.495Z"
   },
   {
    "duration": 19,
    "start_time": "2024-06-25T23:04:25.976Z"
   },
   {
    "duration": 174,
    "start_time": "2024-06-25T23:04:27.600Z"
   },
   {
    "duration": 31,
    "start_time": "2024-06-25T23:04:27.854Z"
   },
   {
    "duration": 38,
    "start_time": "2024-06-25T23:04:28.017Z"
   },
   {
    "duration": 33,
    "start_time": "2024-06-25T23:04:28.099Z"
   },
   {
    "duration": 88,
    "start_time": "2024-06-25T23:04:28.525Z"
   },
   {
    "duration": 888,
    "start_time": "2024-06-25T23:04:28.767Z"
   },
   {
    "duration": 0,
    "start_time": "2024-06-25T23:04:29.658Z"
   },
   {
    "duration": 0,
    "start_time": "2024-06-25T23:04:29.661Z"
   },
   {
    "duration": 1466,
    "start_time": "2024-06-25T23:04:58.818Z"
   },
   {
    "duration": 322,
    "start_time": "2024-06-25T23:05:00.287Z"
   },
   {
    "duration": 25,
    "start_time": "2024-06-25T23:05:00.613Z"
   },
   {
    "duration": 20,
    "start_time": "2024-06-25T23:05:00.644Z"
   },
   {
    "duration": 16,
    "start_time": "2024-06-25T23:05:00.668Z"
   },
   {
    "duration": 49,
    "start_time": "2024-06-25T23:05:00.688Z"
   },
   {
    "duration": 22,
    "start_time": "2024-06-25T23:05:00.740Z"
   },
   {
    "duration": 17,
    "start_time": "2024-06-25T23:05:00.767Z"
   },
   {
    "duration": 32,
    "start_time": "2024-06-25T23:05:02.185Z"
   },
   {
    "duration": 31,
    "start_time": "2024-06-25T23:05:03.071Z"
   },
   {
    "duration": 36,
    "start_time": "2024-06-25T23:05:03.394Z"
   },
   {
    "duration": 18,
    "start_time": "2024-06-25T23:05:03.562Z"
   },
   {
    "duration": 146,
    "start_time": "2024-06-25T23:05:04.334Z"
   },
   {
    "duration": 150,
    "start_time": "2024-06-25T23:05:05.057Z"
   },
   {
    "duration": 26,
    "start_time": "2024-06-25T23:05:05.567Z"
   },
   {
    "duration": 13,
    "start_time": "2024-06-25T23:05:06.228Z"
   },
   {
    "duration": 54,
    "start_time": "2024-06-25T23:05:07.462Z"
   },
   {
    "duration": 74,
    "start_time": "2024-06-25T23:05:08.000Z"
   },
   {
    "duration": 29,
    "start_time": "2024-06-25T23:05:08.363Z"
   },
   {
    "duration": 16,
    "start_time": "2024-06-25T23:05:08.531Z"
   },
   {
    "duration": 54,
    "start_time": "2024-06-25T23:05:09.723Z"
   },
   {
    "duration": 92,
    "start_time": "2024-06-25T23:05:10.839Z"
   },
   {
    "duration": 12,
    "start_time": "2024-06-25T23:05:11.812Z"
   },
   {
    "duration": 41,
    "start_time": "2024-06-25T23:05:12.258Z"
   },
   {
    "duration": 31,
    "start_time": "2024-06-25T23:05:12.459Z"
   },
   {
    "duration": 27,
    "start_time": "2024-06-25T23:05:12.692Z"
   },
   {
    "duration": 26,
    "start_time": "2024-06-25T23:05:12.888Z"
   },
   {
    "duration": 67,
    "start_time": "2024-06-25T23:05:13.297Z"
   },
   {
    "duration": 221,
    "start_time": "2024-06-25T23:05:13.485Z"
   },
   {
    "duration": 1536,
    "start_time": "2024-06-25T23:05:13.896Z"
   },
   {
    "duration": 0,
    "start_time": "2024-06-25T23:05:15.437Z"
   },
   {
    "duration": 0,
    "start_time": "2024-06-25T23:05:15.439Z"
   },
   {
    "duration": 353,
    "start_time": "2024-06-25T23:05:16.095Z"
   },
   {
    "duration": 33,
    "start_time": "2024-06-25T23:05:16.519Z"
   },
   {
    "duration": 191,
    "start_time": "2024-06-25T23:06:31.621Z"
   },
   {
    "duration": 14,
    "start_time": "2024-06-25T23:07:14.430Z"
   },
   {
    "duration": 14,
    "start_time": "2024-06-25T23:07:16.279Z"
   },
   {
    "duration": 1445,
    "start_time": "2024-06-25T23:07:25.273Z"
   },
   {
    "duration": 346,
    "start_time": "2024-06-25T23:07:26.722Z"
   },
   {
    "duration": 20,
    "start_time": "2024-06-25T23:07:27.071Z"
   },
   {
    "duration": 37,
    "start_time": "2024-06-25T23:07:27.096Z"
   },
   {
    "duration": 16,
    "start_time": "2024-06-25T23:07:27.136Z"
   },
   {
    "duration": 14,
    "start_time": "2024-06-25T23:07:27.155Z"
   },
   {
    "duration": 19,
    "start_time": "2024-06-25T23:07:27.173Z"
   },
   {
    "duration": 52,
    "start_time": "2024-06-25T23:07:27.194Z"
   },
   {
    "duration": 35,
    "start_time": "2024-06-25T23:07:27.268Z"
   },
   {
    "duration": 29,
    "start_time": "2024-06-25T23:07:27.521Z"
   },
   {
    "duration": 35,
    "start_time": "2024-06-25T23:07:27.685Z"
   },
   {
    "duration": 17,
    "start_time": "2024-06-25T23:07:27.773Z"
   },
   {
    "duration": 131,
    "start_time": "2024-06-25T23:07:28.186Z"
   },
   {
    "duration": 145,
    "start_time": "2024-06-25T23:07:28.440Z"
   },
   {
    "duration": 21,
    "start_time": "2024-06-25T23:07:28.604Z"
   },
   {
    "duration": 15,
    "start_time": "2024-06-25T23:07:28.690Z"
   },
   {
    "duration": 55,
    "start_time": "2024-06-25T23:07:29.105Z"
   },
   {
    "duration": 63,
    "start_time": "2024-06-25T23:07:29.352Z"
   },
   {
    "duration": 24,
    "start_time": "2024-06-25T23:07:29.521Z"
   },
   {
    "duration": 16,
    "start_time": "2024-06-25T23:07:29.600Z"
   },
   {
    "duration": 44,
    "start_time": "2024-06-25T23:07:36.868Z"
   },
   {
    "duration": 82,
    "start_time": "2024-06-25T23:07:37.536Z"
   },
   {
    "duration": 15,
    "start_time": "2024-06-25T23:07:38.352Z"
   },
   {
    "duration": 39,
    "start_time": "2024-06-25T23:07:38.690Z"
   },
   {
    "duration": 26,
    "start_time": "2024-06-25T23:07:39.077Z"
   },
   {
    "duration": 30,
    "start_time": "2024-06-25T23:07:39.242Z"
   },
   {
    "duration": 27,
    "start_time": "2024-06-25T23:07:39.403Z"
   },
   {
    "duration": 67,
    "start_time": "2024-06-25T23:07:39.727Z"
   },
   {
    "duration": 247,
    "start_time": "2024-06-25T23:07:39.900Z"
   },
   {
    "duration": 13,
    "start_time": "2024-06-25T23:08:10.236Z"
   },
   {
    "duration": 15,
    "start_time": "2024-06-25T23:08:17.544Z"
   },
   {
    "duration": 14,
    "start_time": "2024-06-25T23:08:20.367Z"
   },
   {
    "duration": 15,
    "start_time": "2024-06-25T23:08:30.736Z"
   },
   {
    "duration": 14,
    "start_time": "2024-06-25T23:08:31.185Z"
   },
   {
    "duration": 18,
    "start_time": "2024-06-25T23:08:31.432Z"
   },
   {
    "duration": 17,
    "start_time": "2024-06-25T23:08:31.556Z"
   },
   {
    "duration": 1205,
    "start_time": "2024-06-25T23:08:33.211Z"
   },
   {
    "duration": 88,
    "start_time": "2024-06-25T23:08:55.544Z"
   },
   {
    "duration": 1322,
    "start_time": "2024-06-25T23:09:10.382Z"
   },
   {
    "duration": 330,
    "start_time": "2024-06-25T23:09:11.708Z"
   },
   {
    "duration": 18,
    "start_time": "2024-06-25T23:09:13.036Z"
   },
   {
    "duration": 18,
    "start_time": "2024-06-25T23:09:13.534Z"
   },
   {
    "duration": 16,
    "start_time": "2024-06-25T23:09:26.024Z"
   },
   {
    "duration": 21,
    "start_time": "2024-06-25T23:09:29.411Z"
   },
   {
    "duration": 17,
    "start_time": "2024-06-25T23:09:35.834Z"
   },
   {
    "duration": 16,
    "start_time": "2024-06-25T23:09:36.279Z"
   },
   {
    "duration": 37,
    "start_time": "2024-06-25T23:09:41.394Z"
   },
   {
    "duration": 33,
    "start_time": "2024-06-25T23:09:44.588Z"
   },
   {
    "duration": 34,
    "start_time": "2024-06-25T23:09:46.066Z"
   },
   {
    "duration": 18,
    "start_time": "2024-06-25T23:09:46.455Z"
   },
   {
    "duration": 170,
    "start_time": "2024-06-25T23:09:48.383Z"
   },
   {
    "duration": 149,
    "start_time": "2024-06-25T23:09:50.804Z"
   },
   {
    "duration": 20,
    "start_time": "2024-06-25T23:09:52.904Z"
   },
   {
    "duration": 15,
    "start_time": "2024-06-25T23:09:53.422Z"
   },
   {
    "duration": 47,
    "start_time": "2024-06-25T23:09:56.003Z"
   },
   {
    "duration": 63,
    "start_time": "2024-06-25T23:09:58.422Z"
   },
   {
    "duration": 24,
    "start_time": "2024-06-25T23:09:59.268Z"
   },
   {
    "duration": 17,
    "start_time": "2024-06-25T23:09:59.665Z"
   },
   {
    "duration": 51,
    "start_time": "2024-06-25T23:10:01.308Z"
   },
   {
    "duration": 85,
    "start_time": "2024-06-25T23:10:02.901Z"
   },
   {
    "duration": 12,
    "start_time": "2024-06-25T23:10:05.197Z"
   },
   {
    "duration": 42,
    "start_time": "2024-06-25T23:10:07.324Z"
   },
   {
    "duration": 32,
    "start_time": "2024-06-25T23:10:08.628Z"
   },
   {
    "duration": 25,
    "start_time": "2024-06-25T23:10:09.076Z"
   },
   {
    "duration": 28,
    "start_time": "2024-06-25T23:10:10.009Z"
   },
   {
    "duration": 79,
    "start_time": "2024-06-25T23:10:11.351Z"
   },
   {
    "duration": 223,
    "start_time": "2024-06-25T23:10:16.001Z"
   },
   {
    "duration": 18,
    "start_time": "2024-06-25T23:11:04.583Z"
   },
   {
    "duration": 15,
    "start_time": "2024-06-25T23:11:24.177Z"
   },
   {
    "duration": 12,
    "start_time": "2024-06-25T23:11:30.659Z"
   },
   {
    "duration": 18,
    "start_time": "2024-06-25T23:11:33.154Z"
   },
   {
    "duration": 18,
    "start_time": "2024-06-25T23:11:35.072Z"
   },
   {
    "duration": 16,
    "start_time": "2024-06-25T23:11:42.257Z"
   },
   {
    "duration": 1220,
    "start_time": "2024-06-25T23:12:04.562Z"
   },
   {
    "duration": 1,
    "start_time": "2024-06-25T23:12:05.785Z"
   },
   {
    "duration": 0,
    "start_time": "2024-06-25T23:12:05.792Z"
   },
   {
    "duration": 46,
    "start_time": "2024-06-25T23:12:05.804Z"
   },
   {
    "duration": 89,
    "start_time": "2024-06-25T23:12:06.464Z"
   },
   {
    "duration": 843,
    "start_time": "2024-06-25T23:12:07.120Z"
   },
   {
    "duration": 1409,
    "start_time": "2024-06-25T23:12:21.556Z"
   },
   {
    "duration": 318,
    "start_time": "2024-06-25T23:12:22.970Z"
   },
   {
    "duration": 16,
    "start_time": "2024-06-25T23:12:23.293Z"
   },
   {
    "duration": 30,
    "start_time": "2024-06-25T23:12:23.314Z"
   },
   {
    "duration": 14,
    "start_time": "2024-06-25T23:12:23.348Z"
   },
   {
    "duration": 13,
    "start_time": "2024-06-25T23:12:23.366Z"
   },
   {
    "duration": 57,
    "start_time": "2024-06-25T23:12:23.384Z"
   },
   {
    "duration": 16,
    "start_time": "2024-06-25T23:12:23.445Z"
   },
   {
    "duration": 34,
    "start_time": "2024-06-25T23:12:23.565Z"
   },
   {
    "duration": 32,
    "start_time": "2024-06-25T23:12:23.814Z"
   },
   {
    "duration": 26,
    "start_time": "2024-06-25T23:12:23.983Z"
   },
   {
    "duration": 26,
    "start_time": "2024-06-25T23:12:24.063Z"
   },
   {
    "duration": 166,
    "start_time": "2024-06-25T23:12:24.485Z"
   },
   {
    "duration": 165,
    "start_time": "2024-06-25T23:12:24.738Z"
   },
   {
    "duration": 27,
    "start_time": "2024-06-25T23:12:24.919Z"
   },
   {
    "duration": 21,
    "start_time": "2024-06-25T23:12:24.987Z"
   },
   {
    "duration": 48,
    "start_time": "2024-06-25T23:12:26.054Z"
   },
   {
    "duration": 76,
    "start_time": "2024-06-25T23:12:28.501Z"
   },
   {
    "duration": 41,
    "start_time": "2024-06-25T23:12:28.958Z"
   },
   {
    "duration": 18,
    "start_time": "2024-06-25T23:12:29.135Z"
   },
   {
    "duration": 43,
    "start_time": "2024-06-25T23:12:30.369Z"
   },
   {
    "duration": 83,
    "start_time": "2024-06-25T23:12:31.453Z"
   },
   {
    "duration": 15,
    "start_time": "2024-06-25T23:12:32.717Z"
   },
   {
    "duration": 39,
    "start_time": "2024-06-25T23:12:34.495Z"
   },
   {
    "duration": 33,
    "start_time": "2024-06-25T23:12:34.867Z"
   },
   {
    "duration": 24,
    "start_time": "2024-06-25T23:12:35.096Z"
   },
   {
    "duration": 26,
    "start_time": "2024-06-25T23:12:35.288Z"
   },
   {
    "duration": 64,
    "start_time": "2024-06-25T23:12:36.205Z"
   },
   {
    "duration": 61,
    "start_time": "2024-06-25T23:12:44.497Z"
   },
   {
    "duration": 330,
    "start_time": "2024-06-25T23:12:46.702Z"
   },
   {
    "duration": 337,
    "start_time": "2024-06-25T23:12:48.124Z"
   },
   {
    "duration": 294,
    "start_time": "2024-06-25T23:12:48.600Z"
   },
   {
    "duration": 21,
    "start_time": "2024-06-25T23:12:50.208Z"
   },
   {
    "duration": 201,
    "start_time": "2024-06-25T23:12:51.085Z"
   },
   {
    "duration": 325,
    "start_time": "2024-06-25T23:12:52.868Z"
   },
   {
    "duration": 295,
    "start_time": "2024-06-25T23:12:53.243Z"
   },
   {
    "duration": 356,
    "start_time": "2024-06-25T23:12:54.583Z"
   },
   {
    "duration": 330,
    "start_time": "2024-06-25T23:12:54.943Z"
   },
   {
    "duration": 14,
    "start_time": "2024-06-25T23:12:56.516Z"
   },
   {
    "duration": 539,
    "start_time": "2024-06-25T23:13:09.237Z"
   },
   {
    "duration": 13,
    "start_time": "2024-06-25T23:13:13.274Z"
   },
   {
    "duration": 35,
    "start_time": "2024-06-25T23:23:27.953Z"
   },
   {
    "duration": 19,
    "start_time": "2024-06-25T23:24:14.918Z"
   },
   {
    "duration": 26,
    "start_time": "2024-06-25T23:25:05.375Z"
   },
   {
    "duration": 46,
    "start_time": "2024-06-25T23:25:26.792Z"
   },
   {
    "duration": 42,
    "start_time": "2024-06-25T23:25:45.789Z"
   },
   {
    "duration": 7,
    "start_time": "2024-06-25T23:25:56.869Z"
   },
   {
    "duration": 12,
    "start_time": "2024-06-25T23:26:01.060Z"
   },
   {
    "duration": 41,
    "start_time": "2024-06-25T23:26:32.758Z"
   },
   {
    "duration": 27,
    "start_time": "2024-06-25T23:27:03.186Z"
   },
   {
    "duration": 14,
    "start_time": "2024-06-25T23:27:03.577Z"
   },
   {
    "duration": 49,
    "start_time": "2024-06-25T23:27:04.195Z"
   },
   {
    "duration": 37,
    "start_time": "2024-06-25T23:32:48.172Z"
   },
   {
    "duration": 26,
    "start_time": "2024-06-25T23:36:06.899Z"
   },
   {
    "duration": 17,
    "start_time": "2024-06-25T23:37:07.783Z"
   },
   {
    "duration": 20,
    "start_time": "2024-06-25T23:37:22.323Z"
   },
   {
    "duration": 14,
    "start_time": "2024-06-25T23:37:38.047Z"
   },
   {
    "duration": 183,
    "start_time": "2024-06-25T23:39:15.753Z"
   },
   {
    "duration": 40,
    "start_time": "2024-06-25T23:39:43.418Z"
   },
   {
    "duration": 50,
    "start_time": "2024-06-25T23:40:54.577Z"
   },
   {
    "duration": 9,
    "start_time": "2024-06-25T23:42:44.551Z"
   },
   {
    "duration": 11,
    "start_time": "2024-06-25T23:42:52.888Z"
   },
   {
    "duration": 11,
    "start_time": "2024-06-25T23:44:17.730Z"
   },
   {
    "duration": 6,
    "start_time": "2024-06-25T23:45:49.322Z"
   },
   {
    "duration": 12,
    "start_time": "2024-06-25T23:46:05.684Z"
   },
   {
    "duration": 11,
    "start_time": "2024-06-25T23:46:21.325Z"
   },
   {
    "duration": 6,
    "start_time": "2024-06-25T23:46:40.741Z"
   },
   {
    "duration": 6,
    "start_time": "2024-06-25T23:46:53.986Z"
   },
   {
    "duration": 5,
    "start_time": "2024-06-25T23:47:34.748Z"
   },
   {
    "duration": 321,
    "start_time": "2024-07-02T15:12:52.312Z"
   },
   {
    "duration": 4979,
    "start_time": "2024-07-02T15:14:04.427Z"
   },
   {
    "duration": 419,
    "start_time": "2024-07-02T15:14:09.413Z"
   },
   {
    "duration": 17,
    "start_time": "2024-07-02T15:14:09.834Z"
   },
   {
    "duration": 20,
    "start_time": "2024-07-02T15:14:09.857Z"
   },
   {
    "duration": 15,
    "start_time": "2024-07-02T15:14:10.949Z"
   },
   {
    "duration": 13,
    "start_time": "2024-07-02T15:14:11.843Z"
   },
   {
    "duration": 15,
    "start_time": "2024-07-02T15:14:12.652Z"
   },
   {
    "duration": 22,
    "start_time": "2024-07-02T15:14:13.621Z"
   },
   {
    "duration": 29,
    "start_time": "2024-07-02T15:14:14.721Z"
   },
   {
    "duration": 43,
    "start_time": "2024-07-02T15:14:15.820Z"
   },
   {
    "duration": 26,
    "start_time": "2024-07-02T15:14:16.651Z"
   },
   {
    "duration": 17,
    "start_time": "2024-07-02T15:14:17.049Z"
   },
   {
    "duration": 130,
    "start_time": "2024-07-02T15:14:18.830Z"
   },
   {
    "duration": 128,
    "start_time": "2024-07-02T15:14:19.612Z"
   },
   {
    "duration": 31,
    "start_time": "2024-07-02T15:14:20.000Z"
   },
   {
    "duration": 12,
    "start_time": "2024-07-02T15:14:20.183Z"
   },
   {
    "duration": 43,
    "start_time": "2024-07-02T15:14:21.532Z"
   },
   {
    "duration": 60,
    "start_time": "2024-07-02T15:14:22.184Z"
   },
   {
    "duration": 24,
    "start_time": "2024-07-02T15:14:22.749Z"
   },
   {
    "duration": 19,
    "start_time": "2024-07-02T15:14:22.987Z"
   },
   {
    "duration": 43,
    "start_time": "2024-07-02T15:14:24.037Z"
   },
   {
    "duration": 78,
    "start_time": "2024-07-02T15:14:24.640Z"
   },
   {
    "duration": 13,
    "start_time": "2024-07-02T15:14:25.280Z"
   },
   {
    "duration": 34,
    "start_time": "2024-07-02T15:14:25.638Z"
   },
   {
    "duration": 24,
    "start_time": "2024-07-02T15:14:25.859Z"
   },
   {
    "duration": 24,
    "start_time": "2024-07-02T15:14:26.298Z"
   },
   {
    "duration": 23,
    "start_time": "2024-07-02T15:14:26.553Z"
   },
   {
    "duration": 64,
    "start_time": "2024-07-02T15:14:27.092Z"
   },
   {
    "duration": 50,
    "start_time": "2024-07-02T15:14:27.321Z"
   },
   {
    "duration": 253,
    "start_time": "2024-07-02T15:14:27.875Z"
   },
   {
    "duration": 308,
    "start_time": "2024-07-02T15:14:28.741Z"
   },
   {
    "duration": 297,
    "start_time": "2024-07-02T15:14:29.053Z"
   },
   {
    "duration": 22,
    "start_time": "2024-07-02T15:14:29.917Z"
   },
   {
    "duration": 194,
    "start_time": "2024-07-02T15:14:30.169Z"
   },
   {
    "duration": 378,
    "start_time": "2024-07-02T15:14:30.957Z"
   },
   {
    "duration": 304,
    "start_time": "2024-07-02T15:14:31.337Z"
   },
   {
    "duration": 307,
    "start_time": "2024-07-02T15:14:32.036Z"
   },
   {
    "duration": 300,
    "start_time": "2024-07-02T15:14:32.348Z"
   },
   {
    "duration": 19,
    "start_time": "2024-07-02T15:14:36.039Z"
   },
   {
    "duration": 13,
    "start_time": "2024-07-02T15:14:36.671Z"
   },
   {
    "duration": 5,
    "start_time": "2024-07-02T15:14:37.006Z"
   },
   {
    "duration": 421,
    "start_time": "2024-07-02T15:14:42.522Z"
   },
   {
    "duration": 1260,
    "start_time": "2024-07-02T15:19:55.818Z"
   },
   {
    "duration": 272,
    "start_time": "2024-07-02T15:19:57.084Z"
   },
   {
    "duration": 20,
    "start_time": "2024-07-02T15:19:57.360Z"
   },
   {
    "duration": 37,
    "start_time": "2024-07-02T15:19:57.385Z"
   },
   {
    "duration": 13,
    "start_time": "2024-07-02T15:19:57.539Z"
   },
   {
    "duration": 13,
    "start_time": "2024-07-02T15:19:57.785Z"
   },
   {
    "duration": 14,
    "start_time": "2024-07-02T15:19:57.953Z"
   },
   {
    "duration": 15,
    "start_time": "2024-07-02T15:19:58.037Z"
   },
   {
    "duration": 29,
    "start_time": "2024-07-02T15:19:58.462Z"
   },
   {
    "duration": 25,
    "start_time": "2024-07-02T15:19:58.713Z"
   },
   {
    "duration": 38,
    "start_time": "2024-07-02T15:19:58.869Z"
   },
   {
    "duration": 16,
    "start_time": "2024-07-02T15:19:58.952Z"
   },
   {
    "duration": 143,
    "start_time": "2024-07-02T15:19:59.388Z"
   },
   {
    "duration": 121,
    "start_time": "2024-07-02T15:19:59.638Z"
   },
   {
    "duration": 19,
    "start_time": "2024-07-02T15:19:59.788Z"
   },
   {
    "duration": 13,
    "start_time": "2024-07-02T15:19:59.875Z"
   },
   {
    "duration": 43,
    "start_time": "2024-07-02T15:20:00.298Z"
   },
   {
    "duration": 61,
    "start_time": "2024-07-02T15:20:00.541Z"
   },
   {
    "duration": 21,
    "start_time": "2024-07-02T15:20:00.702Z"
   },
   {
    "duration": 15,
    "start_time": "2024-07-02T15:20:00.786Z"
   },
   {
    "duration": 40,
    "start_time": "2024-07-02T15:20:01.207Z"
   },
   {
    "duration": 88,
    "start_time": "2024-07-02T15:20:01.458Z"
   },
   {
    "duration": 12,
    "start_time": "2024-07-02T15:20:01.704Z"
   },
   {
    "duration": 35,
    "start_time": "2024-07-02T15:20:02.905Z"
   },
   {
    "duration": 25,
    "start_time": "2024-07-02T15:20:03.062Z"
   },
   {
    "duration": 26,
    "start_time": "2024-07-02T15:20:03.245Z"
   },
   {
    "duration": 27,
    "start_time": "2024-07-02T15:20:03.401Z"
   },
   {
    "duration": 62,
    "start_time": "2024-07-02T15:20:03.726Z"
   },
   {
    "duration": 65,
    "start_time": "2024-07-02T15:20:03.872Z"
   },
   {
    "duration": 306,
    "start_time": "2024-07-02T15:20:04.197Z"
   },
   {
    "duration": 320,
    "start_time": "2024-07-02T15:20:04.907Z"
   },
   {
    "duration": 306,
    "start_time": "2024-07-02T15:20:05.236Z"
   },
   {
    "duration": 20,
    "start_time": "2024-07-02T15:20:05.545Z"
   },
   {
    "duration": 206,
    "start_time": "2024-07-02T15:20:05.588Z"
   },
   {
    "duration": 310,
    "start_time": "2024-07-02T15:20:06.316Z"
   },
   {
    "duration": 315,
    "start_time": "2024-07-02T15:20:06.630Z"
   },
   {
    "duration": 329,
    "start_time": "2024-07-02T15:20:07.189Z"
   },
   {
    "duration": 289,
    "start_time": "2024-07-02T15:20:07.527Z"
   },
   {
    "duration": 14,
    "start_time": "2024-07-02T15:20:10.676Z"
   },
   {
    "duration": 14,
    "start_time": "2024-07-02T15:20:14.899Z"
   },
   {
    "duration": 7,
    "start_time": "2024-07-02T15:20:15.333Z"
   },
   {
    "duration": 493,
    "start_time": "2024-07-02T15:20:19.141Z"
   },
   {
    "duration": 8,
    "start_time": "2024-07-02T15:20:25.558Z"
   },
   {
    "duration": 15,
    "start_time": "2024-07-02T16:01:28.539Z"
   },
   {
    "duration": 27,
    "start_time": "2024-07-02T16:03:19.448Z"
   },
   {
    "duration": 30,
    "start_time": "2024-07-02T16:09:11.221Z"
   },
   {
    "duration": 17,
    "start_time": "2024-07-02T17:02:05.442Z"
   },
   {
    "duration": 983,
    "start_time": "2024-07-02T17:06:16.249Z"
   },
   {
    "duration": 14,
    "start_time": "2024-07-02T17:07:09.663Z"
   },
   {
    "duration": 92,
    "start_time": "2024-07-02T17:08:00.992Z"
   },
   {
    "duration": 14,
    "start_time": "2024-07-02T17:08:04.338Z"
   },
   {
    "duration": 299,
    "start_time": "2024-07-02T17:08:06.107Z"
   },
   {
    "duration": 52,
    "start_time": "2024-07-02T17:08:22.897Z"
   },
   {
    "duration": 1279,
    "start_time": "2024-07-02T17:09:14.223Z"
   },
   {
    "duration": 277,
    "start_time": "2024-07-02T17:09:15.506Z"
   },
   {
    "duration": 16,
    "start_time": "2024-07-02T17:09:15.786Z"
   },
   {
    "duration": 17,
    "start_time": "2024-07-02T17:09:15.806Z"
   },
   {
    "duration": 13,
    "start_time": "2024-07-02T17:09:16.436Z"
   },
   {
    "duration": 1336,
    "start_time": "2024-07-02T17:09:18.204Z"
   },
   {
    "duration": 301,
    "start_time": "2024-07-02T17:09:29.358Z"
   },
   {
    "duration": 1368,
    "start_time": "2024-07-02T17:09:38.193Z"
   },
   {
    "duration": 274,
    "start_time": "2024-07-02T17:09:39.564Z"
   },
   {
    "duration": 17,
    "start_time": "2024-07-02T17:09:39.841Z"
   },
   {
    "duration": 16,
    "start_time": "2024-07-02T17:09:39.862Z"
   },
   {
    "duration": 14,
    "start_time": "2024-07-02T17:09:40.594Z"
   },
   {
    "duration": 17,
    "start_time": "2024-07-02T17:09:41.678Z"
   },
   {
    "duration": 34,
    "start_time": "2024-07-02T17:28:42.498Z"
   },
   {
    "duration": 5178,
    "start_time": "2024-07-02T19:42:38.426Z"
   },
   {
    "duration": 412,
    "start_time": "2024-07-02T19:42:43.607Z"
   },
   {
    "duration": 17,
    "start_time": "2024-07-02T19:42:44.025Z"
   },
   {
    "duration": 17,
    "start_time": "2024-07-02T19:42:44.047Z"
   },
   {
    "duration": 13,
    "start_time": "2024-07-02T19:42:47.462Z"
   },
   {
    "duration": 28,
    "start_time": "2024-07-02T19:42:48.605Z"
   },
   {
    "duration": 15,
    "start_time": "2024-07-02T19:42:49.476Z"
   },
   {
    "duration": 19,
    "start_time": "2024-07-02T19:42:49.882Z"
   },
   {
    "duration": 34,
    "start_time": "2024-07-02T19:42:51.265Z"
   },
   {
    "duration": 32,
    "start_time": "2024-07-02T19:42:52.088Z"
   },
   {
    "duration": 26,
    "start_time": "2024-07-02T19:42:52.465Z"
   },
   {
    "duration": 15,
    "start_time": "2024-07-02T19:42:52.655Z"
   },
   {
    "duration": 134,
    "start_time": "2024-07-02T19:42:53.590Z"
   },
   {
    "duration": 129,
    "start_time": "2024-07-02T19:42:54.133Z"
   },
   {
    "duration": 20,
    "start_time": "2024-07-02T19:42:54.475Z"
   },
   {
    "duration": 15,
    "start_time": "2024-07-02T19:42:54.653Z"
   },
   {
    "duration": 39,
    "start_time": "2024-07-02T19:42:55.554Z"
   },
   {
    "duration": 65,
    "start_time": "2024-07-02T19:42:56.995Z"
   },
   {
    "duration": 22,
    "start_time": "2024-07-02T19:42:57.477Z"
   },
   {
    "duration": 14,
    "start_time": "2024-07-02T19:42:57.646Z"
   },
   {
    "duration": 42,
    "start_time": "2024-07-02T19:42:58.681Z"
   },
   {
    "duration": 94,
    "start_time": "2024-07-02T19:42:59.568Z"
   },
   {
    "duration": 13,
    "start_time": "2024-07-02T19:43:01.769Z"
   },
   {
    "duration": 34,
    "start_time": "2024-07-02T19:43:02.722Z"
   },
   {
    "duration": 24,
    "start_time": "2024-07-02T19:43:02.942Z"
   },
   {
    "duration": 23,
    "start_time": "2024-07-02T19:43:03.365Z"
   },
   {
    "duration": 24,
    "start_time": "2024-07-02T19:43:03.770Z"
   },
   {
    "duration": 64,
    "start_time": "2024-07-02T19:43:04.775Z"
   },
   {
    "duration": 56,
    "start_time": "2024-07-02T19:43:05.606Z"
   },
   {
    "duration": 1671,
    "start_time": "2024-07-02T19:43:10.767Z"
   },
   {
    "duration": 170,
    "start_time": "2024-07-02T19:43:25.943Z"
   },
   {
    "duration": 1275,
    "start_time": "2024-07-02T19:43:54.763Z"
   },
   {
    "duration": 284,
    "start_time": "2024-07-02T19:43:56.043Z"
   },
   {
    "duration": 18,
    "start_time": "2024-07-02T19:43:56.330Z"
   },
   {
    "duration": 16,
    "start_time": "2024-07-02T19:43:56.353Z"
   },
   {
    "duration": 32,
    "start_time": "2024-07-02T19:43:56.376Z"
   },
   {
    "duration": 20,
    "start_time": "2024-07-02T19:43:56.412Z"
   },
   {
    "duration": 14,
    "start_time": "2024-07-02T19:43:56.435Z"
   },
   {
    "duration": 53,
    "start_time": "2024-07-02T19:43:56.453Z"
   },
   {
    "duration": 40,
    "start_time": "2024-07-02T19:43:56.765Z"
   },
   {
    "duration": 35,
    "start_time": "2024-07-02T19:43:57.016Z"
   },
   {
    "duration": 27,
    "start_time": "2024-07-02T19:43:57.178Z"
   },
   {
    "duration": 17,
    "start_time": "2024-07-02T19:43:57.263Z"
   },
   {
    "duration": 135,
    "start_time": "2024-07-02T19:43:57.681Z"
   },
   {
    "duration": 132,
    "start_time": "2024-07-02T19:43:57.929Z"
   },
   {
    "duration": 26,
    "start_time": "2024-07-02T19:43:58.098Z"
   },
   {
    "duration": 13,
    "start_time": "2024-07-02T19:43:58.182Z"
   },
   {
    "duration": 49,
    "start_time": "2024-07-02T19:43:58.605Z"
   },
   {
    "duration": 67,
    "start_time": "2024-07-02T19:43:58.851Z"
   },
   {
    "duration": 27,
    "start_time": "2024-07-02T19:43:59.013Z"
   },
   {
    "duration": 15,
    "start_time": "2024-07-02T19:43:59.099Z"
   },
   {
    "duration": 40,
    "start_time": "2024-07-02T19:43:59.516Z"
   },
   {
    "duration": 85,
    "start_time": "2024-07-02T19:43:59.765Z"
   },
   {
    "duration": 12,
    "start_time": "2024-07-02T19:44:00.749Z"
   },
   {
    "duration": 35,
    "start_time": "2024-07-02T19:44:01.648Z"
   },
   {
    "duration": 28,
    "start_time": "2024-07-02T19:44:02.045Z"
   },
   {
    "duration": 30,
    "start_time": "2024-07-02T19:44:02.299Z"
   },
   {
    "duration": 30,
    "start_time": "2024-07-02T19:44:02.539Z"
   },
   {
    "duration": 76,
    "start_time": "2024-07-02T19:44:03.474Z"
   },
   {
    "duration": 57,
    "start_time": "2024-07-02T19:44:03.960Z"
   },
   {
    "duration": 1739,
    "start_time": "2024-07-02T19:44:05.169Z"
   },
   {
    "duration": 115,
    "start_time": "2024-07-02T19:44:42.476Z"
   },
   {
    "duration": 1237,
    "start_time": "2024-07-02T19:45:55.010Z"
   },
   {
    "duration": 300,
    "start_time": "2024-07-02T19:45:56.251Z"
   },
   {
    "duration": 16,
    "start_time": "2024-07-02T19:45:56.557Z"
   },
   {
    "duration": 18,
    "start_time": "2024-07-02T19:45:56.579Z"
   },
   {
    "duration": 20,
    "start_time": "2024-07-02T19:45:56.608Z"
   },
   {
    "duration": 27,
    "start_time": "2024-07-02T19:45:56.631Z"
   },
   {
    "duration": 16,
    "start_time": "2024-07-02T19:45:56.661Z"
   },
   {
    "duration": 35,
    "start_time": "2024-07-02T19:45:56.681Z"
   },
   {
    "duration": 33,
    "start_time": "2024-07-02T19:45:57.082Z"
   },
   {
    "duration": 27,
    "start_time": "2024-07-02T19:45:57.262Z"
   },
   {
    "duration": 27,
    "start_time": "2024-07-02T19:45:57.426Z"
   },
   {
    "duration": 21,
    "start_time": "2024-07-02T19:45:57.513Z"
   },
   {
    "duration": 139,
    "start_time": "2024-07-02T19:45:57.953Z"
   },
   {
    "duration": 125,
    "start_time": "2024-07-02T19:45:58.212Z"
   },
   {
    "duration": 20,
    "start_time": "2024-07-02T19:45:58.348Z"
   },
   {
    "duration": 13,
    "start_time": "2024-07-02T19:45:58.434Z"
   },
   {
    "duration": 38,
    "start_time": "2024-07-02T19:45:58.846Z"
   },
   {
    "duration": 62,
    "start_time": "2024-07-02T19:45:59.102Z"
   },
   {
    "duration": 24,
    "start_time": "2024-07-02T19:45:59.335Z"
   },
   {
    "duration": 14,
    "start_time": "2024-07-02T19:45:59.363Z"
   },
   {
    "duration": 39,
    "start_time": "2024-07-02T19:45:59.767Z"
   },
   {
    "duration": 77,
    "start_time": "2024-07-02T19:46:00.013Z"
   },
   {
    "duration": 11,
    "start_time": "2024-07-02T19:46:00.264Z"
   },
   {
    "duration": 32,
    "start_time": "2024-07-02T19:46:00.464Z"
   },
   {
    "duration": 33,
    "start_time": "2024-07-02T19:46:00.519Z"
   },
   {
    "duration": 26,
    "start_time": "2024-07-02T19:46:00.603Z"
   },
   {
    "duration": 24,
    "start_time": "2024-07-02T19:46:00.680Z"
   },
   {
    "duration": 65,
    "start_time": "2024-07-02T19:46:00.849Z"
   },
   {
    "duration": 59,
    "start_time": "2024-07-02T19:46:00.932Z"
   },
   {
    "duration": 989,
    "start_time": "2024-07-02T19:46:01.100Z"
   },
   {
    "duration": 0,
    "start_time": "2024-07-02T19:46:02.093Z"
   },
   {
    "duration": 0,
    "start_time": "2024-07-02T19:46:02.096Z"
   },
   {
    "duration": 12,
    "start_time": "2024-07-02T19:47:04.884Z"
   },
   {
    "duration": 1403,
    "start_time": "2024-07-02T19:47:15.412Z"
   },
   {
    "duration": 327,
    "start_time": "2024-07-02T19:47:16.819Z"
   },
   {
    "duration": 20,
    "start_time": "2024-07-02T19:47:32.742Z"
   },
   {
    "duration": 19,
    "start_time": "2024-07-02T19:47:32.907Z"
   },
   {
    "duration": 16,
    "start_time": "2024-07-02T19:47:33.675Z"
   },
   {
    "duration": 11,
    "start_time": "2024-07-02T19:47:34.081Z"
   },
   {
    "duration": 16,
    "start_time": "2024-07-02T19:47:34.330Z"
   },
   {
    "duration": 20,
    "start_time": "2024-07-02T19:47:34.850Z"
   },
   {
    "duration": 33,
    "start_time": "2024-07-02T19:47:35.267Z"
   },
   {
    "duration": 40,
    "start_time": "2024-07-02T19:47:35.498Z"
   },
   {
    "duration": 26,
    "start_time": "2024-07-02T19:47:36.166Z"
   },
   {
    "duration": 16,
    "start_time": "2024-07-02T19:47:36.373Z"
   },
   {
    "duration": 147,
    "start_time": "2024-07-02T19:47:37.317Z"
   },
   {
    "duration": 128,
    "start_time": "2024-07-02T19:47:37.547Z"
   },
   {
    "duration": 25,
    "start_time": "2024-07-02T19:47:37.730Z"
   },
   {
    "duration": 13,
    "start_time": "2024-07-02T19:47:37.801Z"
   },
   {
    "duration": 49,
    "start_time": "2024-07-02T19:47:38.223Z"
   },
   {
    "duration": 66,
    "start_time": "2024-07-02T19:47:38.463Z"
   },
   {
    "duration": 26,
    "start_time": "2024-07-02T19:47:38.639Z"
   },
   {
    "duration": 21,
    "start_time": "2024-07-02T19:47:38.727Z"
   },
   {
    "duration": 46,
    "start_time": "2024-07-02T19:47:39.619Z"
   },
   {
    "duration": 90,
    "start_time": "2024-07-02T19:47:40.671Z"
   },
   {
    "duration": 13,
    "start_time": "2024-07-02T19:47:41.449Z"
   },
   {
    "duration": 43,
    "start_time": "2024-07-02T19:47:41.819Z"
   },
   {
    "duration": 30,
    "start_time": "2024-07-02T19:47:42.004Z"
   },
   {
    "duration": 24,
    "start_time": "2024-07-02T19:47:42.161Z"
   },
   {
    "duration": 25,
    "start_time": "2024-07-02T19:47:42.664Z"
   },
   {
    "duration": 72,
    "start_time": "2024-07-02T19:47:42.822Z"
   },
   {
    "duration": 52,
    "start_time": "2024-07-02T19:47:43.463Z"
   },
   {
    "duration": 1712,
    "start_time": "2024-07-02T19:47:44.802Z"
   },
   {
    "duration": 245,
    "start_time": "2024-07-02T19:48:22.015Z"
   },
   {
    "duration": 301,
    "start_time": "2024-07-02T19:48:23.951Z"
   },
   {
    "duration": 281,
    "start_time": "2024-07-02T19:48:24.256Z"
   },
   {
    "duration": 16,
    "start_time": "2024-07-02T19:48:24.952Z"
   },
   {
    "duration": 191,
    "start_time": "2024-07-02T19:48:25.120Z"
   },
   {
    "duration": 298,
    "start_time": "2024-07-02T19:48:26.177Z"
   },
   {
    "duration": 283,
    "start_time": "2024-07-02T19:48:26.479Z"
   },
   {
    "duration": 318,
    "start_time": "2024-07-02T19:48:27.727Z"
   },
   {
    "duration": 305,
    "start_time": "2024-07-02T19:48:28.050Z"
   },
   {
    "duration": 13,
    "start_time": "2024-07-02T19:48:29.115Z"
   },
   {
    "duration": 13,
    "start_time": "2024-07-02T19:48:29.374Z"
   },
   {
    "duration": 5,
    "start_time": "2024-07-02T19:48:29.539Z"
   },
   {
    "duration": 8,
    "start_time": "2024-07-02T19:48:30.728Z"
   },
   {
    "duration": 25,
    "start_time": "2024-07-02T19:48:31.680Z"
   },
   {
    "duration": 5108,
    "start_time": "2024-07-02T19:52:06.049Z"
   },
   {
    "duration": 406,
    "start_time": "2024-07-02T19:52:11.162Z"
   },
   {
    "duration": 15,
    "start_time": "2024-07-02T19:52:11.571Z"
   },
   {
    "duration": 16,
    "start_time": "2024-07-02T19:52:11.590Z"
   },
   {
    "duration": 14,
    "start_time": "2024-07-02T19:52:11.609Z"
   },
   {
    "duration": 20,
    "start_time": "2024-07-02T19:52:11.630Z"
   },
   {
    "duration": 17,
    "start_time": "2024-07-02T19:52:11.653Z"
   },
   {
    "duration": 16,
    "start_time": "2024-07-02T19:52:11.673Z"
   },
   {
    "duration": 64,
    "start_time": "2024-07-02T19:52:11.692Z"
   },
   {
    "duration": 37,
    "start_time": "2024-07-02T19:52:11.759Z"
   },
   {
    "duration": 54,
    "start_time": "2024-07-02T19:52:11.799Z"
   },
   {
    "duration": 16,
    "start_time": "2024-07-02T19:52:11.863Z"
   },
   {
    "duration": 165,
    "start_time": "2024-07-02T19:52:11.882Z"
   },
   {
    "duration": 145,
    "start_time": "2024-07-02T19:52:12.064Z"
   },
   {
    "duration": 34,
    "start_time": "2024-07-02T19:52:12.212Z"
   },
   {
    "duration": 14,
    "start_time": "2024-07-02T19:52:12.251Z"
   },
   {
    "duration": 45,
    "start_time": "2024-07-02T19:52:12.268Z"
   },
   {
    "duration": 75,
    "start_time": "2024-07-02T19:52:12.332Z"
   },
   {
    "duration": 38,
    "start_time": "2024-07-02T19:52:12.410Z"
   },
   {
    "duration": 19,
    "start_time": "2024-07-02T19:52:12.454Z"
   },
   {
    "duration": 63,
    "start_time": "2024-07-02T19:52:12.477Z"
   },
   {
    "duration": 84,
    "start_time": "2024-07-02T19:52:12.553Z"
   },
   {
    "duration": 19,
    "start_time": "2024-07-02T19:52:12.640Z"
   },
   {
    "duration": 35,
    "start_time": "2024-07-02T19:52:12.662Z"
   },
   {
    "duration": 44,
    "start_time": "2024-07-02T19:52:12.700Z"
   },
   {
    "duration": 24,
    "start_time": "2024-07-02T19:52:12.747Z"
   },
   {
    "duration": 24,
    "start_time": "2024-07-02T19:52:12.776Z"
   },
   {
    "duration": 94,
    "start_time": "2024-07-02T19:52:12.803Z"
   },
   {
    "duration": 67,
    "start_time": "2024-07-02T19:52:12.900Z"
   },
   {
    "duration": 263,
    "start_time": "2024-07-02T19:52:12.970Z"
   },
   {
    "duration": 341,
    "start_time": "2024-07-02T19:52:13.236Z"
   },
   {
    "duration": 302,
    "start_time": "2024-07-02T19:52:13.580Z"
   },
   {
    "duration": 17,
    "start_time": "2024-07-02T19:52:13.885Z"
   },
   {
    "duration": 294,
    "start_time": "2024-07-02T19:52:13.905Z"
   },
   {
    "duration": 330,
    "start_time": "2024-07-02T19:52:14.202Z"
   },
   {
    "duration": 311,
    "start_time": "2024-07-02T19:52:14.537Z"
   },
   {
    "duration": 328,
    "start_time": "2024-07-02T19:52:14.851Z"
   },
   {
    "duration": 304,
    "start_time": "2024-07-02T19:52:15.183Z"
   },
   {
    "duration": 13,
    "start_time": "2024-07-02T19:52:15.491Z"
   },
   {
    "duration": 30,
    "start_time": "2024-07-02T19:52:15.507Z"
   },
   {
    "duration": 11,
    "start_time": "2024-07-02T19:52:15.548Z"
   },
   {
    "duration": 9,
    "start_time": "2024-07-02T19:52:15.562Z"
   },
   {
    "duration": 61,
    "start_time": "2024-07-02T19:52:15.575Z"
   },
   {
    "duration": 50,
    "start_time": "2024-07-02T19:54:52.393Z"
   },
   {
    "duration": 308,
    "start_time": "2024-07-02T22:41:16.825Z"
   },
   {
    "duration": 22,
    "start_time": "2024-07-02T22:41:50.442Z"
   },
   {
    "duration": 5150,
    "start_time": "2024-07-02T22:42:09.074Z"
   },
   {
    "duration": 388,
    "start_time": "2024-07-02T22:42:14.228Z"
   },
   {
    "duration": 18,
    "start_time": "2024-07-02T22:42:14.618Z"
   },
   {
    "duration": 17,
    "start_time": "2024-07-02T22:42:14.640Z"
   },
   {
    "duration": 13,
    "start_time": "2024-07-02T22:42:14.660Z"
   },
   {
    "duration": 8,
    "start_time": "2024-07-02T22:42:15.604Z"
   },
   {
    "duration": 1223,
    "start_time": "2024-07-02T22:44:08.348Z"
   },
   {
    "duration": 1290,
    "start_time": "2024-07-02T22:44:21.723Z"
   },
   {
    "duration": 317,
    "start_time": "2024-07-02T22:44:23.016Z"
   },
   {
    "duration": 16,
    "start_time": "2024-07-02T22:44:23.336Z"
   },
   {
    "duration": 16,
    "start_time": "2024-07-02T22:44:23.359Z"
   },
   {
    "duration": 13,
    "start_time": "2024-07-02T22:44:24.393Z"
   },
   {
    "duration": 8,
    "start_time": "2024-07-02T22:44:24.920Z"
   },
   {
    "duration": 14,
    "start_time": "2024-07-02T22:44:26.081Z"
   },
   {
    "duration": 17,
    "start_time": "2024-07-02T22:44:26.448Z"
   },
   {
    "duration": 36,
    "start_time": "2024-07-02T22:44:28.430Z"
   },
   {
    "duration": 209,
    "start_time": "2024-07-02T22:44:30.858Z"
   },
   {
    "duration": 11,
    "start_time": "2024-07-02T22:44:42.665Z"
   },
   {
    "duration": 43,
    "start_time": "2024-07-02T22:45:03.939Z"
   },
   {
    "duration": 33,
    "start_time": "2024-07-02T22:45:09.511Z"
   },
   {
    "duration": 7,
    "start_time": "2024-07-02T22:45:27.994Z"
   },
   {
    "duration": 289,
    "start_time": "2024-07-02T22:45:31.918Z"
   },
   {
    "duration": 6,
    "start_time": "2024-07-02T22:45:55.023Z"
   },
   {
    "duration": 5,
    "start_time": "2024-07-02T22:46:02.683Z"
   },
   {
    "duration": 31,
    "start_time": "2024-07-02T22:46:07.805Z"
   },
   {
    "duration": 17,
    "start_time": "2024-07-02T22:46:31.024Z"
   },
   {
    "duration": 554,
    "start_time": "2024-07-02T22:48:09.562Z"
   },
   {
    "duration": 1198,
    "start_time": "2024-07-02T22:48:19.374Z"
   },
   {
    "duration": 274,
    "start_time": "2024-07-02T22:48:20.575Z"
   },
   {
    "duration": 15,
    "start_time": "2024-07-02T22:48:20.852Z"
   },
   {
    "duration": 15,
    "start_time": "2024-07-02T22:48:20.871Z"
   },
   {
    "duration": 12,
    "start_time": "2024-07-02T22:48:21.336Z"
   },
   {
    "duration": 22,
    "start_time": "2024-07-02T22:48:24.558Z"
   },
   {
    "duration": 13,
    "start_time": "2024-07-02T22:48:28.806Z"
   },
   {
    "duration": 15,
    "start_time": "2024-07-02T22:48:29.804Z"
   },
   {
    "duration": 34,
    "start_time": "2024-07-02T22:48:31.372Z"
   },
   {
    "duration": 31,
    "start_time": "2024-07-02T22:48:34.699Z"
   },
   {
    "duration": 25,
    "start_time": "2024-07-02T22:48:35.720Z"
   },
   {
    "duration": 17,
    "start_time": "2024-07-02T22:48:37.293Z"
   },
   {
    "duration": 129,
    "start_time": "2024-07-02T22:48:39.732Z"
   },
   {
    "duration": 179,
    "start_time": "2024-07-02T22:48:42.056Z"
   },
   {
    "duration": 326,
    "start_time": "2024-07-02T22:49:50.657Z"
   },
   {
    "duration": 20,
    "start_time": "2024-07-02T22:49:51.560Z"
   },
   {
    "duration": 23,
    "start_time": "2024-07-02T22:49:51.725Z"
   },
   {
    "duration": 22,
    "start_time": "2024-07-02T22:49:51.803Z"
   },
   {
    "duration": 23,
    "start_time": "2024-07-02T22:49:51.888Z"
   },
   {
    "duration": 23,
    "start_time": "2024-07-02T22:49:51.972Z"
   },
   {
    "duration": 1351,
    "start_time": "2024-07-02T22:50:00.791Z"
   },
   {
    "duration": 299,
    "start_time": "2024-07-02T22:50:02.146Z"
   },
   {
    "duration": 17,
    "start_time": "2024-07-02T22:50:02.448Z"
   },
   {
    "duration": 16,
    "start_time": "2024-07-02T22:50:02.471Z"
   },
   {
    "duration": 13,
    "start_time": "2024-07-02T22:50:02.514Z"
   },
   {
    "duration": 18,
    "start_time": "2024-07-02T22:50:02.531Z"
   },
   {
    "duration": 14,
    "start_time": "2024-07-02T22:50:02.553Z"
   },
   {
    "duration": 16,
    "start_time": "2024-07-02T22:50:02.617Z"
   },
   {
    "duration": 38,
    "start_time": "2024-07-02T22:50:03.044Z"
   },
   {
    "duration": 33,
    "start_time": "2024-07-02T22:50:03.281Z"
   },
   {
    "duration": 25,
    "start_time": "2024-07-02T22:50:03.447Z"
   },
   {
    "duration": 16,
    "start_time": "2024-07-02T22:50:03.531Z"
   },
   {
    "duration": 138,
    "start_time": "2024-07-02T22:50:03.970Z"
   },
   {
    "duration": 175,
    "start_time": "2024-07-02T22:50:04.281Z"
   },
   {
    "duration": 21,
    "start_time": "2024-07-02T22:50:05.161Z"
   },
   {
    "duration": 12,
    "start_time": "2024-07-02T22:50:05.370Z"
   },
   {
    "duration": 42,
    "start_time": "2024-07-02T22:50:06.200Z"
   },
   {
    "duration": 79,
    "start_time": "2024-07-02T22:50:06.664Z"
   },
   {
    "duration": 22,
    "start_time": "2024-07-02T22:50:06.972Z"
   },
   {
    "duration": 14,
    "start_time": "2024-07-02T22:50:07.209Z"
   },
   {
    "duration": 39,
    "start_time": "2024-07-02T22:50:16.259Z"
   },
   {
    "duration": 119,
    "start_time": "2024-07-02T22:50:17.265Z"
   },
   {
    "duration": 11,
    "start_time": "2024-07-02T22:50:19.955Z"
   },
   {
    "duration": 32,
    "start_time": "2024-07-02T22:50:21.419Z"
   },
   {
    "duration": 27,
    "start_time": "2024-07-02T22:50:22.964Z"
   },
   {
    "duration": 23,
    "start_time": "2024-07-02T22:50:23.134Z"
   },
   {
    "duration": 25,
    "start_time": "2024-07-02T22:50:23.519Z"
   },
   {
    "duration": 66,
    "start_time": "2024-07-02T22:50:24.154Z"
   },
   {
    "duration": 53,
    "start_time": "2024-07-02T22:50:24.488Z"
   },
   {
    "duration": 337,
    "start_time": "2024-07-02T22:50:25.179Z"
   },
   {
    "duration": 309,
    "start_time": "2024-07-02T22:53:53.908Z"
   },
   {
    "duration": 288,
    "start_time": "2024-07-02T22:54:03.328Z"
   },
   {
    "duration": 296,
    "start_time": "2024-07-02T22:56:04.719Z"
   },
   {
    "duration": 288,
    "start_time": "2024-07-02T22:56:20.613Z"
   },
   {
    "duration": 292,
    "start_time": "2024-07-02T22:56:47.439Z"
   },
   {
    "duration": 313,
    "start_time": "2024-07-02T22:58:10.650Z"
   },
   {
    "duration": 308,
    "start_time": "2024-07-02T23:06:58.213Z"
   },
   {
    "duration": 1789,
    "start_time": "2024-07-02T23:16:50.081Z"
   },
   {
    "duration": 132,
    "start_time": "2024-07-02T23:17:06.444Z"
   },
   {
    "duration": 106,
    "start_time": "2024-07-02T23:17:31.374Z"
   },
   {
    "duration": 15,
    "start_time": "2024-07-02T23:19:50.154Z"
   },
   {
    "duration": 19,
    "start_time": "2024-07-02T23:20:43.448Z"
   },
   {
    "duration": 16,
    "start_time": "2024-07-02T23:20:57.893Z"
   },
   {
    "duration": 287,
    "start_time": "2024-07-02T23:21:19.180Z"
   },
   {
    "duration": 19,
    "start_time": "2024-07-02T23:21:36.113Z"
   },
   {
    "duration": 15,
    "start_time": "2024-07-02T23:21:47.700Z"
   },
   {
    "duration": 308,
    "start_time": "2024-07-02T23:23:50.447Z"
   },
   {
    "duration": 373,
    "start_time": "2024-07-02T23:24:01.741Z"
   },
   {
    "duration": 539,
    "start_time": "2024-07-02T23:25:26.352Z"
   },
   {
    "duration": 494,
    "start_time": "2024-07-02T23:25:58.190Z"
   },
   {
    "duration": 321,
    "start_time": "2024-07-02T23:27:27.756Z"
   },
   {
    "duration": 363,
    "start_time": "2024-07-02T23:30:05.620Z"
   },
   {
    "duration": 298,
    "start_time": "2024-07-02T23:30:12.437Z"
   },
   {
    "duration": 33,
    "start_time": "2024-07-02T23:31:48.336Z"
   },
   {
    "duration": 185,
    "start_time": "2024-07-02T23:31:59.234Z"
   },
   {
    "duration": 307,
    "start_time": "2024-07-02T23:32:57.211Z"
   },
   {
    "duration": 290,
    "start_time": "2024-07-02T23:34:48.322Z"
   },
   {
    "duration": 1298,
    "start_time": "2024-07-02T23:39:54.614Z"
   },
   {
    "duration": 280,
    "start_time": "2024-07-02T23:39:55.915Z"
   },
   {
    "duration": 17,
    "start_time": "2024-07-02T23:39:56.198Z"
   },
   {
    "duration": 15,
    "start_time": "2024-07-02T23:39:56.390Z"
   },
   {
    "duration": 13,
    "start_time": "2024-07-02T23:39:57.540Z"
   },
   {
    "duration": 17,
    "start_time": "2024-07-02T23:39:58.150Z"
   },
   {
    "duration": 16,
    "start_time": "2024-07-02T23:39:58.759Z"
   },
   {
    "duration": 13,
    "start_time": "2024-07-02T23:39:58.973Z"
   },
   {
    "duration": 34,
    "start_time": "2024-07-02T23:39:59.964Z"
   },
   {
    "duration": 35,
    "start_time": "2024-07-02T23:40:00.541Z"
   },
   {
    "duration": 27,
    "start_time": "2024-07-02T23:40:00.938Z"
   },
   {
    "duration": 18,
    "start_time": "2024-07-02T23:40:01.133Z"
   },
   {
    "duration": 130,
    "start_time": "2024-07-02T23:40:02.136Z"
   },
   {
    "duration": 202,
    "start_time": "2024-07-02T23:40:02.935Z"
   },
   {
    "duration": 20,
    "start_time": "2024-07-02T23:40:03.547Z"
   },
   {
    "duration": 12,
    "start_time": "2024-07-02T23:40:03.742Z"
   },
   {
    "duration": 39,
    "start_time": "2024-07-02T23:40:04.720Z"
   },
   {
    "duration": 79,
    "start_time": "2024-07-02T23:40:05.621Z"
   },
   {
    "duration": 25,
    "start_time": "2024-07-02T23:40:06.280Z"
   },
   {
    "duration": 15,
    "start_time": "2024-07-02T23:40:06.483Z"
   },
   {
    "duration": 38,
    "start_time": "2024-07-02T23:40:07.703Z"
   },
   {
    "duration": 136,
    "start_time": "2024-07-02T23:40:08.320Z"
   },
   {
    "duration": 1154,
    "start_time": "2024-07-02T23:42:51.350Z"
   },
   {
    "duration": 61,
    "start_time": "2024-07-02T23:43:01.806Z"
   },
   {
    "duration": 1246,
    "start_time": "2024-07-02T23:43:19.227Z"
   },
   {
    "duration": 271,
    "start_time": "2024-07-02T23:43:20.476Z"
   },
   {
    "duration": 16,
    "start_time": "2024-07-02T23:43:20.750Z"
   },
   {
    "duration": 16,
    "start_time": "2024-07-02T23:43:20.812Z"
   },
   {
    "duration": 13,
    "start_time": "2024-07-02T23:43:21.565Z"
   },
   {
    "duration": 17,
    "start_time": "2024-07-02T23:43:22.030Z"
   },
   {
    "duration": 14,
    "start_time": "2024-07-02T23:43:22.511Z"
   },
   {
    "duration": 14,
    "start_time": "2024-07-02T23:43:22.674Z"
   },
   {
    "duration": 36,
    "start_time": "2024-07-02T23:43:23.507Z"
   },
   {
    "duration": 35,
    "start_time": "2024-07-02T23:43:24.020Z"
   },
   {
    "duration": 24,
    "start_time": "2024-07-02T23:43:24.382Z"
   },
   {
    "duration": 20,
    "start_time": "2024-07-02T23:43:24.542Z"
   },
   {
    "duration": 139,
    "start_time": "2024-07-02T23:43:25.708Z"
   },
   {
    "duration": 176,
    "start_time": "2024-07-02T23:43:26.519Z"
   },
   {
    "duration": 19,
    "start_time": "2024-07-02T23:43:28.686Z"
   },
   {
    "duration": 12,
    "start_time": "2024-07-02T23:43:28.921Z"
   },
   {
    "duration": 43,
    "start_time": "2024-07-02T23:43:29.811Z"
   },
   {
    "duration": 82,
    "start_time": "2024-07-02T23:43:30.349Z"
   },
   {
    "duration": 21,
    "start_time": "2024-07-02T23:43:31.656Z"
   },
   {
    "duration": 20,
    "start_time": "2024-07-02T23:43:32.038Z"
   },
   {
    "duration": 1333,
    "start_time": "2024-07-02T23:43:35.427Z"
   },
   {
    "duration": 77,
    "start_time": "2024-07-02T23:44:24.098Z"
   },
   {
    "duration": 114,
    "start_time": "2024-07-02T23:44:28.057Z"
   },
   {
    "duration": 12,
    "start_time": "2024-07-02T23:44:54.789Z"
   },
   {
    "duration": 32,
    "start_time": "2024-07-02T23:44:55.707Z"
   },
   {
    "duration": 25,
    "start_time": "2024-07-02T23:44:56.189Z"
   },
   {
    "duration": 21,
    "start_time": "2024-07-02T23:44:56.672Z"
   },
   {
    "duration": 22,
    "start_time": "2024-07-02T23:44:57.423Z"
   },
   {
    "duration": 61,
    "start_time": "2024-07-02T23:44:57.853Z"
   },
   {
    "duration": 51,
    "start_time": "2024-07-02T23:44:58.086Z"
   },
   {
    "duration": 245,
    "start_time": "2024-07-02T23:45:01.602Z"
   },
   {
    "duration": 307,
    "start_time": "2024-07-02T23:45:04.573Z"
   },
   {
    "duration": 296,
    "start_time": "2024-07-02T23:45:04.994Z"
   },
   {
    "duration": 16,
    "start_time": "2024-07-02T23:45:06.299Z"
   },
   {
    "duration": 199,
    "start_time": "2024-07-02T23:45:06.621Z"
   },
   {
    "duration": 306,
    "start_time": "2024-07-02T23:45:09.674Z"
   },
   {
    "duration": 306,
    "start_time": "2024-07-02T23:45:10.167Z"
   },
   {
    "duration": 305,
    "start_time": "2024-07-02T23:45:12.243Z"
   },
   {
    "duration": 295,
    "start_time": "2024-07-02T23:45:12.799Z"
   },
   {
    "duration": 14,
    "start_time": "2024-07-02T23:45:15.211Z"
   },
   {
    "duration": 13,
    "start_time": "2024-07-02T23:45:15.652Z"
   },
   {
    "duration": 6,
    "start_time": "2024-07-02T23:45:23.626Z"
   },
   {
    "duration": 9,
    "start_time": "2024-07-02T23:45:25.803Z"
   },
   {
    "duration": 25,
    "start_time": "2024-07-02T23:45:36.389Z"
   },
   {
    "duration": 1321,
    "start_time": "2024-07-03T04:21:41.805Z"
   },
   {
    "duration": 393,
    "start_time": "2024-07-03T04:21:43.129Z"
   },
   {
    "duration": 17,
    "start_time": "2024-07-03T04:21:43.525Z"
   },
   {
    "duration": 16,
    "start_time": "2024-07-03T04:21:43.546Z"
   },
   {
    "duration": 12,
    "start_time": "2024-07-03T04:21:43.565Z"
   },
   {
    "duration": 17,
    "start_time": "2024-07-03T04:21:43.607Z"
   },
   {
    "duration": 14,
    "start_time": "2024-07-03T04:21:43.626Z"
   },
   {
    "duration": 15,
    "start_time": "2024-07-03T04:21:43.643Z"
   },
   {
    "duration": 72,
    "start_time": "2024-07-03T04:21:43.661Z"
   },
   {
    "duration": 33,
    "start_time": "2024-07-03T04:21:43.739Z"
   },
   {
    "duration": 54,
    "start_time": "2024-07-03T04:21:43.776Z"
   },
   {
    "duration": 15,
    "start_time": "2024-07-03T04:21:43.833Z"
   },
   {
    "duration": 164,
    "start_time": "2024-07-03T04:21:43.851Z"
   },
   {
    "duration": 187,
    "start_time": "2024-07-03T04:21:44.019Z"
   },
   {
    "duration": 21,
    "start_time": "2024-07-03T04:21:44.208Z"
   },
   {
    "duration": 13,
    "start_time": "2024-07-03T04:21:44.233Z"
   },
   {
    "duration": 69,
    "start_time": "2024-07-03T04:21:44.248Z"
   },
   {
    "duration": 102,
    "start_time": "2024-07-03T04:21:44.320Z"
   },
   {
    "duration": 32,
    "start_time": "2024-07-03T04:21:44.425Z"
   },
   {
    "duration": 16,
    "start_time": "2024-07-03T04:21:44.460Z"
   },
   {
    "duration": 110,
    "start_time": "2024-07-03T04:21:44.508Z"
   },
   {
    "duration": 122,
    "start_time": "2024-07-03T04:21:44.621Z"
   },
   {
    "duration": 13,
    "start_time": "2024-07-03T04:21:44.745Z"
   },
   {
    "duration": 53,
    "start_time": "2024-07-03T04:21:44.761Z"
   },
   {
    "duration": 25,
    "start_time": "2024-07-03T04:21:44.817Z"
   },
   {
    "duration": 23,
    "start_time": "2024-07-03T04:21:44.845Z"
   },
   {
    "duration": 54,
    "start_time": "2024-07-03T04:21:44.870Z"
   },
   {
    "duration": 78,
    "start_time": "2024-07-03T04:21:44.932Z"
   },
   {
    "duration": 51,
    "start_time": "2024-07-03T04:21:45.013Z"
   },
   {
    "duration": 319,
    "start_time": "2024-07-03T04:21:45.066Z"
   },
   {
    "duration": 326,
    "start_time": "2024-07-03T04:21:45.387Z"
   },
   {
    "duration": 312,
    "start_time": "2024-07-03T04:21:45.716Z"
   },
   {
    "duration": 16,
    "start_time": "2024-07-03T04:21:46.031Z"
   },
   {
    "duration": 218,
    "start_time": "2024-07-03T04:21:46.050Z"
   },
   {
    "duration": 324,
    "start_time": "2024-07-03T04:21:46.271Z"
   },
   {
    "duration": 313,
    "start_time": "2024-07-03T04:21:46.598Z"
   },
   {
    "duration": 324,
    "start_time": "2024-07-03T04:21:46.914Z"
   },
   {
    "duration": 302,
    "start_time": "2024-07-03T04:21:47.240Z"
   },
   {
    "duration": 14,
    "start_time": "2024-07-03T04:21:47.545Z"
   },
   {
    "duration": 13,
    "start_time": "2024-07-03T04:21:47.561Z"
   },
   {
    "duration": 29,
    "start_time": "2024-07-03T04:21:47.577Z"
   },
   {
    "duration": 8,
    "start_time": "2024-07-03T04:21:47.609Z"
   },
   {
    "duration": 26,
    "start_time": "2024-07-03T04:21:47.620Z"
   }
  ],
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.19"
  },
  "toc": {
   "base_numbering": 1,
   "nav_menu": {},
   "number_sections": true,
   "sideBar": true,
   "skip_h1_title": false,
   "title_cell": "Table of Contents",
   "title_sidebar": "Contents",
   "toc_cell": false,
   "toc_position": {
    "height": "calc(100% - 180px)",
    "left": "10px",
    "top": "150px",
    "width": "393px"
   },
   "toc_section_display": true,
   "toc_window_display": true
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
